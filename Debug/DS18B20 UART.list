
DS18B20 UART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005be8  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000448  08005cf8  08005cf8  00006cf8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006140  08006140  000081cc  2**0
                  CONTENTS
  4 .ARM          00000008  08006140  08006140  00007140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006148  08006148  000081cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006148  08006148  00007148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800614c  0800614c  0000714c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08006150  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001b4  200001d0  0800631c  000081d0  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000384  0800631c  00008384  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000081cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001877  00000000  00000000  000081f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000008d5  00000000  00000000  00009a6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000260  00000000  00000000  0000a348  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001ac  00000000  00000000  0000a5a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010eb4  00000000  00000000  0000a754  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000026d2  00000000  00000000  0001b608  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005818c  00000000  00000000  0001dcda  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00075e66  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001e40  00000000  00000000  00075eac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000056  00000000  00000000  00077cec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d0 	.word	0x200001d0
 800012c:	00000000 	.word	0x00000000
 8000130:	08005ce0 	.word	0x08005ce0

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d4 	.word	0x200001d4
 800014c:	08005ce0 	.word	0x08005ce0

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_d2lz>:
 8000b68:	b538      	push	{r3, r4, r5, lr}
 8000b6a:	2200      	movs	r2, #0
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	4604      	mov	r4, r0
 8000b70:	460d      	mov	r5, r1
 8000b72:	f7ff ff23 	bl	80009bc <__aeabi_dcmplt>
 8000b76:	b928      	cbnz	r0, 8000b84 <__aeabi_d2lz+0x1c>
 8000b78:	4620      	mov	r0, r4
 8000b7a:	4629      	mov	r1, r5
 8000b7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b80:	f000 b80a 	b.w	8000b98 <__aeabi_d2ulz>
 8000b84:	4620      	mov	r0, r4
 8000b86:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000b8a:	f000 f805 	bl	8000b98 <__aeabi_d2ulz>
 8000b8e:	4240      	negs	r0, r0
 8000b90:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b94:	bd38      	pop	{r3, r4, r5, pc}
 8000b96:	bf00      	nop

08000b98 <__aeabi_d2ulz>:
 8000b98:	b5d0      	push	{r4, r6, r7, lr}
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	4b0b      	ldr	r3, [pc, #44]	@ (8000bcc <__aeabi_d2ulz+0x34>)
 8000b9e:	4606      	mov	r6, r0
 8000ba0:	460f      	mov	r7, r1
 8000ba2:	f7ff fc99 	bl	80004d8 <__aeabi_dmul>
 8000ba6:	f7ff ff6f 	bl	8000a88 <__aeabi_d2uiz>
 8000baa:	4604      	mov	r4, r0
 8000bac:	f7ff fc1a 	bl	80003e4 <__aeabi_ui2d>
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	4b07      	ldr	r3, [pc, #28]	@ (8000bd0 <__aeabi_d2ulz+0x38>)
 8000bb4:	f7ff fc90 	bl	80004d8 <__aeabi_dmul>
 8000bb8:	4602      	mov	r2, r0
 8000bba:	460b      	mov	r3, r1
 8000bbc:	4630      	mov	r0, r6
 8000bbe:	4639      	mov	r1, r7
 8000bc0:	f7ff fad2 	bl	8000168 <__aeabi_dsub>
 8000bc4:	f7ff ff60 	bl	8000a88 <__aeabi_d2uiz>
 8000bc8:	4621      	mov	r1, r4
 8000bca:	bdd0      	pop	{r4, r6, r7, pc}
 8000bcc:	3df00000 	.word	0x3df00000
 8000bd0:	41f00000 	.word	0x41f00000

08000bd4 <Ds18b20_Init>:
#include <stdbool.h>
#include <stdint.h>

// Inicializa o sensor DS18B20
bool Ds18b20_Init(void)
{
 8000bd4:	b580      	push	{r7, lr}
 8000bd6:	b082      	sub	sp, #8
 8000bd8:	af00      	add	r7, sp, #0
    uint16_t t = 0;
 8000bda:	2300      	movs	r3, #0
 8000bdc:	80fb      	strh	r3, [r7, #6]
    Ds18b20_PinOut();          // Configura o pino como saída
 8000bde:	f000 f8cf 	bl	8000d80 <Ds18b20_PinOut>
    Ds18b20_PinHigh;           // Coloca o pino em nível alto
 8000be2:	4b21      	ldr	r3, [pc, #132]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000be4:	68db      	ldr	r3, [r3, #12]
 8000be6:	4a20      	ldr	r2, [pc, #128]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000be8:	f043 0301 	orr.w	r3, r3, #1
 8000bec:	60d3      	str	r3, [r2, #12]
    Delay_us(5);               // Espera 5 microsegundos
 8000bee:	2005      	movs	r0, #5
 8000bf0:	f000 fbda 	bl	80013a8 <Delay_us>
    Ds18b20_PinLow;            // Coloca o pino em nível baixo para resetar o DS18B20
 8000bf4:	4b1c      	ldr	r3, [pc, #112]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000bf6:	68db      	ldr	r3, [r3, #12]
 8000bf8:	4a1b      	ldr	r2, [pc, #108]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000bfa:	f023 0301 	bic.w	r3, r3, #1
 8000bfe:	60d3      	str	r3, [r2, #12]
    Delay_us(750);             // Mantém o pino em nível baixo por 750 microsegundos
 8000c00:	f240 20ee 	movw	r0, #750	@ 0x2ee
 8000c04:	f000 fbd0 	bl	80013a8 <Delay_us>
    Ds18b20_PinHigh;           // Coloca o pino novamente em nível alto
 8000c08:	4b17      	ldr	r3, [pc, #92]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000c0a:	68db      	ldr	r3, [r3, #12]
 8000c0c:	4a16      	ldr	r2, [pc, #88]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000c0e:	f043 0301 	orr.w	r3, r3, #1
 8000c12:	60d3      	str	r3, [r2, #12]
    Ds18b20_PinIn();           // Configura o pino como entrada para esperar a resposta do sensor
 8000c14:	f000 f8c8 	bl	8000da8 <Ds18b20_PinIn>

    // Aguarda o pulso de presença do DS18B20
    while(GPIOB->IDR & GPIO_IDR_IDR0)
 8000c18:	e00a      	b.n	8000c30 <Ds18b20_Init+0x5c>
    {
        t++;                    // Incrementa o contador
 8000c1a:	88fb      	ldrh	r3, [r7, #6]
 8000c1c:	3301      	adds	r3, #1
 8000c1e:	80fb      	strh	r3, [r7, #6]
        if(t > 60) return false; // Se ultrapassar 60 ciclos, retorna erro
 8000c20:	88fb      	ldrh	r3, [r7, #6]
 8000c22:	2b3c      	cmp	r3, #60	@ 0x3c
 8000c24:	d901      	bls.n	8000c2a <Ds18b20_Init+0x56>
 8000c26:	2300      	movs	r3, #0
 8000c28:	e019      	b.n	8000c5e <Ds18b20_Init+0x8a>
        Delay_us(1);            // Aguarda 1 microsegundo entre as leituras
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	f000 fbbc 	bl	80013a8 <Delay_us>
    while(GPIOB->IDR & GPIO_IDR_IDR0)
 8000c30:	4b0d      	ldr	r3, [pc, #52]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000c32:	689b      	ldr	r3, [r3, #8]
 8000c34:	f003 0301 	and.w	r3, r3, #1
 8000c38:	2b00      	cmp	r3, #0
 8000c3a:	d1ee      	bne.n	8000c1a <Ds18b20_Init+0x46>
    }
    t = 480 - t;                // Calcula o tempo restante
 8000c3c:	88fb      	ldrh	r3, [r7, #6]
 8000c3e:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8000c42:	80fb      	strh	r3, [r7, #6]
    Ds18b20_PinOut();           // Configura o pino como saída
 8000c44:	f000 f89c 	bl	8000d80 <Ds18b20_PinOut>
    Delay_us(t);                // Espera o tempo restante
 8000c48:	88fb      	ldrh	r3, [r7, #6]
 8000c4a:	4618      	mov	r0, r3
 8000c4c:	f000 fbac 	bl	80013a8 <Delay_us>
    Ds18b20_PinHigh;            // Coloca o pino em nível alto
 8000c50:	4b05      	ldr	r3, [pc, #20]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000c52:	68db      	ldr	r3, [r3, #12]
 8000c54:	4a04      	ldr	r2, [pc, #16]	@ (8000c68 <Ds18b20_Init+0x94>)
 8000c56:	f043 0301 	orr.w	r3, r3, #1
 8000c5a:	60d3      	str	r3, [r2, #12]
    return true;                // Retorna sucesso
 8000c5c:	2301      	movs	r3, #1
}
 8000c5e:	4618      	mov	r0, r3
 8000c60:	3708      	adds	r7, #8
 8000c62:	46bd      	mov	sp, r7
 8000c64:	bd80      	pop	{r7, pc}
 8000c66:	bf00      	nop
 8000c68:	40010c00 	.word	0x40010c00

08000c6c <Ds18b20Write>:

// Faz a escrita de um byte para o sensor DS18B20
void Ds18b20Write(uint8_t Data)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	b084      	sub	sp, #16
 8000c70:	af00      	add	r7, sp, #0
 8000c72:	4603      	mov	r3, r0
 8000c74:	71fb      	strb	r3, [r7, #7]
    Ds18b20_PinOut();           // Configura o pino como saída
 8000c76:	f000 f883 	bl	8000d80 <Ds18b20_PinOut>

    for(uint8_t i = 0; i < 8; i++) // Escreve cada bit, um por vez
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	73fb      	strb	r3, [r7, #15]
 8000c7e:	e029      	b.n	8000cd4 <Ds18b20Write+0x68>
    {
        Ds18b20_PinLow;         // Coloca o pino em nível baixo
 8000c80:	4b18      	ldr	r3, [pc, #96]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000c82:	68db      	ldr	r3, [r3, #12]
 8000c84:	4a17      	ldr	r2, [pc, #92]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000c86:	f023 0301 	bic.w	r3, r3, #1
 8000c8a:	60d3      	str	r3, [r2, #12]
        Delay_us(10);           // Aguarda 10 microsegundos
 8000c8c:	200a      	movs	r0, #10
 8000c8e:	f000 fb8b 	bl	80013a8 <Delay_us>

        if(Data & 0x01)         // Verifica o bit menos significativo
 8000c92:	79fb      	ldrb	r3, [r7, #7]
 8000c94:	f003 0301 	and.w	r3, r3, #1
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d006      	beq.n	8000caa <Ds18b20Write+0x3e>
            Ds18b20_PinHigh;    // Se for 1, coloca o pino em nível alto
 8000c9c:	4b11      	ldr	r3, [pc, #68]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000c9e:	68db      	ldr	r3, [r3, #12]
 8000ca0:	4a10      	ldr	r2, [pc, #64]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000ca2:	f043 0301 	orr.w	r3, r3, #1
 8000ca6:	60d3      	str	r3, [r2, #12]
 8000ca8:	e005      	b.n	8000cb6 <Ds18b20Write+0x4a>
        else
            Ds18b20_PinLow;     // Se for 0, mantém em nível baixo
 8000caa:	4b0e      	ldr	r3, [pc, #56]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000cac:	68db      	ldr	r3, [r3, #12]
 8000cae:	4a0d      	ldr	r2, [pc, #52]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000cb0:	f023 0301 	bic.w	r3, r3, #1
 8000cb4:	60d3      	str	r3, [r2, #12]

        Data >>= 1;             // Desloca o dado para a direita
 8000cb6:	79fb      	ldrb	r3, [r7, #7]
 8000cb8:	085b      	lsrs	r3, r3, #1
 8000cba:	71fb      	strb	r3, [r7, #7]
        Delay_us(50);           // Aguarda 50 microsegundos
 8000cbc:	2032      	movs	r0, #50	@ 0x32
 8000cbe:	f000 fb73 	bl	80013a8 <Delay_us>
        Ds18b20_PinHigh;        // Coloca o pino em nível alto
 8000cc2:	4b08      	ldr	r3, [pc, #32]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000cc4:	68db      	ldr	r3, [r3, #12]
 8000cc6:	4a07      	ldr	r2, [pc, #28]	@ (8000ce4 <Ds18b20Write+0x78>)
 8000cc8:	f043 0301 	orr.w	r3, r3, #1
 8000ccc:	60d3      	str	r3, [r2, #12]
    for(uint8_t i = 0; i < 8; i++) // Escreve cada bit, um por vez
 8000cce:	7bfb      	ldrb	r3, [r7, #15]
 8000cd0:	3301      	adds	r3, #1
 8000cd2:	73fb      	strb	r3, [r7, #15]
 8000cd4:	7bfb      	ldrb	r3, [r7, #15]
 8000cd6:	2b07      	cmp	r3, #7
 8000cd8:	d9d2      	bls.n	8000c80 <Ds18b20Write+0x14>
    }
}
 8000cda:	bf00      	nop
 8000cdc:	bf00      	nop
 8000cde:	3710      	adds	r7, #16
 8000ce0:	46bd      	mov	sp, r7
 8000ce2:	bd80      	pop	{r7, pc}
 8000ce4:	40010c00 	.word	0x40010c00

08000ce8 <Ds18b20Read>:

// Faz a leitura de um byte do sensor DS18B20
uint8_t Ds18b20Read(void)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	b082      	sub	sp, #8
 8000cec:	af00      	add	r7, sp, #0
    uint8_t Data = 0;
 8000cee:	2300      	movs	r3, #0
 8000cf0:	71fb      	strb	r3, [r7, #7]

    Ds18b20_PinOut();           // Configura o pino como saída
 8000cf2:	f000 f845 	bl	8000d80 <Ds18b20_PinOut>
    Ds18b20_PinHigh;            // Coloca o pino em nível alto
 8000cf6:	4b21      	ldr	r3, [pc, #132]	@ (8000d7c <Ds18b20Read+0x94>)
 8000cf8:	68db      	ldr	r3, [r3, #12]
 8000cfa:	4a20      	ldr	r2, [pc, #128]	@ (8000d7c <Ds18b20Read+0x94>)
 8000cfc:	f043 0301 	orr.w	r3, r3, #1
 8000d00:	60d3      	str	r3, [r2, #12]
    Delay_us(2);                // Aguarda 2 microsegundos
 8000d02:	2002      	movs	r0, #2
 8000d04:	f000 fb50 	bl	80013a8 <Delay_us>

    for(uint8_t i = 0; i < 8; i++) // Lê cada bit, um por vez
 8000d08:	2300      	movs	r3, #0
 8000d0a:	71bb      	strb	r3, [r7, #6]
 8000d0c:	e02e      	b.n	8000d6c <Ds18b20Read+0x84>
    {
        Ds18b20_PinLow;         // Coloca o pino em nível baixo
 8000d0e:	4b1b      	ldr	r3, [pc, #108]	@ (8000d7c <Ds18b20Read+0x94>)
 8000d10:	68db      	ldr	r3, [r3, #12]
 8000d12:	4a1a      	ldr	r2, [pc, #104]	@ (8000d7c <Ds18b20Read+0x94>)
 8000d14:	f023 0301 	bic.w	r3, r3, #1
 8000d18:	60d3      	str	r3, [r2, #12]
        Delay_us(1);            // Aguarda 1 microsegundo
 8000d1a:	2001      	movs	r0, #1
 8000d1c:	f000 fb44 	bl	80013a8 <Delay_us>
        Ds18b20_PinHigh;        // Coloca o pino em nível alto
 8000d20:	4b16      	ldr	r3, [pc, #88]	@ (8000d7c <Ds18b20Read+0x94>)
 8000d22:	68db      	ldr	r3, [r3, #12]
 8000d24:	4a15      	ldr	r2, [pc, #84]	@ (8000d7c <Ds18b20Read+0x94>)
 8000d26:	f043 0301 	orr.w	r3, r3, #1
 8000d2a:	60d3      	str	r3, [r2, #12]
        Ds18b20_PinIn();        // Configura o pino como entrada
 8000d2c:	f000 f83c 	bl	8000da8 <Ds18b20_PinIn>
        Delay_us(5);            // Aguarda 5 microsegundos
 8000d30:	2005      	movs	r0, #5
 8000d32:	f000 fb39 	bl	80013a8 <Delay_us>
        Data >>= 1;             // Desloca o dado para a direita
 8000d36:	79fb      	ldrb	r3, [r7, #7]
 8000d38:	085b      	lsrs	r3, r3, #1
 8000d3a:	71fb      	strb	r3, [r7, #7]

        if(GPIOB->IDR & GPIO_IDR_IDR0)  // Se o pino estiver em nível alto, escreve 1 no bit mais significativo
 8000d3c:	4b0f      	ldr	r3, [pc, #60]	@ (8000d7c <Ds18b20Read+0x94>)
 8000d3e:	689b      	ldr	r3, [r3, #8]
 8000d40:	f003 0301 	and.w	r3, r3, #1
 8000d44:	2b00      	cmp	r3, #0
 8000d46:	d003      	beq.n	8000d50 <Ds18b20Read+0x68>
            Data |= 0x80;       // Insere o bit 1 no dado
 8000d48:	79fb      	ldrb	r3, [r7, #7]
 8000d4a:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8000d4e:	71fb      	strb	r3, [r7, #7]

        Delay_us(55);           // Aguarda 55 microsegundos
 8000d50:	2037      	movs	r0, #55	@ 0x37
 8000d52:	f000 fb29 	bl	80013a8 <Delay_us>
        Ds18b20_PinOut();       // Configura o pino como saída
 8000d56:	f000 f813 	bl	8000d80 <Ds18b20_PinOut>
        Ds18b20_PinHigh;        // Coloca o pino em nível alto
 8000d5a:	4b08      	ldr	r3, [pc, #32]	@ (8000d7c <Ds18b20Read+0x94>)
 8000d5c:	68db      	ldr	r3, [r3, #12]
 8000d5e:	4a07      	ldr	r2, [pc, #28]	@ (8000d7c <Ds18b20Read+0x94>)
 8000d60:	f043 0301 	orr.w	r3, r3, #1
 8000d64:	60d3      	str	r3, [r2, #12]
    for(uint8_t i = 0; i < 8; i++) // Lê cada bit, um por vez
 8000d66:	79bb      	ldrb	r3, [r7, #6]
 8000d68:	3301      	adds	r3, #1
 8000d6a:	71bb      	strb	r3, [r7, #6]
 8000d6c:	79bb      	ldrb	r3, [r7, #6]
 8000d6e:	2b07      	cmp	r3, #7
 8000d70:	d9cd      	bls.n	8000d0e <Ds18b20Read+0x26>
    }
    return Data;                // Retorna o byte lido
 8000d72:	79fb      	ldrb	r3, [r7, #7]
}
 8000d74:	4618      	mov	r0, r3
 8000d76:	3708      	adds	r7, #8
 8000d78:	46bd      	mov	sp, r7
 8000d7a:	bd80      	pop	{r7, pc}
 8000d7c:	40010c00 	.word	0x40010c00

08000d80 <Ds18b20_PinOut>:

// Define o pino do sensor DS18B20 como saída
void Ds18b20_PinOut(void)
{
 8000d80:	b480      	push	{r7}
 8000d82:	af00      	add	r7, sp, #0
    GPIOB->CRL |= GPIO_CRL_MODE0_1 | GPIO_CRL_MODE0_0;   // Configura o pino como saída de alta velocidade
 8000d84:	4b07      	ldr	r3, [pc, #28]	@ (8000da4 <Ds18b20_PinOut+0x24>)
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	4a06      	ldr	r2, [pc, #24]	@ (8000da4 <Ds18b20_PinOut+0x24>)
 8000d8a:	f043 0303 	orr.w	r3, r3, #3
 8000d8e:	6013      	str	r3, [r2, #0]
    GPIOB->CRL &= ~(GPIO_CRL_CNF0_1 | GPIO_CRL_CNF0_0);  // Configura o modo push-pull
 8000d90:	4b04      	ldr	r3, [pc, #16]	@ (8000da4 <Ds18b20_PinOut+0x24>)
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	4a03      	ldr	r2, [pc, #12]	@ (8000da4 <Ds18b20_PinOut+0x24>)
 8000d96:	f023 030c 	bic.w	r3, r3, #12
 8000d9a:	6013      	str	r3, [r2, #0]
}
 8000d9c:	bf00      	nop
 8000d9e:	46bd      	mov	sp, r7
 8000da0:	bc80      	pop	{r7}
 8000da2:	4770      	bx	lr
 8000da4:	40010c00 	.word	0x40010c00

08000da8 <Ds18b20_PinIn>:

// Define o pino do sensor DS18B20 como entrada
void Ds18b20_PinIn(void)
{
 8000da8:	b480      	push	{r7}
 8000daa:	af00      	add	r7, sp, #0
    GPIOB->CRL &= ~(GPIO_CRL_MODE0_1 | GPIO_CRL_MODE0_0);  // Desabilita o modo de saída
 8000dac:	4b07      	ldr	r3, [pc, #28]	@ (8000dcc <Ds18b20_PinIn+0x24>)
 8000dae:	681b      	ldr	r3, [r3, #0]
 8000db0:	4a06      	ldr	r2, [pc, #24]	@ (8000dcc <Ds18b20_PinIn+0x24>)
 8000db2:	f023 0303 	bic.w	r3, r3, #3
 8000db6:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |= GPIO_CRL_CNF0_0;                        // Configura o pino como entrada com flutuação
 8000db8:	4b04      	ldr	r3, [pc, #16]	@ (8000dcc <Ds18b20_PinIn+0x24>)
 8000dba:	681b      	ldr	r3, [r3, #0]
 8000dbc:	4a03      	ldr	r2, [pc, #12]	@ (8000dcc <Ds18b20_PinIn+0x24>)
 8000dbe:	f043 0304 	orr.w	r3, r3, #4
 8000dc2:	6013      	str	r3, [r2, #0]
}
 8000dc4:	bf00      	nop
 8000dc6:	46bd      	mov	sp, r7
 8000dc8:	bc80      	pop	{r7}
 8000dca:	4770      	bx	lr
 8000dcc:	40010c00 	.word	0x40010c00

08000dd0 <Ds18b20TempRead>:

// Faz a leitura da temperatura
uint16_t Ds18b20TempRead(void)
{
 8000dd0:	b580      	push	{r7, lr}
 8000dd2:	b082      	sub	sp, #8
 8000dd4:	af00      	add	r7, sp, #0
    uint16_t Temp = 0;
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	80fb      	strh	r3, [r7, #6]

    if(!Ds18b20_Init())          // Inicializa o sensor, se falhar retorna 0
 8000dda:	f7ff fefb 	bl	8000bd4 <Ds18b20_Init>
 8000dde:	4603      	mov	r3, r0
 8000de0:	f083 0301 	eor.w	r3, r3, #1
 8000de4:	b2db      	uxtb	r3, r3
 8000de6:	2b00      	cmp	r3, #0
 8000de8:	d001      	beq.n	8000dee <Ds18b20TempRead+0x1e>
        return 0;
 8000dea:	2300      	movs	r3, #0
 8000dec:	e024      	b.n	8000e38 <Ds18b20TempRead+0x68>

    Ds18b20Write(0xCC);          // Envia o comando Skip ROM (0xCC)
 8000dee:	20cc      	movs	r0, #204	@ 0xcc
 8000df0:	f7ff ff3c 	bl	8000c6c <Ds18b20Write>
    Ds18b20Write(0x44);          // Inicia a conversão de temperatura (0x44)
 8000df4:	2044      	movs	r0, #68	@ 0x44
 8000df6:	f7ff ff39 	bl	8000c6c <Ds18b20Write>

    if(!Ds18b20_Init())          // Inicializa o sensor novamente, se falhar retorna 0
 8000dfa:	f7ff feeb 	bl	8000bd4 <Ds18b20_Init>
 8000dfe:	4603      	mov	r3, r0
 8000e00:	f083 0301 	eor.w	r3, r3, #1
 8000e04:	b2db      	uxtb	r3, r3
 8000e06:	2b00      	cmp	r3, #0
 8000e08:	d001      	beq.n	8000e0e <Ds18b20TempRead+0x3e>
        return 0;
 8000e0a:	2300      	movs	r3, #0
 8000e0c:	e014      	b.n	8000e38 <Ds18b20TempRead+0x68>

    Ds18b20Write(0xCC);          // Envia o comando Skip ROM (0xCC)
 8000e0e:	20cc      	movs	r0, #204	@ 0xcc
 8000e10:	f7ff ff2c 	bl	8000c6c <Ds18b20Write>
    Ds18b20Write(0xBE);          // Envia o comando Read Scratchpad (0xBE)
 8000e14:	20be      	movs	r0, #190	@ 0xbe
 8000e16:	f7ff ff29 	bl	8000c6c <Ds18b20Write>

    Temp = Ds18b20Read();        // Lê o byte menos significativo da temperatura
 8000e1a:	f7ff ff65 	bl	8000ce8 <Ds18b20Read>
 8000e1e:	4603      	mov	r3, r0
 8000e20:	80fb      	strh	r3, [r7, #6]
    Temp |= Ds18b20Read() << 8;  // Lê o byte mais significativo e o desloca
 8000e22:	f7ff ff61 	bl	8000ce8 <Ds18b20Read>
 8000e26:	4603      	mov	r3, r0
 8000e28:	021b      	lsls	r3, r3, #8
 8000e2a:	b21a      	sxth	r2, r3
 8000e2c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000e30:	4313      	orrs	r3, r2
 8000e32:	b21b      	sxth	r3, r3
 8000e34:	80fb      	strh	r3, [r7, #6]

    return Temp;                 // Retorna a temperatura lida (valor bruto)
 8000e36:	88fb      	ldrh	r3, [r7, #6]
}
 8000e38:	4618      	mov	r0, r3
 8000e3a:	3708      	adds	r7, #8
 8000e3c:	46bd      	mov	sp, r7
 8000e3e:	bd80      	pop	{r7, pc}

08000e40 <i2c2_pin_config>:
#include <i2c.h>
#include "stm32f103xb.h"

// PB6-SCL, PB7-SDA
void i2c2_pin_config()
{
 8000e40:	b480      	push	{r7}
 8000e42:	af00      	add	r7, sp, #0
    // Habilitar o clock para o GPIOB e I2C2
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;  // Habilita o clock para o GPIOB
 8000e44:	4b19      	ldr	r3, [pc, #100]	@ (8000eac <i2c2_pin_config+0x6c>)
 8000e46:	699b      	ldr	r3, [r3, #24]
 8000e48:	4a18      	ldr	r2, [pc, #96]	@ (8000eac <i2c2_pin_config+0x6c>)
 8000e4a:	f043 0308 	orr.w	r3, r3, #8
 8000e4e:	6193      	str	r3, [r2, #24]
    RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;  // Habilita o clock para o I2C2
 8000e50:	4b16      	ldr	r3, [pc, #88]	@ (8000eac <i2c2_pin_config+0x6c>)
 8000e52:	69db      	ldr	r3, [r3, #28]
 8000e54:	4a15      	ldr	r2, [pc, #84]	@ (8000eac <i2c2_pin_config+0x6c>)
 8000e56:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000e5a:	61d3      	str	r3, [r2, #28]

    // Configurações para PB6 (SCL) como Função Alternativa Open Drain
    GPIOB->CRL &= ~(GPIO_CRL_MODE6 | GPIO_CRL_CNF6);  // Limpa as configurações atuais do pino PB6
 8000e5c:	4b14      	ldr	r3, [pc, #80]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	4a13      	ldr	r2, [pc, #76]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e62:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8000e66:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |= GPIO_CRL_MODE6_0 | GPIO_CRL_MODE6_1;  // Configura o pino como modo de saída a 50 MHz
 8000e68:	4b11      	ldr	r3, [pc, #68]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e6a:	681b      	ldr	r3, [r3, #0]
 8000e6c:	4a10      	ldr	r2, [pc, #64]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e6e:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
 8000e72:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |= GPIO_CRL_CNF6_1;  // Define como Função Alternativa Open Drain
 8000e74:	4b0e      	ldr	r3, [pc, #56]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e76:	681b      	ldr	r3, [r3, #0]
 8000e78:	4a0d      	ldr	r2, [pc, #52]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e7a:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8000e7e:	6013      	str	r3, [r2, #0]

    // Configurações para PB7 (SDA) como Função Alternativa Open Drain
    GPIOB->CRL &= ~(GPIO_CRL_MODE7 | GPIO_CRL_CNF7);  // Limpa as configurações atuais do pino PB7
 8000e80:	4b0b      	ldr	r3, [pc, #44]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	4a0a      	ldr	r2, [pc, #40]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e86:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8000e8a:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |= GPIO_CRL_MODE7_0 | GPIO_CRL_MODE7_1;  // Configura o pino como modo de saída a 50 MHz
 8000e8c:	4b08      	ldr	r3, [pc, #32]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	4a07      	ldr	r2, [pc, #28]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e92:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 8000e96:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |= GPIO_CRL_CNF7_1;  // Define como Função Alternativa Open Drain
 8000e98:	4b05      	ldr	r3, [pc, #20]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	4a04      	ldr	r2, [pc, #16]	@ (8000eb0 <i2c2_pin_config+0x70>)
 8000e9e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000ea2:	6013      	str	r3, [r2, #0]
}
 8000ea4:	bf00      	nop
 8000ea6:	46bd      	mov	sp, r7
 8000ea8:	bc80      	pop	{r7}
 8000eaa:	4770      	bx	lr
 8000eac:	40021000 	.word	0x40021000
 8000eb0:	40010c00 	.word	0x40010c00

08000eb4 <i2c_master_init>:

uint32_t read_reg = 0;

void i2c_master_init()
{
 8000eb4:	b580      	push	{r7, lr}
 8000eb6:	af00      	add	r7, sp, #0
    i2c2_pin_config();  // Configura os pinos PB6 e PB7 para I2C
 8000eb8:	f7ff ffc2 	bl	8000e40 <i2c2_pin_config>

    // Configura o registro CR2 do I2C para o clock de entrada do periférico: FREQ[] bits
    I2C2->CR2 = 0x20;  // Configura a frequência do clock com base na frequência do core, que é 32MHz (0x20 = 32)
 8000ebc:	4b0c      	ldr	r3, [pc, #48]	@ (8000ef0 <i2c_master_init+0x3c>)
 8000ebe:	2220      	movs	r2, #32
 8000ec0:	605a      	str	r2, [r3, #4]

    // Configura o registro CCR do I2C para o controle do clock
    I2C2->CCR = 0x140;
 8000ec2:	4b0b      	ldr	r3, [pc, #44]	@ (8000ef0 <i2c_master_init+0x3c>)
 8000ec4:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000ec8:	61da      	str	r2, [r3, #28]

    // Configura o registro TRISE do I2C
    I2C2->TRISE = 0x21;
 8000eca:	4b09      	ldr	r3, [pc, #36]	@ (8000ef0 <i2c_master_init+0x3c>)
 8000ecc:	2221      	movs	r2, #33	@ 0x21
 8000ece:	621a      	str	r2, [r3, #32]

    // Habilita o periférico no registro CR1
    I2C2->CR1 |= I2C_CR1_PE;
 8000ed0:	4b07      	ldr	r3, [pc, #28]	@ (8000ef0 <i2c_master_init+0x3c>)
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	4a06      	ldr	r2, [pc, #24]	@ (8000ef0 <i2c_master_init+0x3c>)
 8000ed6:	f043 0301 	orr.w	r3, r3, #1
 8000eda:	6013      	str	r3, [r2, #0]

    // Verifica se o barramento I2C está ocupado (busy)
    if ((I2C2->SR2 & I2C_SR2_BUSY) == 1)
 8000edc:	4b04      	ldr	r3, [pc, #16]	@ (8000ef0 <i2c_master_init+0x3c>)
 8000ede:	699b      	ldr	r3, [r3, #24]
 8000ee0:	f003 0302 	and.w	r3, r3, #2
 8000ee4:	2b01      	cmp	r3, #1
 8000ee6:	d101      	bne.n	8000eec <i2c_master_init+0x38>
        i2c_master_stop_generation();  // Gera um sinal de parada se estiver ocupado
 8000ee8:	f000 f860 	bl	8000fac <i2c_master_stop_generation>
}
 8000eec:	bf00      	nop
 8000eee:	bd80      	pop	{r7, pc}
 8000ef0:	40005800 	.word	0x40005800

08000ef4 <i2c_start_condition_w>:

// Gera a condição de start para iniciar a comunicação no modo master
void i2c_start_condition_w()  // Evento EV5
{
 8000ef4:	b480      	push	{r7}
 8000ef6:	af00      	add	r7, sp, #0
    I2C2->CR1 |= I2C_CR1_START;  // Gera a condição de start
 8000ef8:	4b0a      	ldr	r3, [pc, #40]	@ (8000f24 <i2c_start_condition_w+0x30>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	4a09      	ldr	r2, [pc, #36]	@ (8000f24 <i2c_start_condition_w+0x30>)
 8000efe:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000f02:	6013      	str	r3, [r2, #0]
    while (!(I2C2->SR1 & I2C_SR1_SB));  // Aguarda até que o start bit seja transmitido e o modo master seja ativado
 8000f04:	bf00      	nop
 8000f06:	4b07      	ldr	r3, [pc, #28]	@ (8000f24 <i2c_start_condition_w+0x30>)
 8000f08:	695b      	ldr	r3, [r3, #20]
 8000f0a:	f003 0301 	and.w	r3, r3, #1
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d0f9      	beq.n	8000f06 <i2c_start_condition_w+0x12>
    read_reg = I2C2->SR1;  // Lê o registro SR1 para limpar o flag
 8000f12:	4b04      	ldr	r3, [pc, #16]	@ (8000f24 <i2c_start_condition_w+0x30>)
 8000f14:	695b      	ldr	r3, [r3, #20]
 8000f16:	4a04      	ldr	r2, [pc, #16]	@ (8000f28 <i2c_start_condition_w+0x34>)
 8000f18:	6013      	str	r3, [r2, #0]
}
 8000f1a:	bf00      	nop
 8000f1c:	46bd      	mov	sp, r7
 8000f1e:	bc80      	pop	{r7}
 8000f20:	4770      	bx	lr
 8000f22:	bf00      	nop
 8000f24:	40005800 	.word	0x40005800
 8000f28:	200001ec 	.word	0x200001ec

08000f2c <i2c_address_send_w>:
    read_reg = I2C2->SR1;  // Lê o registro SR1 para limpar o flag
}

// Envia o endereço do escravo no modo de escrita
void i2c_address_send_w(uint8_t slave_address)  // Evento EV6
{
 8000f2c:	b480      	push	{r7}
 8000f2e:	b083      	sub	sp, #12
 8000f30:	af00      	add	r7, sp, #0
 8000f32:	4603      	mov	r3, r0
 8000f34:	71fb      	strb	r3, [r7, #7]
    I2C2->DR = slave_address;  // Escreve o endereço do escravo no barramento I2C
 8000f36:	4a0f      	ldr	r2, [pc, #60]	@ (8000f74 <i2c_address_send_w+0x48>)
 8000f38:	79fb      	ldrb	r3, [r7, #7]
 8000f3a:	6113      	str	r3, [r2, #16]
    while (!(I2C2->SR1 & I2C_SR1_TXE));  // Aguarda o envio do dado
 8000f3c:	bf00      	nop
 8000f3e:	4b0d      	ldr	r3, [pc, #52]	@ (8000f74 <i2c_address_send_w+0x48>)
 8000f40:	695b      	ldr	r3, [r3, #20]
 8000f42:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d0f9      	beq.n	8000f3e <i2c_address_send_w+0x12>
    while (!(I2C2->SR1 & I2C_SR1_ADDR));  // Aguarda a transmissão do endereço do escravo (ADDR setado com sucesso)
 8000f4a:	bf00      	nop
 8000f4c:	4b09      	ldr	r3, [pc, #36]	@ (8000f74 <i2c_address_send_w+0x48>)
 8000f4e:	695b      	ldr	r3, [r3, #20]
 8000f50:	f003 0302 	and.w	r3, r3, #2
 8000f54:	2b00      	cmp	r3, #0
 8000f56:	d0f9      	beq.n	8000f4c <i2c_address_send_w+0x20>

    // Limpa o bit ADDR
    read_reg = I2C2->SR1;
 8000f58:	4b06      	ldr	r3, [pc, #24]	@ (8000f74 <i2c_address_send_w+0x48>)
 8000f5a:	695b      	ldr	r3, [r3, #20]
 8000f5c:	4a06      	ldr	r2, [pc, #24]	@ (8000f78 <i2c_address_send_w+0x4c>)
 8000f5e:	6013      	str	r3, [r2, #0]
    read_reg = I2C2->SR2;
 8000f60:	4b04      	ldr	r3, [pc, #16]	@ (8000f74 <i2c_address_send_w+0x48>)
 8000f62:	699b      	ldr	r3, [r3, #24]
 8000f64:	4a04      	ldr	r2, [pc, #16]	@ (8000f78 <i2c_address_send_w+0x4c>)
 8000f66:	6013      	str	r3, [r2, #0]
}
 8000f68:	bf00      	nop
 8000f6a:	370c      	adds	r7, #12
 8000f6c:	46bd      	mov	sp, r7
 8000f6e:	bc80      	pop	{r7}
 8000f70:	4770      	bx	lr
 8000f72:	bf00      	nop
 8000f74:	40005800 	.word	0x40005800
 8000f78:	200001ec 	.word	0x200001ec

08000f7c <i2c_master_send_byte>:

// Envia um byte de dado no modo master
void i2c_master_send_byte(uint8_t data)  // Evento EV8
{
 8000f7c:	b480      	push	{r7}
 8000f7e:	b083      	sub	sp, #12
 8000f80:	af00      	add	r7, sp, #0
 8000f82:	4603      	mov	r3, r0
 8000f84:	71fb      	strb	r3, [r7, #7]
    I2C2->DR = data;  // Escreve o dado no registro de dados
 8000f86:	4a08      	ldr	r2, [pc, #32]	@ (8000fa8 <i2c_master_send_byte+0x2c>)
 8000f88:	79fb      	ldrb	r3, [r7, #7]
 8000f8a:	6113      	str	r3, [r2, #16]
    while (!(I2C2->SR1 & I2C_SR1_TXE));  // Aguarda até que o registro de dados esteja vazio após a transmissão
 8000f8c:	bf00      	nop
 8000f8e:	4b06      	ldr	r3, [pc, #24]	@ (8000fa8 <i2c_master_send_byte+0x2c>)
 8000f90:	695b      	ldr	r3, [r3, #20]
 8000f92:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	d0f9      	beq.n	8000f8e <i2c_master_send_byte+0x12>
}
 8000f9a:	bf00      	nop
 8000f9c:	bf00      	nop
 8000f9e:	370c      	adds	r7, #12
 8000fa0:	46bd      	mov	sp, r7
 8000fa2:	bc80      	pop	{r7}
 8000fa4:	4770      	bx	lr
 8000fa6:	bf00      	nop
 8000fa8:	40005800 	.word	0x40005800

08000fac <i2c_master_stop_generation>:
    return data;
}

// Gera uma condição de parada
void i2c_master_stop_generation()
{
 8000fac:	b480      	push	{r7}
 8000fae:	af00      	add	r7, sp, #0
    I2C2->CR1 |= I2C_CR1_STOP;  // Gera o sinal de stop
 8000fb0:	4b04      	ldr	r3, [pc, #16]	@ (8000fc4 <i2c_master_stop_generation+0x18>)
 8000fb2:	681b      	ldr	r3, [r3, #0]
 8000fb4:	4a03      	ldr	r2, [pc, #12]	@ (8000fc4 <i2c_master_stop_generation+0x18>)
 8000fb6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000fba:	6013      	str	r3, [r2, #0]
}
 8000fbc:	bf00      	nop
 8000fbe:	46bd      	mov	sp, r7
 8000fc0:	bc80      	pop	{r7}
 8000fc2:	4770      	bx	lr
 8000fc4:	40005800 	.word	0x40005800

08000fc8 <lcd_ioexander>:
uint8_t LCD_Rw = 0x00;  // Read/Write bit (00000000) - sempre no modo de escrita
uint8_t LCD_Rs = 0x01;  // Register Select bit (00000001)

// Função para enviar dados ao expansor de I/O via I2C (PCF8574)
void lcd_ioexander(unsigned char Data)
{
 8000fc8:	b580      	push	{r7, lr}
 8000fca:	b082      	sub	sp, #8
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	4603      	mov	r3, r0
 8000fd0:	71fb      	strb	r3, [r7, #7]
    i2c_start_condition_w();  // Gera uma condição de start
 8000fd2:	f7ff ff8f 	bl	8000ef4 <i2c_start_condition_w>
    i2c_address_send_w(pcf8574_WADDR);  // Envia o endereço do expansor de I/O (escrita)
 8000fd6:	207e      	movs	r0, #126	@ 0x7e
 8000fd8:	f7ff ffa8 	bl	8000f2c <i2c_address_send_w>
    i2c_master_send_byte(Data | LCD_BACKLIGHT);  // Envia os dados com o backlight ligado
 8000fdc:	79fb      	ldrb	r3, [r7, #7]
 8000fde:	f043 0308 	orr.w	r3, r3, #8
 8000fe2:	b2db      	uxtb	r3, r3
 8000fe4:	4618      	mov	r0, r3
 8000fe6:	f7ff ffc9 	bl	8000f7c <i2c_master_send_byte>
    i2c_master_stop_generation();  // Gera uma condição de stop
 8000fea:	f7ff ffdf 	bl	8000fac <i2c_master_stop_generation>
}
 8000fee:	bf00      	nop
 8000ff0:	3708      	adds	r7, #8
 8000ff2:	46bd      	mov	sp, r7
 8000ff4:	bd80      	pop	{r7, pc}
	...

08000ff8 <lcd_write4bit>:
    delay_us(50);  // Atraso para estabilizar
}

// Função para escrever 4 bits no LCD (modo 4 bits)
void lcd_write4bit(unsigned char nibble)
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	b082      	sub	sp, #8
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	4603      	mov	r3, r0
 8001000:	71fb      	strb	r3, [r7, #7]
    nibble |= (LCD_Rs | LCD_Rw);  // Adiciona os bits de RS e RW
 8001002:	4b0f      	ldr	r3, [pc, #60]	@ (8001040 <lcd_write4bit+0x48>)
 8001004:	781a      	ldrb	r2, [r3, #0]
 8001006:	4b0f      	ldr	r3, [pc, #60]	@ (8001044 <lcd_write4bit+0x4c>)
 8001008:	781b      	ldrb	r3, [r3, #0]
 800100a:	4313      	orrs	r3, r2
 800100c:	b2da      	uxtb	r2, r3
 800100e:	79fb      	ldrb	r3, [r7, #7]
 8001010:	4313      	orrs	r3, r2
 8001012:	71fb      	strb	r3, [r7, #7]
    lcd_ioexander(nibble | 0x04);  // Envia os dados com enable alto
 8001014:	79fb      	ldrb	r3, [r7, #7]
 8001016:	f043 0304 	orr.w	r3, r3, #4
 800101a:	b2db      	uxtb	r3, r3
 800101c:	4618      	mov	r0, r3
 800101e:	f7ff ffd3 	bl	8000fc8 <lcd_ioexander>
    lcd_ioexander(nibble & 0xFB);  // Envia os dados com enable baixo
 8001022:	79fb      	ldrb	r3, [r7, #7]
 8001024:	f023 0304 	bic.w	r3, r3, #4
 8001028:	b2db      	uxtb	r3, r3
 800102a:	4618      	mov	r0, r3
 800102c:	f7ff ffcc 	bl	8000fc8 <lcd_ioexander>
    delay_ms(display_rate);  // Atraso para estabilização
 8001030:	2032      	movs	r0, #50	@ 0x32
 8001032:	f000 f9f5 	bl	8001420 <delay_ms>
}
 8001036:	bf00      	nop
 8001038:	3708      	adds	r7, #8
 800103a:	46bd      	mov	sp, r7
 800103c:	bd80      	pop	{r7, pc}
 800103e:	bf00      	nop
 8001040:	20000000 	.word	0x20000000
 8001044:	200001f0 	.word	0x200001f0

08001048 <LCD_command>:

// Função para enviar um comando ao LCD (RS=0, RW=0)
void LCD_command(unsigned char command)
{
 8001048:	b580      	push	{r7, lr}
 800104a:	b084      	sub	sp, #16
 800104c:	af00      	add	r7, sp, #0
 800104e:	4603      	mov	r3, r0
 8001050:	71fb      	strb	r3, [r7, #7]
    LCD_Rs = 0b00000000;  // RS = 0 (modo comando)
 8001052:	4b0c      	ldr	r3, [pc, #48]	@ (8001084 <LCD_command+0x3c>)
 8001054:	2200      	movs	r2, #0
 8001056:	701a      	strb	r2, [r3, #0]
    LCD_Rw = 0b00000000;  // RW = 0 (modo escrita)
 8001058:	4b0b      	ldr	r3, [pc, #44]	@ (8001088 <LCD_command+0x40>)
 800105a:	2200      	movs	r2, #0
 800105c:	701a      	strb	r2, [r3, #0]
    uint8_t highnib = command & 0xf0;  // Extrai os 4 bits mais significativos
 800105e:	79fb      	ldrb	r3, [r7, #7]
 8001060:	f023 030f 	bic.w	r3, r3, #15
 8001064:	73fb      	strb	r3, [r7, #15]
    uint8_t lownib = (command << 4) & 0xf0;  // Extrai os 4 bits menos significativos
 8001066:	79fb      	ldrb	r3, [r7, #7]
 8001068:	011b      	lsls	r3, r3, #4
 800106a:	73bb      	strb	r3, [r7, #14]
    lcd_write4bit(highnib);  // Envia os 4 bits mais altos
 800106c:	7bfb      	ldrb	r3, [r7, #15]
 800106e:	4618      	mov	r0, r3
 8001070:	f7ff ffc2 	bl	8000ff8 <lcd_write4bit>
    lcd_write4bit(lownib);  // Envia os 4 bits mais baixos
 8001074:	7bbb      	ldrb	r3, [r7, #14]
 8001076:	4618      	mov	r0, r3
 8001078:	f7ff ffbe 	bl	8000ff8 <lcd_write4bit>
}
 800107c:	bf00      	nop
 800107e:	3710      	adds	r7, #16
 8001080:	46bd      	mov	sp, r7
 8001082:	bd80      	pop	{r7, pc}
 8001084:	20000000 	.word	0x20000000
 8001088:	200001f0 	.word	0x200001f0

0800108c <lcd_setcursor>:

// Função para definir a posição do cursor
void lcd_setcursor(uint8_t col, uint8_t row)
{
 800108c:	b580      	push	{r7, lr}
 800108e:	b082      	sub	sp, #8
 8001090:	af00      	add	r7, sp, #0
 8001092:	4603      	mov	r3, r0
 8001094:	460a      	mov	r2, r1
 8001096:	71fb      	strb	r3, [r7, #7]
 8001098:	4613      	mov	r3, r2
 800109a:	71bb      	strb	r3, [r7, #6]
    static uint8_t offsets[] = {0x00, 0x40, 0x14, 0x54};  // Offsets para diferentes linhas no LCD
    LCD_command((0x80 | (row << 6)) + col);  // Envia o comando para mover o cursor
 800109c:	79bb      	ldrb	r3, [r7, #6]
 800109e:	019b      	lsls	r3, r3, #6
 80010a0:	b25b      	sxtb	r3, r3
 80010a2:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80010a6:	b25b      	sxtb	r3, r3
 80010a8:	b2da      	uxtb	r2, r3
 80010aa:	79fb      	ldrb	r3, [r7, #7]
 80010ac:	4413      	add	r3, r2
 80010ae:	b2db      	uxtb	r3, r3
 80010b0:	4618      	mov	r0, r3
 80010b2:	f7ff ffc9 	bl	8001048 <LCD_command>
    delay_us(40);  // Atraso curto
 80010b6:	2028      	movs	r0, #40	@ 0x28
 80010b8:	f000 f994 	bl	80013e4 <delay_us>
}
 80010bc:	bf00      	nop
 80010be:	3708      	adds	r7, #8
 80010c0:	46bd      	mov	sp, r7
 80010c2:	bd80      	pop	{r7, pc}

080010c4 <lcd_clear>:

// Função para limpar o display do LCD
void lcd_clear()
{
 80010c4:	b580      	push	{r7, lr}
 80010c6:	af00      	add	r7, sp, #0
    LCD_command(lcd_clear_all);  // Envia o comando para limpar o display
 80010c8:	2001      	movs	r0, #1
 80010ca:	f7ff ffbd 	bl	8001048 <LCD_command>
    delay_ms(20);  // Atraso para garantir a limpeza
 80010ce:	2014      	movs	r0, #20
 80010d0:	f000 f9a6 	bl	8001420 <delay_ms>
}
 80010d4:	bf00      	nop
 80010d6:	bd80      	pop	{r7, pc}

080010d8 <LCD_data>:
    delay_ms(2);  // Pequeno atraso
}

// Função para enviar dados ao LCD (RS=1, RW=0)
void LCD_data(unsigned char data)
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	b084      	sub	sp, #16
 80010dc:	af00      	add	r7, sp, #0
 80010de:	4603      	mov	r3, r0
 80010e0:	71fb      	strb	r3, [r7, #7]
    LCD_Rs = 0b00000001;  // RS = 1 (modo dados)
 80010e2:	4b0c      	ldr	r3, [pc, #48]	@ (8001114 <LCD_data+0x3c>)
 80010e4:	2201      	movs	r2, #1
 80010e6:	701a      	strb	r2, [r3, #0]
    LCD_Rw = 0b00000000;  // RW = 0 (modo escrita)
 80010e8:	4b0b      	ldr	r3, [pc, #44]	@ (8001118 <LCD_data+0x40>)
 80010ea:	2200      	movs	r2, #0
 80010ec:	701a      	strb	r2, [r3, #0]
    uint8_t highnib = data & 0xf0;  // Extrai os 4 bits mais significativos
 80010ee:	79fb      	ldrb	r3, [r7, #7]
 80010f0:	f023 030f 	bic.w	r3, r3, #15
 80010f4:	73fb      	strb	r3, [r7, #15]
    uint8_t lownib = (data << 4) & 0xf0;  // Extrai os 4 bits menos significativos
 80010f6:	79fb      	ldrb	r3, [r7, #7]
 80010f8:	011b      	lsls	r3, r3, #4
 80010fa:	73bb      	strb	r3, [r7, #14]
    lcd_write4bit(highnib);  // Envia os 4 bits mais altos
 80010fc:	7bfb      	ldrb	r3, [r7, #15]
 80010fe:	4618      	mov	r0, r3
 8001100:	f7ff ff7a 	bl	8000ff8 <lcd_write4bit>
    lcd_write4bit(lownib);  // Envia os 4 bits mais baixos
 8001104:	7bbb      	ldrb	r3, [r7, #14]
 8001106:	4618      	mov	r0, r3
 8001108:	f7ff ff76 	bl	8000ff8 <lcd_write4bit>
}
 800110c:	bf00      	nop
 800110e:	3710      	adds	r7, #16
 8001110:	46bd      	mov	sp, r7
 8001112:	bd80      	pop	{r7, pc}
 8001114:	20000000 	.word	0x20000000
 8001118:	200001f0 	.word	0x200001f0

0800111c <LCD_string>:
    LCD_data(ones + 0x30);
}

// Função para enviar uma string ao LCD
void LCD_string(const char* str)
{
 800111c:	b580      	push	{r7, lr}
 800111e:	b084      	sub	sp, #16
 8001120:	af00      	add	r7, sp, #0
 8001122:	6078      	str	r0, [r7, #4]
    int i;
    for (i = 0; str[i] != 0; i++)
 8001124:	2300      	movs	r3, #0
 8001126:	60fb      	str	r3, [r7, #12]
 8001128:	e00c      	b.n	8001144 <LCD_string+0x28>
    {
        LCD_data(str[i]);  // Envia cada caractere da string
 800112a:	68fb      	ldr	r3, [r7, #12]
 800112c:	687a      	ldr	r2, [r7, #4]
 800112e:	4413      	add	r3, r2
 8001130:	781b      	ldrb	r3, [r3, #0]
 8001132:	4618      	mov	r0, r3
 8001134:	f7ff ffd0 	bl	80010d8 <LCD_data>
        delay_us(45);  // Pequeno atraso para estabilização
 8001138:	202d      	movs	r0, #45	@ 0x2d
 800113a:	f000 f953 	bl	80013e4 <delay_us>
    for (i = 0; str[i] != 0; i++)
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	3301      	adds	r3, #1
 8001142:	60fb      	str	r3, [r7, #12]
 8001144:	68fb      	ldr	r3, [r7, #12]
 8001146:	687a      	ldr	r2, [r7, #4]
 8001148:	4413      	add	r3, r2
 800114a:	781b      	ldrb	r3, [r3, #0]
 800114c:	2b00      	cmp	r3, #0
 800114e:	d1ec      	bne.n	800112a <LCD_string+0xe>
    }
}
 8001150:	bf00      	nop
 8001152:	bf00      	nop
 8001154:	3710      	adds	r7, #16
 8001156:	46bd      	mov	sp, r7
 8001158:	bd80      	pop	{r7, pc}

0800115a <LCD_init>:
    LCD_data(0x00 + loc);  // Imprime o caractere com base na localização
}

// Função de inicialização do LCD
void LCD_init()
{
 800115a:	b580      	push	{r7, lr}
 800115c:	af00      	add	r7, sp, #0
    i2c_master_init();  // Inicializa a comunicação I2C
 800115e:	f7ff fea9 	bl	8000eb4 <i2c_master_init>
    delay_us(100);
 8001162:	2064      	movs	r0, #100	@ 0x64
 8001164:	f000 f93e 	bl	80013e4 <delay_us>
    lcd_ioexander(0x00);  // Inicializa o expansor I/O
 8001168:	2000      	movs	r0, #0
 800116a:	f7ff ff2d 	bl	8000fc8 <lcd_ioexander>
    delay_ms(25);  // Atraso de inicialização do LCD (>15ms)
 800116e:	2019      	movs	r0, #25
 8001170:	f000 f956 	bl	8001420 <delay_ms>

    LCD_command(lcd_4bit_2line);  // Configura o LCD para modo 4 bits, 2 linhas
 8001174:	2028      	movs	r0, #40	@ 0x28
 8001176:	f7ff ff67 	bl	8001048 <LCD_command>
    delay_ms(5);
 800117a:	2005      	movs	r0, #5
 800117c:	f000 f950 	bl	8001420 <delay_ms>
    LCD_command(lcd_4bit_2line);  // Reenvia o comando
 8001180:	2028      	movs	r0, #40	@ 0x28
 8001182:	f7ff ff61 	bl	8001048 <LCD_command>
    delay_us(160);
 8001186:	20a0      	movs	r0, #160	@ 0xa0
 8001188:	f000 f92c 	bl	80013e4 <delay_us>
    LCD_command(lcd_4bit_2line);  // Reenvia o comando
 800118c:	2028      	movs	r0, #40	@ 0x28
 800118e:	f7ff ff5b 	bl	8001048 <LCD_command>

    LCD_command(lcd_DN_CF_BF);  // Display ON, cursor OFF, sem blink
 8001192:	200c      	movs	r0, #12
 8001194:	f7ff ff58 	bl	8001048 <LCD_command>
    delay_ms(1);
 8001198:	2001      	movs	r0, #1
 800119a:	f000 f941 	bl	8001420 <delay_ms>
    LCD_command(lcd_CML_DMF);  // Cursor move à esquerda, sem deslocamento do display
 800119e:	2004      	movs	r0, #4
 80011a0:	f7ff ff52 	bl	8001048 <LCD_command>
    delay_us(40);
 80011a4:	2028      	movs	r0, #40	@ 0x28
 80011a6:	f000 f91d 	bl	80013e4 <delay_us>
}
 80011aa:	bf00      	nop
 80011ac:	bd80      	pop	{r7, pc}
	...

080011b0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80011b0:	b480      	push	{r7}
 80011b2:	b083      	sub	sp, #12
 80011b4:	af00      	add	r7, sp, #0
 80011b6:	4603      	mov	r3, r0
 80011b8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80011ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011be:	2b00      	cmp	r3, #0
 80011c0:	db0b      	blt.n	80011da <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011c2:	79fb      	ldrb	r3, [r7, #7]
 80011c4:	f003 021f 	and.w	r2, r3, #31
 80011c8:	4906      	ldr	r1, [pc, #24]	@ (80011e4 <__NVIC_EnableIRQ+0x34>)
 80011ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011ce:	095b      	lsrs	r3, r3, #5
 80011d0:	2001      	movs	r0, #1
 80011d2:	fa00 f202 	lsl.w	r2, r0, r2
 80011d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80011da:	bf00      	nop
 80011dc:	370c      	adds	r7, #12
 80011de:	46bd      	mov	sp, r7
 80011e0:	bc80      	pop	{r7}
 80011e2:	4770      	bx	lr
 80011e4:	e000e100 	.word	0xe000e100

080011e8 <main>:
void TIM2_IRQHandler(void);


// Função principal
int main()
{
 80011e8:	b580      	push	{r7, lr}
 80011ea:	af00      	add	r7, sp, #0
    Mcu_Config();                                                   // Configura os periféricos do microcontrolador
 80011ec:	f000 f84c 	bl	8001288 <Mcu_Config>
    LCD_init();														//configura o LCD i2c
 80011f0:	f7ff ffb3 	bl	800115a <LCD_init>
    setupTimer();
 80011f4:	f000 f878 	bl	80012e8 <setupTimer>
    lcd_clear();
 80011f8:	f7ff ff64 	bl	80010c4 <lcd_clear>

    while(1){
		if (updateTemp) {
 80011fc:	4b1c      	ldr	r3, [pc, #112]	@ (8001270 <main+0x88>)
 80011fe:	781b      	ldrb	r3, [r3, #0]
 8001200:	b2db      	uxtb	r3, r3
 8001202:	2b00      	cmp	r3, #0
 8001204:	d0fa      	beq.n	80011fc <main+0x14>
			updateTemp = false;
 8001206:	4b1a      	ldr	r3, [pc, #104]	@ (8001270 <main+0x88>)
 8001208:	2200      	movs	r2, #0
 800120a:	701a      	strb	r2, [r3, #0]
			Ds18b20_Temp = Ds18b20TempRead();                       // Lê a temperatura do DS18B20
 800120c:	f7ff fde0 	bl	8000dd0 <Ds18b20TempRead>
 8001210:	4603      	mov	r3, r0
 8001212:	4618      	mov	r0, r3
 8001214:	f7ff f8e6 	bl	80003e4 <__aeabi_ui2d>
 8001218:	4602      	mov	r2, r0
 800121a:	460b      	mov	r3, r1
 800121c:	4915      	ldr	r1, [pc, #84]	@ (8001274 <main+0x8c>)
 800121e:	e9c1 2300 	strd	r2, r3, [r1]
			Ds18b20_Temp *= 0.0625;                                 // Faz um cálculo da conversão
 8001222:	4b14      	ldr	r3, [pc, #80]	@ (8001274 <main+0x8c>)
 8001224:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001228:	f04f 0200 	mov.w	r2, #0
 800122c:	4b12      	ldr	r3, [pc, #72]	@ (8001278 <main+0x90>)
 800122e:	f7ff f953 	bl	80004d8 <__aeabi_dmul>
 8001232:	4602      	mov	r2, r0
 8001234:	460b      	mov	r3, r1
 8001236:	490f      	ldr	r1, [pc, #60]	@ (8001274 <main+0x8c>)
 8001238:	e9c1 2300 	strd	r2, r3, [r1]
			sprintf(Txt, "Temp: %.1fºC\r\n", Ds18b20_Temp);			// Converte a temperatura em string com 1 casa após a vírgula
 800123c:	4b0d      	ldr	r3, [pc, #52]	@ (8001274 <main+0x8c>)
 800123e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001242:	490e      	ldr	r1, [pc, #56]	@ (800127c <main+0x94>)
 8001244:	480e      	ldr	r0, [pc, #56]	@ (8001280 <main+0x98>)
 8001246:	f001 f8cd 	bl	80023e4 <siprintf>
			uart_write((uint8_t*)Txt);                                   // Escreve a string na serial
 800124a:	480d      	ldr	r0, [pc, #52]	@ (8001280 <main+0x98>)
 800124c:	f000 f94c 	bl	80014e8 <uart_write>

			// Converte a temperatura para exibição no LCD sem \r\n
			sprintf(Txt, "Temp: %.1f\xDF" "C", Ds18b20_Temp);           // \xDF é o código para o símbolo de grau em muitos conjuntos de caracteres do LCD
 8001250:	4b08      	ldr	r3, [pc, #32]	@ (8001274 <main+0x8c>)
 8001252:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001256:	490b      	ldr	r1, [pc, #44]	@ (8001284 <main+0x9c>)
 8001258:	4809      	ldr	r0, [pc, #36]	@ (8001280 <main+0x98>)
 800125a:	f001 f8c3 	bl	80023e4 <siprintf>

			lcd_setcursor(0, 0);
 800125e:	2100      	movs	r1, #0
 8001260:	2000      	movs	r0, #0
 8001262:	f7ff ff13 	bl	800108c <lcd_setcursor>
			LCD_string(Txt);
 8001266:	4806      	ldr	r0, [pc, #24]	@ (8001280 <main+0x98>)
 8001268:	f7ff ff58 	bl	800111c <LCD_string>
		if (updateTemp) {
 800126c:	e7c6      	b.n	80011fc <main+0x14>
 800126e:	bf00      	nop
 8001270:	20000232 	.word	0x20000232
 8001274:	200001f8 	.word	0x200001f8
 8001278:	3fb00000 	.word	0x3fb00000
 800127c:	08005cf8 	.word	0x08005cf8
 8001280:	20000200 	.word	0x20000200
 8001284:	08005d08 	.word	0x08005d08

08001288 <Mcu_Config>:
}


// Definição das funções
void Mcu_Config(void)
{
 8001288:	b580      	push	{r7, lr}
 800128a:	af00      	add	r7, sp, #0
    GpioConfig();                                                   // Configura os GPIOs
 800128c:	f000 f804 	bl	8001298 <GpioConfig>
    usart_init();	                                                // Configura a USART1
 8001290:	f000 f8de 	bl	8001450 <usart_init>


}
 8001294:	bf00      	nop
 8001296:	bd80      	pop	{r7, pc}

08001298 <GpioConfig>:

// Configura as portas de GPIO
void GpioConfig(void)
{
 8001298:	b480      	push	{r7}
 800129a:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN;        // Habilita o clock do GPIOB e GPIOC
 800129c:	4b0a      	ldr	r3, [pc, #40]	@ (80012c8 <GpioConfig+0x30>)
 800129e:	699b      	ldr	r3, [r3, #24]
 80012a0:	4a09      	ldr	r2, [pc, #36]	@ (80012c8 <GpioConfig+0x30>)
 80012a2:	f043 0318 	orr.w	r3, r3, #24
 80012a6:	6193      	str	r3, [r2, #24]
    GPIOC->CRH &= ~(GPIO_CRH_CNF15_1 | GPIO_CRH_CNF15_0);           // Configura PC15 como saída push-pull
 80012a8:	4b08      	ldr	r3, [pc, #32]	@ (80012cc <GpioConfig+0x34>)
 80012aa:	685b      	ldr	r3, [r3, #4]
 80012ac:	4a07      	ldr	r2, [pc, #28]	@ (80012cc <GpioConfig+0x34>)
 80012ae:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 80012b2:	6053      	str	r3, [r2, #4]
    GPIOC->CRH |= GPIO_CRH_MODE15_1 | GPIO_CRH_MODE15_0;            // Configura para saída em 50Mhz
 80012b4:	4b05      	ldr	r3, [pc, #20]	@ (80012cc <GpioConfig+0x34>)
 80012b6:	685b      	ldr	r3, [r3, #4]
 80012b8:	4a04      	ldr	r2, [pc, #16]	@ (80012cc <GpioConfig+0x34>)
 80012ba:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 80012be:	6053      	str	r3, [r2, #4]
}
 80012c0:	bf00      	nop
 80012c2:	46bd      	mov	sp, r7
 80012c4:	bc80      	pop	{r7}
 80012c6:	4770      	bx	lr
 80012c8:	40021000 	.word	0x40021000
 80012cc:	40011000 	.word	0x40011000

080012d0 <SysTick_Handler>:

void SysTick_Handler(void)
{
 80012d0:	b480      	push	{r7}
 80012d2:	af00      	add	r7, sp, #0
	MAIN_SM = 1;
 80012d4:	4b03      	ldr	r3, [pc, #12]	@ (80012e4 <SysTick_Handler+0x14>)
 80012d6:	2201      	movs	r2, #1
 80012d8:	701a      	strb	r2, [r3, #0]
}
 80012da:	bf00      	nop
 80012dc:	46bd      	mov	sp, r7
 80012de:	bc80      	pop	{r7}
 80012e0:	4770      	bx	lr
 80012e2:	bf00      	nop
 80012e4:	200001f1 	.word	0x200001f1

080012e8 <setupTimer>:

void setupTimer(void) {
 80012e8:	b580      	push	{r7, lr}
 80012ea:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN; // Habilita o clock do Timer 2
 80012ec:	4b12      	ldr	r3, [pc, #72]	@ (8001338 <setupTimer+0x50>)
 80012ee:	69db      	ldr	r3, [r3, #28]
 80012f0:	4a11      	ldr	r2, [pc, #68]	@ (8001338 <setupTimer+0x50>)
 80012f2:	f043 0301 	orr.w	r3, r3, #1
 80012f6:	61d3      	str	r3, [r2, #28]
    TIM2->PSC = 8000 - 1;              // Prescaler para contar em milissegundos
 80012f8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012fc:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 8001300:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM2->ARR = 1000 - 1;              // Auto-reload para contar até 1000 ms (1 segundo)
 8001302:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001306:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800130a:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM2->DIER |= TIM_DIER_UIE;        // Habilita a interrupção de update
 800130c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001310:	68db      	ldr	r3, [r3, #12]
 8001312:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001316:	f043 0301 	orr.w	r3, r3, #1
 800131a:	60d3      	str	r3, [r2, #12]
    TIM2->CR1 |= TIM_CR1_CEN;          // Habilita o contador do Timer 2
 800131c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001320:	681b      	ldr	r3, [r3, #0]
 8001322:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001326:	f043 0301 	orr.w	r3, r3, #1
 800132a:	6013      	str	r3, [r2, #0]
    NVIC_EnableIRQ(TIM2_IRQn);         // Habilita a interrupção do Timer 2 no NVIC
 800132c:	201c      	movs	r0, #28
 800132e:	f7ff ff3f 	bl	80011b0 <__NVIC_EnableIRQ>
}
 8001332:	bf00      	nop
 8001334:	bd80      	pop	{r7, pc}
 8001336:	bf00      	nop
 8001338:	40021000 	.word	0x40021000

0800133c <TIM2_IRQHandler>:

void TIM2_IRQHandler(void) {
 800133c:	b580      	push	{r7, lr}
 800133e:	af00      	add	r7, sp, #0
    if (TIM2->SR & TIM_SR_UIF) {
 8001340:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001344:	691b      	ldr	r3, [r3, #16]
 8001346:	f003 0301 	and.w	r3, r3, #1
 800134a:	2b00      	cmp	r3, #0
 800134c:	d022      	beq.n	8001394 <TIM2_IRQHandler+0x58>
        TIM2->SR &= ~TIM_SR_UIF;
 800134e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001352:	691b      	ldr	r3, [r3, #16]
 8001354:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001358:	f023 0301 	bic.w	r3, r3, #1
 800135c:	6113      	str	r3, [r2, #16]
        updateTemp = true;
 800135e:	4b0e      	ldr	r3, [pc, #56]	@ (8001398 <TIM2_IRQHandler+0x5c>)
 8001360:	2201      	movs	r2, #1
 8001362:	701a      	strb	r2, [r3, #0]

        if (Ds18b20_Temp >= 25.0) {
 8001364:	4b0d      	ldr	r3, [pc, #52]	@ (800139c <TIM2_IRQHandler+0x60>)
 8001366:	e9d3 0100 	ldrd	r0, r1, [r3]
 800136a:	f04f 0200 	mov.w	r2, #0
 800136e:	4b0c      	ldr	r3, [pc, #48]	@ (80013a0 <TIM2_IRQHandler+0x64>)
 8001370:	f7ff fb38 	bl	80009e4 <__aeabi_dcmpge>
 8001374:	4603      	mov	r3, r0
 8001376:	2b00      	cmp	r3, #0
 8001378:	d006      	beq.n	8001388 <TIM2_IRQHandler+0x4c>
            GPIOC->ODR |= LED_PIN;
 800137a:	4b0a      	ldr	r3, [pc, #40]	@ (80013a4 <TIM2_IRQHandler+0x68>)
 800137c:	68db      	ldr	r3, [r3, #12]
 800137e:	4a09      	ldr	r2, [pc, #36]	@ (80013a4 <TIM2_IRQHandler+0x68>)
 8001380:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001384:	60d3      	str	r3, [r2, #12]
        } else {
            GPIOC->ODR &= ~LED_PIN;
        }
    }
}
 8001386:	e005      	b.n	8001394 <TIM2_IRQHandler+0x58>
            GPIOC->ODR &= ~LED_PIN;
 8001388:	4b06      	ldr	r3, [pc, #24]	@ (80013a4 <TIM2_IRQHandler+0x68>)
 800138a:	68db      	ldr	r3, [r3, #12]
 800138c:	4a05      	ldr	r2, [pc, #20]	@ (80013a4 <TIM2_IRQHandler+0x68>)
 800138e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8001392:	60d3      	str	r3, [r2, #12]
}
 8001394:	bf00      	nop
 8001396:	bd80      	pop	{r7, pc}
 8001398:	20000232 	.word	0x20000232
 800139c:	200001f8 	.word	0x200001f8
 80013a0:	40390000 	.word	0x40390000
 80013a4:	40011000 	.word	0x40011000

080013a8 <Delay_us>:



// Rotina de delay com base em us
void Delay_us(uint32_t Vezes)
{
 80013a8:	b480      	push	{r7}
 80013aa:	b083      	sub	sp, #12
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	6078      	str	r0, [r7, #4]
	SysTick->LOAD = Vezes;											// Carrega o valor de ticks
 80013b0:	4a0b      	ldr	r2, [pc, #44]	@ (80013e0 <Delay_us+0x38>)
 80013b2:	687b      	ldr	r3, [r7, #4]
 80013b4:	6053      	str	r3, [r2, #4]
	SysTick->VAL = 0;												// Zera o contador de systick
 80013b6:	4b0a      	ldr	r3, [pc, #40]	@ (80013e0 <Delay_us+0x38>)
 80013b8:	2200      	movs	r2, #0
 80013ba:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = SysTick_CTRL_ENABLE_Msk;						// Habilita o systick
 80013bc:	4b08      	ldr	r3, [pc, #32]	@ (80013e0 <Delay_us+0x38>)
 80013be:	2201      	movs	r2, #1
 80013c0:	601a      	str	r2, [r3, #0]

	while(!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk));			// Espera dar o tempo
 80013c2:	bf00      	nop
 80013c4:	4b06      	ldr	r3, [pc, #24]	@ (80013e0 <Delay_us+0x38>)
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80013cc:	2b00      	cmp	r3, #0
 80013ce:	d0f9      	beq.n	80013c4 <Delay_us+0x1c>
	SysTick->CTRL = 0;												// Limpa o registrador inteiro
 80013d0:	4b03      	ldr	r3, [pc, #12]	@ (80013e0 <Delay_us+0x38>)
 80013d2:	2200      	movs	r2, #0
 80013d4:	601a      	str	r2, [r3, #0]
}
 80013d6:	bf00      	nop
 80013d8:	370c      	adds	r7, #12
 80013da:	46bd      	mov	sp, r7
 80013dc:	bc80      	pop	{r7}
 80013de:	4770      	bx	lr
 80013e0:	e000e010 	.word	0xe000e010

080013e4 <delay_us>:
    TIM2->SR &= ~(TIM_SR_UIF);
}

// Função para gerar um atraso em microssegundos
void delay_us(uint16_t us)
{
 80013e4:	b480      	push	{r7}
 80013e6:	b083      	sub	sp, #12
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	4603      	mov	r3, r0
 80013ec:	80fb      	strh	r3, [r7, #6]
    TIM2->CR1 |= TIM_CR1_CEN;  // Habilita o contador do Timer
 80013ee:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80013f2:	681b      	ldr	r3, [r3, #0]
 80013f4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80013f8:	f043 0301 	orr.w	r3, r3, #1
 80013fc:	6013      	str	r3, [r2, #0]
    TIM2->CNT = 0;  // Inicializa o contador do Timer com 0
 80013fe:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001402:	2200      	movs	r2, #0
 8001404:	625a      	str	r2, [r3, #36]	@ 0x24
    while (TIM2->CNT < us)  // Aguarda até que o valor do contador atinja o número de microssegundos desejado
 8001406:	bf00      	nop
 8001408:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800140c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800140e:	88fb      	ldrh	r3, [r7, #6]
 8001410:	429a      	cmp	r2, r3
 8001412:	d3f9      	bcc.n	8001408 <delay_us+0x24>
    {
        // O loop é mantido até que o tempo desejado seja atingido
    }
}
 8001414:	bf00      	nop
 8001416:	bf00      	nop
 8001418:	370c      	adds	r7, #12
 800141a:	46bd      	mov	sp, r7
 800141c:	bc80      	pop	{r7}
 800141e:	4770      	bx	lr

08001420 <delay_ms>:

// Função para gerar um atraso em milissegundos
void delay_ms(uint16_t ms)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	b084      	sub	sp, #16
 8001424:	af00      	add	r7, sp, #0
 8001426:	4603      	mov	r3, r0
 8001428:	80fb      	strh	r3, [r7, #6]
    for (uint16_t i = 0; i < ms; i++)
 800142a:	2300      	movs	r3, #0
 800142c:	81fb      	strh	r3, [r7, #14]
 800142e:	e006      	b.n	800143e <delay_ms+0x1e>
    {
        delay_us(1000);  // Cada milissegundo é equivalente a 1000 microssegundos
 8001430:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001434:	f7ff ffd6 	bl	80013e4 <delay_us>
    for (uint16_t i = 0; i < ms; i++)
 8001438:	89fb      	ldrh	r3, [r7, #14]
 800143a:	3301      	adds	r3, #1
 800143c:	81fb      	strh	r3, [r7, #14]
 800143e:	89fa      	ldrh	r2, [r7, #14]
 8001440:	88fb      	ldrh	r3, [r7, #6]
 8001442:	429a      	cmp	r2, r3
 8001444:	d3f4      	bcc.n	8001430 <delay_ms+0x10>
    }
}
 8001446:	bf00      	nop
 8001448:	bf00      	nop
 800144a:	3710      	adds	r7, #16
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}

08001450 <usart_init>:

/*
 * Initialize UART (USART1) peripheral
 */
void usart_init(void)
{
 8001450:	b480      	push	{r7}
 8001452:	af00      	add	r7, sp, #0
	/* UART1 Pin configuration */
	// Enable clock access to GPIOA
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001454:	4b20      	ldr	r3, [pc, #128]	@ (80014d8 <usart_init+0x88>)
 8001456:	699b      	ldr	r3, [r3, #24]
 8001458:	4a1f      	ldr	r2, [pc, #124]	@ (80014d8 <usart_init+0x88>)
 800145a:	f043 0304 	orr.w	r3, r3, #4
 800145e:	6193      	str	r3, [r2, #24]

	/* Configure PA9(TX) as output with maximum speed of 50MHz
	 * and alternate output push-pull mode for USART1 */
	GPIOA->CRH &= 0xFFFFFF0F;
 8001460:	4b1e      	ldr	r3, [pc, #120]	@ (80014dc <usart_init+0x8c>)
 8001462:	685b      	ldr	r3, [r3, #4]
 8001464:	4a1d      	ldr	r2, [pc, #116]	@ (80014dc <usart_init+0x8c>)
 8001466:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800146a:	6053      	str	r3, [r2, #4]
	GPIOA->CRH |= 0x000000B0;
 800146c:	4b1b      	ldr	r3, [pc, #108]	@ (80014dc <usart_init+0x8c>)
 800146e:	685b      	ldr	r3, [r3, #4]
 8001470:	4a1a      	ldr	r2, [pc, #104]	@ (80014dc <usart_init+0x8c>)
 8001472:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8001476:	6053      	str	r3, [r2, #4]

	/* GPIO PB8 configuration for DEBUG */
	// Enable clock access to GPIOB
	RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8001478:	4b17      	ldr	r3, [pc, #92]	@ (80014d8 <usart_init+0x88>)
 800147a:	699b      	ldr	r3, [r3, #24]
 800147c:	4a16      	ldr	r2, [pc, #88]	@ (80014d8 <usart_init+0x88>)
 800147e:	f043 0308 	orr.w	r3, r3, #8
 8001482:	6193      	str	r3, [r2, #24]
	GPIOB->CRH &= 0xFFFFFFF0;
 8001484:	4b16      	ldr	r3, [pc, #88]	@ (80014e0 <usart_init+0x90>)
 8001486:	685b      	ldr	r3, [r3, #4]
 8001488:	4a15      	ldr	r2, [pc, #84]	@ (80014e0 <usart_init+0x90>)
 800148a:	f023 030f 	bic.w	r3, r3, #15
 800148e:	6053      	str	r3, [r2, #4]
	GPIOB->CRH |= 0x00000002;
 8001490:	4b13      	ldr	r3, [pc, #76]	@ (80014e0 <usart_init+0x90>)
 8001492:	685b      	ldr	r3, [r3, #4]
 8001494:	4a12      	ldr	r2, [pc, #72]	@ (80014e0 <usart_init+0x90>)
 8001496:	f043 0302 	orr.w	r3, r3, #2
 800149a:	6053      	str	r3, [r2, #4]

	GPIOB->ODR &= 0x00000000;
 800149c:	4b10      	ldr	r3, [pc, #64]	@ (80014e0 <usart_init+0x90>)
 800149e:	68db      	ldr	r3, [r3, #12]
 80014a0:	4b0f      	ldr	r3, [pc, #60]	@ (80014e0 <usart_init+0x90>)
 80014a2:	2200      	movs	r2, #0
 80014a4:	60da      	str	r2, [r3, #12]

	/* USART1 configuration */
	// Enable clock access to USART1
	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 80014a6:	4b0c      	ldr	r3, [pc, #48]	@ (80014d8 <usart_init+0x88>)
 80014a8:	699b      	ldr	r3, [r3, #24]
 80014aa:	4a0b      	ldr	r2, [pc, #44]	@ (80014d8 <usart_init+0x88>)
 80014ac:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80014b0:	6193      	str	r3, [r2, #24]

	// Transmit Enable
	USART1->CR1 |= USART_CR1_TE;
 80014b2:	4b0c      	ldr	r3, [pc, #48]	@ (80014e4 <usart_init+0x94>)
 80014b4:	68db      	ldr	r3, [r3, #12]
 80014b6:	4a0b      	ldr	r2, [pc, #44]	@ (80014e4 <usart_init+0x94>)
 80014b8:	f043 0308 	orr.w	r3, r3, #8
 80014bc:	60d3      	str	r3, [r2, #12]

	// Set Baud Rate
	USART1->BRR = ((CPU_CLK + (BaudRate / 2U)) / BaudRate);
 80014be:	4b09      	ldr	r3, [pc, #36]	@ (80014e4 <usart_init+0x94>)
 80014c0:	2245      	movs	r2, #69	@ 0x45
 80014c2:	609a      	str	r2, [r3, #8]

	// Enable UART
	USART1->CR1 |= USART_CR1_UE;
 80014c4:	4b07      	ldr	r3, [pc, #28]	@ (80014e4 <usart_init+0x94>)
 80014c6:	68db      	ldr	r3, [r3, #12]
 80014c8:	4a06      	ldr	r2, [pc, #24]	@ (80014e4 <usart_init+0x94>)
 80014ca:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80014ce:	60d3      	str	r3, [r2, #12]
}
 80014d0:	bf00      	nop
 80014d2:	46bd      	mov	sp, r7
 80014d4:	bc80      	pop	{r7}
 80014d6:	4770      	bx	lr
 80014d8:	40021000 	.word	0x40021000
 80014dc:	40010800 	.word	0x40010800
 80014e0:	40010c00 	.word	0x40010c00
 80014e4:	40013800 	.word	0x40013800

080014e8 <uart_write>:
/*
 * UART Write Function
 * Transmit a string of characters via UART
 */
void uart_write(uint8_t *ch)
{
 80014e8:	b480      	push	{r7}
 80014ea:	b083      	sub	sp, #12
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	6078      	str	r0, [r7, #4]
	GPIOB->ODR |= 0x00000100; // Debugging signal (set PB8 high)
 80014f0:	4b11      	ldr	r3, [pc, #68]	@ (8001538 <uart_write+0x50>)
 80014f2:	68db      	ldr	r3, [r3, #12]
 80014f4:	4a10      	ldr	r2, [pc, #64]	@ (8001538 <uart_write+0x50>)
 80014f6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80014fa:	60d3      	str	r3, [r2, #12]

	while (*ch)
 80014fc:	e00d      	b.n	800151a <uart_write+0x32>
	{
		// Wait until transmit data register is empty
		while (!(USART1->SR & USART_SR_TXE)) {}
 80014fe:	bf00      	nop
 8001500:	4b0e      	ldr	r3, [pc, #56]	@ (800153c <uart_write+0x54>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001508:	2b00      	cmp	r3, #0
 800150a:	d0f9      	beq.n	8001500 <uart_write+0x18>

		// Write data to transmit data register
		USART1->DR = (*ch & 0xFF);
 800150c:	687b      	ldr	r3, [r7, #4]
 800150e:	781a      	ldrb	r2, [r3, #0]
 8001510:	4b0a      	ldr	r3, [pc, #40]	@ (800153c <uart_write+0x54>)
 8001512:	605a      	str	r2, [r3, #4]
		ch++;
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	3301      	adds	r3, #1
 8001518:	607b      	str	r3, [r7, #4]
	while (*ch)
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	781b      	ldrb	r3, [r3, #0]
 800151e:	2b00      	cmp	r3, #0
 8001520:	d1ed      	bne.n	80014fe <uart_write+0x16>
	}

	GPIOB->ODR &= ~0x00000100; // Debugging signal (set PB8 low)
 8001522:	4b05      	ldr	r3, [pc, #20]	@ (8001538 <uart_write+0x50>)
 8001524:	68db      	ldr	r3, [r3, #12]
 8001526:	4a04      	ldr	r2, [pc, #16]	@ (8001538 <uart_write+0x50>)
 8001528:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800152c:	60d3      	str	r3, [r2, #12]
}
 800152e:	bf00      	nop
 8001530:	370c      	adds	r7, #12
 8001532:	46bd      	mov	sp, r7
 8001534:	bc80      	pop	{r7}
 8001536:	4770      	bx	lr
 8001538:	40010c00 	.word	0x40010c00
 800153c:	40013800 	.word	0x40013800

08001540 <Reset_Handler>:

/* Call the clock system initialization function.*/


/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001540:	480b      	ldr	r0, [pc, #44]	@ (8001570 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8001542:	490c      	ldr	r1, [pc, #48]	@ (8001574 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8001544:	4a0c      	ldr	r2, [pc, #48]	@ (8001578 <LoopFillZerobss+0x16>)
  movs r3, #0
 8001546:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001548:	e002      	b.n	8001550 <LoopCopyDataInit>

0800154a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800154a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800154c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800154e:	3304      	adds	r3, #4

08001550 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001550:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001552:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001554:	d3f9      	bcc.n	800154a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001556:	4a09      	ldr	r2, [pc, #36]	@ (800157c <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8001558:	4c09      	ldr	r4, [pc, #36]	@ (8001580 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800155a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800155c:	e001      	b.n	8001562 <LoopFillZerobss>

0800155e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800155e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001560:	3204      	adds	r2, #4

08001562 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001562:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001564:	d3fb      	bcc.n	800155e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001566:	f001 f887 	bl	8002678 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800156a:	f7ff fe3d 	bl	80011e8 <main>
  bx lr
 800156e:	4770      	bx	lr
  ldr r0, =_sdata
 8001570:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001574:	200001cc 	.word	0x200001cc
  ldr r2, =_sidata
 8001578:	08006150 	.word	0x08006150
  ldr r2, =_sbss
 800157c:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001580:	20000384 	.word	0x20000384

08001584 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001584:	e7fe      	b.n	8001584 <ADC1_2_IRQHandler>

08001586 <__cvt>:
 8001586:	2b00      	cmp	r3, #0
 8001588:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800158c:	461d      	mov	r5, r3
 800158e:	bfbb      	ittet	lt
 8001590:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8001594:	461d      	movlt	r5, r3
 8001596:	2300      	movge	r3, #0
 8001598:	232d      	movlt	r3, #45	@ 0x2d
 800159a:	b088      	sub	sp, #32
 800159c:	4614      	mov	r4, r2
 800159e:	bfb8      	it	lt
 80015a0:	4614      	movlt	r4, r2
 80015a2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80015a4:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80015a6:	7013      	strb	r3, [r2, #0]
 80015a8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80015aa:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80015ae:	f023 0820 	bic.w	r8, r3, #32
 80015b2:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80015b6:	d005      	beq.n	80015c4 <__cvt+0x3e>
 80015b8:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80015bc:	d100      	bne.n	80015c0 <__cvt+0x3a>
 80015be:	3601      	adds	r6, #1
 80015c0:	2302      	movs	r3, #2
 80015c2:	e000      	b.n	80015c6 <__cvt+0x40>
 80015c4:	2303      	movs	r3, #3
 80015c6:	aa07      	add	r2, sp, #28
 80015c8:	9204      	str	r2, [sp, #16]
 80015ca:	aa06      	add	r2, sp, #24
 80015cc:	e9cd a202 	strd	sl, r2, [sp, #8]
 80015d0:	e9cd 3600 	strd	r3, r6, [sp]
 80015d4:	4622      	mov	r2, r4
 80015d6:	462b      	mov	r3, r5
 80015d8:	f001 f912 	bl	8002800 <_dtoa_r>
 80015dc:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80015e0:	4607      	mov	r7, r0
 80015e2:	d119      	bne.n	8001618 <__cvt+0x92>
 80015e4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80015e6:	07db      	lsls	r3, r3, #31
 80015e8:	d50e      	bpl.n	8001608 <__cvt+0x82>
 80015ea:	eb00 0906 	add.w	r9, r0, r6
 80015ee:	2200      	movs	r2, #0
 80015f0:	2300      	movs	r3, #0
 80015f2:	4620      	mov	r0, r4
 80015f4:	4629      	mov	r1, r5
 80015f6:	f7ff f9d7 	bl	80009a8 <__aeabi_dcmpeq>
 80015fa:	b108      	cbz	r0, 8001600 <__cvt+0x7a>
 80015fc:	f8cd 901c 	str.w	r9, [sp, #28]
 8001600:	2230      	movs	r2, #48	@ 0x30
 8001602:	9b07      	ldr	r3, [sp, #28]
 8001604:	454b      	cmp	r3, r9
 8001606:	d31e      	bcc.n	8001646 <__cvt+0xc0>
 8001608:	4638      	mov	r0, r7
 800160a:	9b07      	ldr	r3, [sp, #28]
 800160c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800160e:	1bdb      	subs	r3, r3, r7
 8001610:	6013      	str	r3, [r2, #0]
 8001612:	b008      	add	sp, #32
 8001614:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001618:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800161c:	eb00 0906 	add.w	r9, r0, r6
 8001620:	d1e5      	bne.n	80015ee <__cvt+0x68>
 8001622:	7803      	ldrb	r3, [r0, #0]
 8001624:	2b30      	cmp	r3, #48	@ 0x30
 8001626:	d10a      	bne.n	800163e <__cvt+0xb8>
 8001628:	2200      	movs	r2, #0
 800162a:	2300      	movs	r3, #0
 800162c:	4620      	mov	r0, r4
 800162e:	4629      	mov	r1, r5
 8001630:	f7ff f9ba 	bl	80009a8 <__aeabi_dcmpeq>
 8001634:	b918      	cbnz	r0, 800163e <__cvt+0xb8>
 8001636:	f1c6 0601 	rsb	r6, r6, #1
 800163a:	f8ca 6000 	str.w	r6, [sl]
 800163e:	f8da 3000 	ldr.w	r3, [sl]
 8001642:	4499      	add	r9, r3
 8001644:	e7d3      	b.n	80015ee <__cvt+0x68>
 8001646:	1c59      	adds	r1, r3, #1
 8001648:	9107      	str	r1, [sp, #28]
 800164a:	701a      	strb	r2, [r3, #0]
 800164c:	e7d9      	b.n	8001602 <__cvt+0x7c>

0800164e <__exponent>:
 800164e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001650:	2900      	cmp	r1, #0
 8001652:	bfb6      	itet	lt
 8001654:	232d      	movlt	r3, #45	@ 0x2d
 8001656:	232b      	movge	r3, #43	@ 0x2b
 8001658:	4249      	neglt	r1, r1
 800165a:	2909      	cmp	r1, #9
 800165c:	7002      	strb	r2, [r0, #0]
 800165e:	7043      	strb	r3, [r0, #1]
 8001660:	dd29      	ble.n	80016b6 <__exponent+0x68>
 8001662:	f10d 0307 	add.w	r3, sp, #7
 8001666:	461d      	mov	r5, r3
 8001668:	270a      	movs	r7, #10
 800166a:	fbb1 f6f7 	udiv	r6, r1, r7
 800166e:	461a      	mov	r2, r3
 8001670:	fb07 1416 	mls	r4, r7, r6, r1
 8001674:	3430      	adds	r4, #48	@ 0x30
 8001676:	f802 4c01 	strb.w	r4, [r2, #-1]
 800167a:	460c      	mov	r4, r1
 800167c:	2c63      	cmp	r4, #99	@ 0x63
 800167e:	4631      	mov	r1, r6
 8001680:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8001684:	dcf1      	bgt.n	800166a <__exponent+0x1c>
 8001686:	3130      	adds	r1, #48	@ 0x30
 8001688:	1e94      	subs	r4, r2, #2
 800168a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800168e:	4623      	mov	r3, r4
 8001690:	1c41      	adds	r1, r0, #1
 8001692:	42ab      	cmp	r3, r5
 8001694:	d30a      	bcc.n	80016ac <__exponent+0x5e>
 8001696:	f10d 0309 	add.w	r3, sp, #9
 800169a:	1a9b      	subs	r3, r3, r2
 800169c:	42ac      	cmp	r4, r5
 800169e:	bf88      	it	hi
 80016a0:	2300      	movhi	r3, #0
 80016a2:	3302      	adds	r3, #2
 80016a4:	4403      	add	r3, r0
 80016a6:	1a18      	subs	r0, r3, r0
 80016a8:	b003      	add	sp, #12
 80016aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016ac:	f813 6b01 	ldrb.w	r6, [r3], #1
 80016b0:	f801 6f01 	strb.w	r6, [r1, #1]!
 80016b4:	e7ed      	b.n	8001692 <__exponent+0x44>
 80016b6:	2330      	movs	r3, #48	@ 0x30
 80016b8:	3130      	adds	r1, #48	@ 0x30
 80016ba:	7083      	strb	r3, [r0, #2]
 80016bc:	70c1      	strb	r1, [r0, #3]
 80016be:	1d03      	adds	r3, r0, #4
 80016c0:	e7f1      	b.n	80016a6 <__exponent+0x58>
	...

080016c4 <_printf_float>:
 80016c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80016c8:	b091      	sub	sp, #68	@ 0x44
 80016ca:	460c      	mov	r4, r1
 80016cc:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 80016d0:	4616      	mov	r6, r2
 80016d2:	461f      	mov	r7, r3
 80016d4:	4605      	mov	r5, r0
 80016d6:	f000 ff85 	bl	80025e4 <_localeconv_r>
 80016da:	6803      	ldr	r3, [r0, #0]
 80016dc:	4618      	mov	r0, r3
 80016de:	9308      	str	r3, [sp, #32]
 80016e0:	f7fe fd36 	bl	8000150 <strlen>
 80016e4:	2300      	movs	r3, #0
 80016e6:	930e      	str	r3, [sp, #56]	@ 0x38
 80016e8:	f8d8 3000 	ldr.w	r3, [r8]
 80016ec:	9009      	str	r0, [sp, #36]	@ 0x24
 80016ee:	3307      	adds	r3, #7
 80016f0:	f023 0307 	bic.w	r3, r3, #7
 80016f4:	f103 0208 	add.w	r2, r3, #8
 80016f8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80016fc:	f8d4 b000 	ldr.w	fp, [r4]
 8001700:	f8c8 2000 	str.w	r2, [r8]
 8001704:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001708:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800170c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800170e:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8001712:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001716:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800171a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800171e:	4b9c      	ldr	r3, [pc, #624]	@ (8001990 <_printf_float+0x2cc>)
 8001720:	f7ff f974 	bl	8000a0c <__aeabi_dcmpun>
 8001724:	bb70      	cbnz	r0, 8001784 <_printf_float+0xc0>
 8001726:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800172a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800172e:	4b98      	ldr	r3, [pc, #608]	@ (8001990 <_printf_float+0x2cc>)
 8001730:	f7ff f94e 	bl	80009d0 <__aeabi_dcmple>
 8001734:	bb30      	cbnz	r0, 8001784 <_printf_float+0xc0>
 8001736:	2200      	movs	r2, #0
 8001738:	2300      	movs	r3, #0
 800173a:	4640      	mov	r0, r8
 800173c:	4649      	mov	r1, r9
 800173e:	f7ff f93d 	bl	80009bc <__aeabi_dcmplt>
 8001742:	b110      	cbz	r0, 800174a <_printf_float+0x86>
 8001744:	232d      	movs	r3, #45	@ 0x2d
 8001746:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800174a:	4a92      	ldr	r2, [pc, #584]	@ (8001994 <_printf_float+0x2d0>)
 800174c:	4b92      	ldr	r3, [pc, #584]	@ (8001998 <_printf_float+0x2d4>)
 800174e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001752:	bf94      	ite	ls
 8001754:	4690      	movls	r8, r2
 8001756:	4698      	movhi	r8, r3
 8001758:	2303      	movs	r3, #3
 800175a:	f04f 0900 	mov.w	r9, #0
 800175e:	6123      	str	r3, [r4, #16]
 8001760:	f02b 0304 	bic.w	r3, fp, #4
 8001764:	6023      	str	r3, [r4, #0]
 8001766:	4633      	mov	r3, r6
 8001768:	4621      	mov	r1, r4
 800176a:	4628      	mov	r0, r5
 800176c:	9700      	str	r7, [sp, #0]
 800176e:	aa0f      	add	r2, sp, #60	@ 0x3c
 8001770:	f000 f9d4 	bl	8001b1c <_printf_common>
 8001774:	3001      	adds	r0, #1
 8001776:	f040 8090 	bne.w	800189a <_printf_float+0x1d6>
 800177a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800177e:	b011      	add	sp, #68	@ 0x44
 8001780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001784:	4642      	mov	r2, r8
 8001786:	464b      	mov	r3, r9
 8001788:	4640      	mov	r0, r8
 800178a:	4649      	mov	r1, r9
 800178c:	f7ff f93e 	bl	8000a0c <__aeabi_dcmpun>
 8001790:	b148      	cbz	r0, 80017a6 <_printf_float+0xe2>
 8001792:	464b      	mov	r3, r9
 8001794:	2b00      	cmp	r3, #0
 8001796:	bfb8      	it	lt
 8001798:	232d      	movlt	r3, #45	@ 0x2d
 800179a:	4a80      	ldr	r2, [pc, #512]	@ (800199c <_printf_float+0x2d8>)
 800179c:	bfb8      	it	lt
 800179e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80017a2:	4b7f      	ldr	r3, [pc, #508]	@ (80019a0 <_printf_float+0x2dc>)
 80017a4:	e7d3      	b.n	800174e <_printf_float+0x8a>
 80017a6:	6863      	ldr	r3, [r4, #4]
 80017a8:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80017ac:	1c5a      	adds	r2, r3, #1
 80017ae:	d13f      	bne.n	8001830 <_printf_float+0x16c>
 80017b0:	2306      	movs	r3, #6
 80017b2:	6063      	str	r3, [r4, #4]
 80017b4:	2200      	movs	r2, #0
 80017b6:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 80017ba:	6023      	str	r3, [r4, #0]
 80017bc:	9206      	str	r2, [sp, #24]
 80017be:	aa0e      	add	r2, sp, #56	@ 0x38
 80017c0:	e9cd a204 	strd	sl, r2, [sp, #16]
 80017c4:	aa0d      	add	r2, sp, #52	@ 0x34
 80017c6:	9203      	str	r2, [sp, #12]
 80017c8:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 80017cc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80017d0:	6863      	ldr	r3, [r4, #4]
 80017d2:	4642      	mov	r2, r8
 80017d4:	9300      	str	r3, [sp, #0]
 80017d6:	4628      	mov	r0, r5
 80017d8:	464b      	mov	r3, r9
 80017da:	910a      	str	r1, [sp, #40]	@ 0x28
 80017dc:	f7ff fed3 	bl	8001586 <__cvt>
 80017e0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80017e2:	4680      	mov	r8, r0
 80017e4:	2947      	cmp	r1, #71	@ 0x47
 80017e6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80017e8:	d128      	bne.n	800183c <_printf_float+0x178>
 80017ea:	1cc8      	adds	r0, r1, #3
 80017ec:	db02      	blt.n	80017f4 <_printf_float+0x130>
 80017ee:	6863      	ldr	r3, [r4, #4]
 80017f0:	4299      	cmp	r1, r3
 80017f2:	dd40      	ble.n	8001876 <_printf_float+0x1b2>
 80017f4:	f1aa 0a02 	sub.w	sl, sl, #2
 80017f8:	fa5f fa8a 	uxtb.w	sl, sl
 80017fc:	4652      	mov	r2, sl
 80017fe:	3901      	subs	r1, #1
 8001800:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001804:	910d      	str	r1, [sp, #52]	@ 0x34
 8001806:	f7ff ff22 	bl	800164e <__exponent>
 800180a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800180c:	4681      	mov	r9, r0
 800180e:	1813      	adds	r3, r2, r0
 8001810:	2a01      	cmp	r2, #1
 8001812:	6123      	str	r3, [r4, #16]
 8001814:	dc02      	bgt.n	800181c <_printf_float+0x158>
 8001816:	6822      	ldr	r2, [r4, #0]
 8001818:	07d2      	lsls	r2, r2, #31
 800181a:	d501      	bpl.n	8001820 <_printf_float+0x15c>
 800181c:	3301      	adds	r3, #1
 800181e:	6123      	str	r3, [r4, #16]
 8001820:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8001824:	2b00      	cmp	r3, #0
 8001826:	d09e      	beq.n	8001766 <_printf_float+0xa2>
 8001828:	232d      	movs	r3, #45	@ 0x2d
 800182a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800182e:	e79a      	b.n	8001766 <_printf_float+0xa2>
 8001830:	2947      	cmp	r1, #71	@ 0x47
 8001832:	d1bf      	bne.n	80017b4 <_printf_float+0xf0>
 8001834:	2b00      	cmp	r3, #0
 8001836:	d1bd      	bne.n	80017b4 <_printf_float+0xf0>
 8001838:	2301      	movs	r3, #1
 800183a:	e7ba      	b.n	80017b2 <_printf_float+0xee>
 800183c:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001840:	d9dc      	bls.n	80017fc <_printf_float+0x138>
 8001842:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001846:	d118      	bne.n	800187a <_printf_float+0x1b6>
 8001848:	2900      	cmp	r1, #0
 800184a:	6863      	ldr	r3, [r4, #4]
 800184c:	dd0b      	ble.n	8001866 <_printf_float+0x1a2>
 800184e:	6121      	str	r1, [r4, #16]
 8001850:	b913      	cbnz	r3, 8001858 <_printf_float+0x194>
 8001852:	6822      	ldr	r2, [r4, #0]
 8001854:	07d0      	lsls	r0, r2, #31
 8001856:	d502      	bpl.n	800185e <_printf_float+0x19a>
 8001858:	3301      	adds	r3, #1
 800185a:	440b      	add	r3, r1
 800185c:	6123      	str	r3, [r4, #16]
 800185e:	f04f 0900 	mov.w	r9, #0
 8001862:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001864:	e7dc      	b.n	8001820 <_printf_float+0x15c>
 8001866:	b913      	cbnz	r3, 800186e <_printf_float+0x1aa>
 8001868:	6822      	ldr	r2, [r4, #0]
 800186a:	07d2      	lsls	r2, r2, #31
 800186c:	d501      	bpl.n	8001872 <_printf_float+0x1ae>
 800186e:	3302      	adds	r3, #2
 8001870:	e7f4      	b.n	800185c <_printf_float+0x198>
 8001872:	2301      	movs	r3, #1
 8001874:	e7f2      	b.n	800185c <_printf_float+0x198>
 8001876:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800187a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800187c:	4299      	cmp	r1, r3
 800187e:	db05      	blt.n	800188c <_printf_float+0x1c8>
 8001880:	6823      	ldr	r3, [r4, #0]
 8001882:	6121      	str	r1, [r4, #16]
 8001884:	07d8      	lsls	r0, r3, #31
 8001886:	d5ea      	bpl.n	800185e <_printf_float+0x19a>
 8001888:	1c4b      	adds	r3, r1, #1
 800188a:	e7e7      	b.n	800185c <_printf_float+0x198>
 800188c:	2900      	cmp	r1, #0
 800188e:	bfcc      	ite	gt
 8001890:	2201      	movgt	r2, #1
 8001892:	f1c1 0202 	rsble	r2, r1, #2
 8001896:	4413      	add	r3, r2
 8001898:	e7e0      	b.n	800185c <_printf_float+0x198>
 800189a:	6823      	ldr	r3, [r4, #0]
 800189c:	055a      	lsls	r2, r3, #21
 800189e:	d407      	bmi.n	80018b0 <_printf_float+0x1ec>
 80018a0:	6923      	ldr	r3, [r4, #16]
 80018a2:	4642      	mov	r2, r8
 80018a4:	4631      	mov	r1, r6
 80018a6:	4628      	mov	r0, r5
 80018a8:	47b8      	blx	r7
 80018aa:	3001      	adds	r0, #1
 80018ac:	d12b      	bne.n	8001906 <_printf_float+0x242>
 80018ae:	e764      	b.n	800177a <_printf_float+0xb6>
 80018b0:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80018b4:	f240 80dc 	bls.w	8001a70 <_printf_float+0x3ac>
 80018b8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80018bc:	2200      	movs	r2, #0
 80018be:	2300      	movs	r3, #0
 80018c0:	f7ff f872 	bl	80009a8 <__aeabi_dcmpeq>
 80018c4:	2800      	cmp	r0, #0
 80018c6:	d033      	beq.n	8001930 <_printf_float+0x26c>
 80018c8:	2301      	movs	r3, #1
 80018ca:	4631      	mov	r1, r6
 80018cc:	4628      	mov	r0, r5
 80018ce:	4a35      	ldr	r2, [pc, #212]	@ (80019a4 <_printf_float+0x2e0>)
 80018d0:	47b8      	blx	r7
 80018d2:	3001      	adds	r0, #1
 80018d4:	f43f af51 	beq.w	800177a <_printf_float+0xb6>
 80018d8:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 80018dc:	4543      	cmp	r3, r8
 80018de:	db02      	blt.n	80018e6 <_printf_float+0x222>
 80018e0:	6823      	ldr	r3, [r4, #0]
 80018e2:	07d8      	lsls	r0, r3, #31
 80018e4:	d50f      	bpl.n	8001906 <_printf_float+0x242>
 80018e6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80018ea:	4631      	mov	r1, r6
 80018ec:	4628      	mov	r0, r5
 80018ee:	47b8      	blx	r7
 80018f0:	3001      	adds	r0, #1
 80018f2:	f43f af42 	beq.w	800177a <_printf_float+0xb6>
 80018f6:	f04f 0900 	mov.w	r9, #0
 80018fa:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 80018fe:	f104 0a1a 	add.w	sl, r4, #26
 8001902:	45c8      	cmp	r8, r9
 8001904:	dc09      	bgt.n	800191a <_printf_float+0x256>
 8001906:	6823      	ldr	r3, [r4, #0]
 8001908:	079b      	lsls	r3, r3, #30
 800190a:	f100 8102 	bmi.w	8001b12 <_printf_float+0x44e>
 800190e:	68e0      	ldr	r0, [r4, #12]
 8001910:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001912:	4298      	cmp	r0, r3
 8001914:	bfb8      	it	lt
 8001916:	4618      	movlt	r0, r3
 8001918:	e731      	b.n	800177e <_printf_float+0xba>
 800191a:	2301      	movs	r3, #1
 800191c:	4652      	mov	r2, sl
 800191e:	4631      	mov	r1, r6
 8001920:	4628      	mov	r0, r5
 8001922:	47b8      	blx	r7
 8001924:	3001      	adds	r0, #1
 8001926:	f43f af28 	beq.w	800177a <_printf_float+0xb6>
 800192a:	f109 0901 	add.w	r9, r9, #1
 800192e:	e7e8      	b.n	8001902 <_printf_float+0x23e>
 8001930:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001932:	2b00      	cmp	r3, #0
 8001934:	dc38      	bgt.n	80019a8 <_printf_float+0x2e4>
 8001936:	2301      	movs	r3, #1
 8001938:	4631      	mov	r1, r6
 800193a:	4628      	mov	r0, r5
 800193c:	4a19      	ldr	r2, [pc, #100]	@ (80019a4 <_printf_float+0x2e0>)
 800193e:	47b8      	blx	r7
 8001940:	3001      	adds	r0, #1
 8001942:	f43f af1a 	beq.w	800177a <_printf_float+0xb6>
 8001946:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 800194a:	ea59 0303 	orrs.w	r3, r9, r3
 800194e:	d102      	bne.n	8001956 <_printf_float+0x292>
 8001950:	6823      	ldr	r3, [r4, #0]
 8001952:	07d9      	lsls	r1, r3, #31
 8001954:	d5d7      	bpl.n	8001906 <_printf_float+0x242>
 8001956:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800195a:	4631      	mov	r1, r6
 800195c:	4628      	mov	r0, r5
 800195e:	47b8      	blx	r7
 8001960:	3001      	adds	r0, #1
 8001962:	f43f af0a 	beq.w	800177a <_printf_float+0xb6>
 8001966:	f04f 0a00 	mov.w	sl, #0
 800196a:	f104 0b1a 	add.w	fp, r4, #26
 800196e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001970:	425b      	negs	r3, r3
 8001972:	4553      	cmp	r3, sl
 8001974:	dc01      	bgt.n	800197a <_printf_float+0x2b6>
 8001976:	464b      	mov	r3, r9
 8001978:	e793      	b.n	80018a2 <_printf_float+0x1de>
 800197a:	2301      	movs	r3, #1
 800197c:	465a      	mov	r2, fp
 800197e:	4631      	mov	r1, r6
 8001980:	4628      	mov	r0, r5
 8001982:	47b8      	blx	r7
 8001984:	3001      	adds	r0, #1
 8001986:	f43f aef8 	beq.w	800177a <_printf_float+0xb6>
 800198a:	f10a 0a01 	add.w	sl, sl, #1
 800198e:	e7ee      	b.n	800196e <_printf_float+0x2aa>
 8001990:	7fefffff 	.word	0x7fefffff
 8001994:	08005d15 	.word	0x08005d15
 8001998:	08005d19 	.word	0x08005d19
 800199c:	08005d1d 	.word	0x08005d1d
 80019a0:	08005d21 	.word	0x08005d21
 80019a4:	08005d25 	.word	0x08005d25
 80019a8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80019aa:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80019ae:	4553      	cmp	r3, sl
 80019b0:	bfa8      	it	ge
 80019b2:	4653      	movge	r3, sl
 80019b4:	2b00      	cmp	r3, #0
 80019b6:	4699      	mov	r9, r3
 80019b8:	dc36      	bgt.n	8001a28 <_printf_float+0x364>
 80019ba:	f04f 0b00 	mov.w	fp, #0
 80019be:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80019c2:	f104 021a 	add.w	r2, r4, #26
 80019c6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80019c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80019ca:	eba3 0309 	sub.w	r3, r3, r9
 80019ce:	455b      	cmp	r3, fp
 80019d0:	dc31      	bgt.n	8001a36 <_printf_float+0x372>
 80019d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80019d4:	459a      	cmp	sl, r3
 80019d6:	dc3a      	bgt.n	8001a4e <_printf_float+0x38a>
 80019d8:	6823      	ldr	r3, [r4, #0]
 80019da:	07da      	lsls	r2, r3, #31
 80019dc:	d437      	bmi.n	8001a4e <_printf_float+0x38a>
 80019de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80019e0:	ebaa 0903 	sub.w	r9, sl, r3
 80019e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80019e6:	ebaa 0303 	sub.w	r3, sl, r3
 80019ea:	4599      	cmp	r9, r3
 80019ec:	bfa8      	it	ge
 80019ee:	4699      	movge	r9, r3
 80019f0:	f1b9 0f00 	cmp.w	r9, #0
 80019f4:	dc33      	bgt.n	8001a5e <_printf_float+0x39a>
 80019f6:	f04f 0800 	mov.w	r8, #0
 80019fa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80019fe:	f104 0b1a 	add.w	fp, r4, #26
 8001a02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001a04:	ebaa 0303 	sub.w	r3, sl, r3
 8001a08:	eba3 0309 	sub.w	r3, r3, r9
 8001a0c:	4543      	cmp	r3, r8
 8001a0e:	f77f af7a 	ble.w	8001906 <_printf_float+0x242>
 8001a12:	2301      	movs	r3, #1
 8001a14:	465a      	mov	r2, fp
 8001a16:	4631      	mov	r1, r6
 8001a18:	4628      	mov	r0, r5
 8001a1a:	47b8      	blx	r7
 8001a1c:	3001      	adds	r0, #1
 8001a1e:	f43f aeac 	beq.w	800177a <_printf_float+0xb6>
 8001a22:	f108 0801 	add.w	r8, r8, #1
 8001a26:	e7ec      	b.n	8001a02 <_printf_float+0x33e>
 8001a28:	4642      	mov	r2, r8
 8001a2a:	4631      	mov	r1, r6
 8001a2c:	4628      	mov	r0, r5
 8001a2e:	47b8      	blx	r7
 8001a30:	3001      	adds	r0, #1
 8001a32:	d1c2      	bne.n	80019ba <_printf_float+0x2f6>
 8001a34:	e6a1      	b.n	800177a <_printf_float+0xb6>
 8001a36:	2301      	movs	r3, #1
 8001a38:	4631      	mov	r1, r6
 8001a3a:	4628      	mov	r0, r5
 8001a3c:	920a      	str	r2, [sp, #40]	@ 0x28
 8001a3e:	47b8      	blx	r7
 8001a40:	3001      	adds	r0, #1
 8001a42:	f43f ae9a 	beq.w	800177a <_printf_float+0xb6>
 8001a46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001a48:	f10b 0b01 	add.w	fp, fp, #1
 8001a4c:	e7bb      	b.n	80019c6 <_printf_float+0x302>
 8001a4e:	4631      	mov	r1, r6
 8001a50:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001a54:	4628      	mov	r0, r5
 8001a56:	47b8      	blx	r7
 8001a58:	3001      	adds	r0, #1
 8001a5a:	d1c0      	bne.n	80019de <_printf_float+0x31a>
 8001a5c:	e68d      	b.n	800177a <_printf_float+0xb6>
 8001a5e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001a60:	464b      	mov	r3, r9
 8001a62:	4631      	mov	r1, r6
 8001a64:	4628      	mov	r0, r5
 8001a66:	4442      	add	r2, r8
 8001a68:	47b8      	blx	r7
 8001a6a:	3001      	adds	r0, #1
 8001a6c:	d1c3      	bne.n	80019f6 <_printf_float+0x332>
 8001a6e:	e684      	b.n	800177a <_printf_float+0xb6>
 8001a70:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001a74:	f1ba 0f01 	cmp.w	sl, #1
 8001a78:	dc01      	bgt.n	8001a7e <_printf_float+0x3ba>
 8001a7a:	07db      	lsls	r3, r3, #31
 8001a7c:	d536      	bpl.n	8001aec <_printf_float+0x428>
 8001a7e:	2301      	movs	r3, #1
 8001a80:	4642      	mov	r2, r8
 8001a82:	4631      	mov	r1, r6
 8001a84:	4628      	mov	r0, r5
 8001a86:	47b8      	blx	r7
 8001a88:	3001      	adds	r0, #1
 8001a8a:	f43f ae76 	beq.w	800177a <_printf_float+0xb6>
 8001a8e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001a92:	4631      	mov	r1, r6
 8001a94:	4628      	mov	r0, r5
 8001a96:	47b8      	blx	r7
 8001a98:	3001      	adds	r0, #1
 8001a9a:	f43f ae6e 	beq.w	800177a <_printf_float+0xb6>
 8001a9e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001aa2:	2200      	movs	r2, #0
 8001aa4:	2300      	movs	r3, #0
 8001aa6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001aaa:	f7fe ff7d 	bl	80009a8 <__aeabi_dcmpeq>
 8001aae:	b9c0      	cbnz	r0, 8001ae2 <_printf_float+0x41e>
 8001ab0:	4653      	mov	r3, sl
 8001ab2:	f108 0201 	add.w	r2, r8, #1
 8001ab6:	4631      	mov	r1, r6
 8001ab8:	4628      	mov	r0, r5
 8001aba:	47b8      	blx	r7
 8001abc:	3001      	adds	r0, #1
 8001abe:	d10c      	bne.n	8001ada <_printf_float+0x416>
 8001ac0:	e65b      	b.n	800177a <_printf_float+0xb6>
 8001ac2:	2301      	movs	r3, #1
 8001ac4:	465a      	mov	r2, fp
 8001ac6:	4631      	mov	r1, r6
 8001ac8:	4628      	mov	r0, r5
 8001aca:	47b8      	blx	r7
 8001acc:	3001      	adds	r0, #1
 8001ace:	f43f ae54 	beq.w	800177a <_printf_float+0xb6>
 8001ad2:	f108 0801 	add.w	r8, r8, #1
 8001ad6:	45d0      	cmp	r8, sl
 8001ad8:	dbf3      	blt.n	8001ac2 <_printf_float+0x3fe>
 8001ada:	464b      	mov	r3, r9
 8001adc:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001ae0:	e6e0      	b.n	80018a4 <_printf_float+0x1e0>
 8001ae2:	f04f 0800 	mov.w	r8, #0
 8001ae6:	f104 0b1a 	add.w	fp, r4, #26
 8001aea:	e7f4      	b.n	8001ad6 <_printf_float+0x412>
 8001aec:	2301      	movs	r3, #1
 8001aee:	4642      	mov	r2, r8
 8001af0:	e7e1      	b.n	8001ab6 <_printf_float+0x3f2>
 8001af2:	2301      	movs	r3, #1
 8001af4:	464a      	mov	r2, r9
 8001af6:	4631      	mov	r1, r6
 8001af8:	4628      	mov	r0, r5
 8001afa:	47b8      	blx	r7
 8001afc:	3001      	adds	r0, #1
 8001afe:	f43f ae3c 	beq.w	800177a <_printf_float+0xb6>
 8001b02:	f108 0801 	add.w	r8, r8, #1
 8001b06:	68e3      	ldr	r3, [r4, #12]
 8001b08:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001b0a:	1a5b      	subs	r3, r3, r1
 8001b0c:	4543      	cmp	r3, r8
 8001b0e:	dcf0      	bgt.n	8001af2 <_printf_float+0x42e>
 8001b10:	e6fd      	b.n	800190e <_printf_float+0x24a>
 8001b12:	f04f 0800 	mov.w	r8, #0
 8001b16:	f104 0919 	add.w	r9, r4, #25
 8001b1a:	e7f4      	b.n	8001b06 <_printf_float+0x442>

08001b1c <_printf_common>:
 8001b1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001b20:	4616      	mov	r6, r2
 8001b22:	4698      	mov	r8, r3
 8001b24:	688a      	ldr	r2, [r1, #8]
 8001b26:	690b      	ldr	r3, [r1, #16]
 8001b28:	4607      	mov	r7, r0
 8001b2a:	4293      	cmp	r3, r2
 8001b2c:	bfb8      	it	lt
 8001b2e:	4613      	movlt	r3, r2
 8001b30:	6033      	str	r3, [r6, #0]
 8001b32:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001b36:	460c      	mov	r4, r1
 8001b38:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001b3c:	b10a      	cbz	r2, 8001b42 <_printf_common+0x26>
 8001b3e:	3301      	adds	r3, #1
 8001b40:	6033      	str	r3, [r6, #0]
 8001b42:	6823      	ldr	r3, [r4, #0]
 8001b44:	0699      	lsls	r1, r3, #26
 8001b46:	bf42      	ittt	mi
 8001b48:	6833      	ldrmi	r3, [r6, #0]
 8001b4a:	3302      	addmi	r3, #2
 8001b4c:	6033      	strmi	r3, [r6, #0]
 8001b4e:	6825      	ldr	r5, [r4, #0]
 8001b50:	f015 0506 	ands.w	r5, r5, #6
 8001b54:	d106      	bne.n	8001b64 <_printf_common+0x48>
 8001b56:	f104 0a19 	add.w	sl, r4, #25
 8001b5a:	68e3      	ldr	r3, [r4, #12]
 8001b5c:	6832      	ldr	r2, [r6, #0]
 8001b5e:	1a9b      	subs	r3, r3, r2
 8001b60:	42ab      	cmp	r3, r5
 8001b62:	dc2b      	bgt.n	8001bbc <_printf_common+0xa0>
 8001b64:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001b68:	6822      	ldr	r2, [r4, #0]
 8001b6a:	3b00      	subs	r3, #0
 8001b6c:	bf18      	it	ne
 8001b6e:	2301      	movne	r3, #1
 8001b70:	0692      	lsls	r2, r2, #26
 8001b72:	d430      	bmi.n	8001bd6 <_printf_common+0xba>
 8001b74:	4641      	mov	r1, r8
 8001b76:	4638      	mov	r0, r7
 8001b78:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001b7c:	47c8      	blx	r9
 8001b7e:	3001      	adds	r0, #1
 8001b80:	d023      	beq.n	8001bca <_printf_common+0xae>
 8001b82:	6823      	ldr	r3, [r4, #0]
 8001b84:	6922      	ldr	r2, [r4, #16]
 8001b86:	f003 0306 	and.w	r3, r3, #6
 8001b8a:	2b04      	cmp	r3, #4
 8001b8c:	bf14      	ite	ne
 8001b8e:	2500      	movne	r5, #0
 8001b90:	6833      	ldreq	r3, [r6, #0]
 8001b92:	f04f 0600 	mov.w	r6, #0
 8001b96:	bf08      	it	eq
 8001b98:	68e5      	ldreq	r5, [r4, #12]
 8001b9a:	f104 041a 	add.w	r4, r4, #26
 8001b9e:	bf08      	it	eq
 8001ba0:	1aed      	subeq	r5, r5, r3
 8001ba2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8001ba6:	bf08      	it	eq
 8001ba8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001bac:	4293      	cmp	r3, r2
 8001bae:	bfc4      	itt	gt
 8001bb0:	1a9b      	subgt	r3, r3, r2
 8001bb2:	18ed      	addgt	r5, r5, r3
 8001bb4:	42b5      	cmp	r5, r6
 8001bb6:	d11a      	bne.n	8001bee <_printf_common+0xd2>
 8001bb8:	2000      	movs	r0, #0
 8001bba:	e008      	b.n	8001bce <_printf_common+0xb2>
 8001bbc:	2301      	movs	r3, #1
 8001bbe:	4652      	mov	r2, sl
 8001bc0:	4641      	mov	r1, r8
 8001bc2:	4638      	mov	r0, r7
 8001bc4:	47c8      	blx	r9
 8001bc6:	3001      	adds	r0, #1
 8001bc8:	d103      	bne.n	8001bd2 <_printf_common+0xb6>
 8001bca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001bce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001bd2:	3501      	adds	r5, #1
 8001bd4:	e7c1      	b.n	8001b5a <_printf_common+0x3e>
 8001bd6:	2030      	movs	r0, #48	@ 0x30
 8001bd8:	18e1      	adds	r1, r4, r3
 8001bda:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001bde:	1c5a      	adds	r2, r3, #1
 8001be0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001be4:	4422      	add	r2, r4
 8001be6:	3302      	adds	r3, #2
 8001be8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001bec:	e7c2      	b.n	8001b74 <_printf_common+0x58>
 8001bee:	2301      	movs	r3, #1
 8001bf0:	4622      	mov	r2, r4
 8001bf2:	4641      	mov	r1, r8
 8001bf4:	4638      	mov	r0, r7
 8001bf6:	47c8      	blx	r9
 8001bf8:	3001      	adds	r0, #1
 8001bfa:	d0e6      	beq.n	8001bca <_printf_common+0xae>
 8001bfc:	3601      	adds	r6, #1
 8001bfe:	e7d9      	b.n	8001bb4 <_printf_common+0x98>

08001c00 <_printf_i>:
 8001c00:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001c04:	7e0f      	ldrb	r7, [r1, #24]
 8001c06:	4691      	mov	r9, r2
 8001c08:	2f78      	cmp	r7, #120	@ 0x78
 8001c0a:	4680      	mov	r8, r0
 8001c0c:	460c      	mov	r4, r1
 8001c0e:	469a      	mov	sl, r3
 8001c10:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001c12:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001c16:	d807      	bhi.n	8001c28 <_printf_i+0x28>
 8001c18:	2f62      	cmp	r7, #98	@ 0x62
 8001c1a:	d80a      	bhi.n	8001c32 <_printf_i+0x32>
 8001c1c:	2f00      	cmp	r7, #0
 8001c1e:	f000 80d3 	beq.w	8001dc8 <_printf_i+0x1c8>
 8001c22:	2f58      	cmp	r7, #88	@ 0x58
 8001c24:	f000 80ba 	beq.w	8001d9c <_printf_i+0x19c>
 8001c28:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001c2c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001c30:	e03a      	b.n	8001ca8 <_printf_i+0xa8>
 8001c32:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001c36:	2b15      	cmp	r3, #21
 8001c38:	d8f6      	bhi.n	8001c28 <_printf_i+0x28>
 8001c3a:	a101      	add	r1, pc, #4	@ (adr r1, 8001c40 <_printf_i+0x40>)
 8001c3c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001c40:	08001c99 	.word	0x08001c99
 8001c44:	08001cad 	.word	0x08001cad
 8001c48:	08001c29 	.word	0x08001c29
 8001c4c:	08001c29 	.word	0x08001c29
 8001c50:	08001c29 	.word	0x08001c29
 8001c54:	08001c29 	.word	0x08001c29
 8001c58:	08001cad 	.word	0x08001cad
 8001c5c:	08001c29 	.word	0x08001c29
 8001c60:	08001c29 	.word	0x08001c29
 8001c64:	08001c29 	.word	0x08001c29
 8001c68:	08001c29 	.word	0x08001c29
 8001c6c:	08001daf 	.word	0x08001daf
 8001c70:	08001cd7 	.word	0x08001cd7
 8001c74:	08001d69 	.word	0x08001d69
 8001c78:	08001c29 	.word	0x08001c29
 8001c7c:	08001c29 	.word	0x08001c29
 8001c80:	08001dd1 	.word	0x08001dd1
 8001c84:	08001c29 	.word	0x08001c29
 8001c88:	08001cd7 	.word	0x08001cd7
 8001c8c:	08001c29 	.word	0x08001c29
 8001c90:	08001c29 	.word	0x08001c29
 8001c94:	08001d71 	.word	0x08001d71
 8001c98:	6833      	ldr	r3, [r6, #0]
 8001c9a:	1d1a      	adds	r2, r3, #4
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	6032      	str	r2, [r6, #0]
 8001ca0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001ca4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001ca8:	2301      	movs	r3, #1
 8001caa:	e09e      	b.n	8001dea <_printf_i+0x1ea>
 8001cac:	6833      	ldr	r3, [r6, #0]
 8001cae:	6820      	ldr	r0, [r4, #0]
 8001cb0:	1d19      	adds	r1, r3, #4
 8001cb2:	6031      	str	r1, [r6, #0]
 8001cb4:	0606      	lsls	r6, r0, #24
 8001cb6:	d501      	bpl.n	8001cbc <_printf_i+0xbc>
 8001cb8:	681d      	ldr	r5, [r3, #0]
 8001cba:	e003      	b.n	8001cc4 <_printf_i+0xc4>
 8001cbc:	0645      	lsls	r5, r0, #25
 8001cbe:	d5fb      	bpl.n	8001cb8 <_printf_i+0xb8>
 8001cc0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001cc4:	2d00      	cmp	r5, #0
 8001cc6:	da03      	bge.n	8001cd0 <_printf_i+0xd0>
 8001cc8:	232d      	movs	r3, #45	@ 0x2d
 8001cca:	426d      	negs	r5, r5
 8001ccc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001cd0:	230a      	movs	r3, #10
 8001cd2:	4859      	ldr	r0, [pc, #356]	@ (8001e38 <_printf_i+0x238>)
 8001cd4:	e011      	b.n	8001cfa <_printf_i+0xfa>
 8001cd6:	6821      	ldr	r1, [r4, #0]
 8001cd8:	6833      	ldr	r3, [r6, #0]
 8001cda:	0608      	lsls	r0, r1, #24
 8001cdc:	f853 5b04 	ldr.w	r5, [r3], #4
 8001ce0:	d402      	bmi.n	8001ce8 <_printf_i+0xe8>
 8001ce2:	0649      	lsls	r1, r1, #25
 8001ce4:	bf48      	it	mi
 8001ce6:	b2ad      	uxthmi	r5, r5
 8001ce8:	2f6f      	cmp	r7, #111	@ 0x6f
 8001cea:	6033      	str	r3, [r6, #0]
 8001cec:	bf14      	ite	ne
 8001cee:	230a      	movne	r3, #10
 8001cf0:	2308      	moveq	r3, #8
 8001cf2:	4851      	ldr	r0, [pc, #324]	@ (8001e38 <_printf_i+0x238>)
 8001cf4:	2100      	movs	r1, #0
 8001cf6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001cfa:	6866      	ldr	r6, [r4, #4]
 8001cfc:	2e00      	cmp	r6, #0
 8001cfe:	bfa8      	it	ge
 8001d00:	6821      	ldrge	r1, [r4, #0]
 8001d02:	60a6      	str	r6, [r4, #8]
 8001d04:	bfa4      	itt	ge
 8001d06:	f021 0104 	bicge.w	r1, r1, #4
 8001d0a:	6021      	strge	r1, [r4, #0]
 8001d0c:	b90d      	cbnz	r5, 8001d12 <_printf_i+0x112>
 8001d0e:	2e00      	cmp	r6, #0
 8001d10:	d04b      	beq.n	8001daa <_printf_i+0x1aa>
 8001d12:	4616      	mov	r6, r2
 8001d14:	fbb5 f1f3 	udiv	r1, r5, r3
 8001d18:	fb03 5711 	mls	r7, r3, r1, r5
 8001d1c:	5dc7      	ldrb	r7, [r0, r7]
 8001d1e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001d22:	462f      	mov	r7, r5
 8001d24:	42bb      	cmp	r3, r7
 8001d26:	460d      	mov	r5, r1
 8001d28:	d9f4      	bls.n	8001d14 <_printf_i+0x114>
 8001d2a:	2b08      	cmp	r3, #8
 8001d2c:	d10b      	bne.n	8001d46 <_printf_i+0x146>
 8001d2e:	6823      	ldr	r3, [r4, #0]
 8001d30:	07df      	lsls	r7, r3, #31
 8001d32:	d508      	bpl.n	8001d46 <_printf_i+0x146>
 8001d34:	6923      	ldr	r3, [r4, #16]
 8001d36:	6861      	ldr	r1, [r4, #4]
 8001d38:	4299      	cmp	r1, r3
 8001d3a:	bfde      	ittt	le
 8001d3c:	2330      	movle	r3, #48	@ 0x30
 8001d3e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001d42:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001d46:	1b92      	subs	r2, r2, r6
 8001d48:	6122      	str	r2, [r4, #16]
 8001d4a:	464b      	mov	r3, r9
 8001d4c:	4621      	mov	r1, r4
 8001d4e:	4640      	mov	r0, r8
 8001d50:	f8cd a000 	str.w	sl, [sp]
 8001d54:	aa03      	add	r2, sp, #12
 8001d56:	f7ff fee1 	bl	8001b1c <_printf_common>
 8001d5a:	3001      	adds	r0, #1
 8001d5c:	d14a      	bne.n	8001df4 <_printf_i+0x1f4>
 8001d5e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001d62:	b004      	add	sp, #16
 8001d64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001d68:	6823      	ldr	r3, [r4, #0]
 8001d6a:	f043 0320 	orr.w	r3, r3, #32
 8001d6e:	6023      	str	r3, [r4, #0]
 8001d70:	2778      	movs	r7, #120	@ 0x78
 8001d72:	4832      	ldr	r0, [pc, #200]	@ (8001e3c <_printf_i+0x23c>)
 8001d74:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001d78:	6823      	ldr	r3, [r4, #0]
 8001d7a:	6831      	ldr	r1, [r6, #0]
 8001d7c:	061f      	lsls	r7, r3, #24
 8001d7e:	f851 5b04 	ldr.w	r5, [r1], #4
 8001d82:	d402      	bmi.n	8001d8a <_printf_i+0x18a>
 8001d84:	065f      	lsls	r7, r3, #25
 8001d86:	bf48      	it	mi
 8001d88:	b2ad      	uxthmi	r5, r5
 8001d8a:	6031      	str	r1, [r6, #0]
 8001d8c:	07d9      	lsls	r1, r3, #31
 8001d8e:	bf44      	itt	mi
 8001d90:	f043 0320 	orrmi.w	r3, r3, #32
 8001d94:	6023      	strmi	r3, [r4, #0]
 8001d96:	b11d      	cbz	r5, 8001da0 <_printf_i+0x1a0>
 8001d98:	2310      	movs	r3, #16
 8001d9a:	e7ab      	b.n	8001cf4 <_printf_i+0xf4>
 8001d9c:	4826      	ldr	r0, [pc, #152]	@ (8001e38 <_printf_i+0x238>)
 8001d9e:	e7e9      	b.n	8001d74 <_printf_i+0x174>
 8001da0:	6823      	ldr	r3, [r4, #0]
 8001da2:	f023 0320 	bic.w	r3, r3, #32
 8001da6:	6023      	str	r3, [r4, #0]
 8001da8:	e7f6      	b.n	8001d98 <_printf_i+0x198>
 8001daa:	4616      	mov	r6, r2
 8001dac:	e7bd      	b.n	8001d2a <_printf_i+0x12a>
 8001dae:	6833      	ldr	r3, [r6, #0]
 8001db0:	6825      	ldr	r5, [r4, #0]
 8001db2:	1d18      	adds	r0, r3, #4
 8001db4:	6961      	ldr	r1, [r4, #20]
 8001db6:	6030      	str	r0, [r6, #0]
 8001db8:	062e      	lsls	r6, r5, #24
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	d501      	bpl.n	8001dc2 <_printf_i+0x1c2>
 8001dbe:	6019      	str	r1, [r3, #0]
 8001dc0:	e002      	b.n	8001dc8 <_printf_i+0x1c8>
 8001dc2:	0668      	lsls	r0, r5, #25
 8001dc4:	d5fb      	bpl.n	8001dbe <_printf_i+0x1be>
 8001dc6:	8019      	strh	r1, [r3, #0]
 8001dc8:	2300      	movs	r3, #0
 8001dca:	4616      	mov	r6, r2
 8001dcc:	6123      	str	r3, [r4, #16]
 8001dce:	e7bc      	b.n	8001d4a <_printf_i+0x14a>
 8001dd0:	6833      	ldr	r3, [r6, #0]
 8001dd2:	2100      	movs	r1, #0
 8001dd4:	1d1a      	adds	r2, r3, #4
 8001dd6:	6032      	str	r2, [r6, #0]
 8001dd8:	681e      	ldr	r6, [r3, #0]
 8001dda:	6862      	ldr	r2, [r4, #4]
 8001ddc:	4630      	mov	r0, r6
 8001dde:	f000 fc72 	bl	80026c6 <memchr>
 8001de2:	b108      	cbz	r0, 8001de8 <_printf_i+0x1e8>
 8001de4:	1b80      	subs	r0, r0, r6
 8001de6:	6060      	str	r0, [r4, #4]
 8001de8:	6863      	ldr	r3, [r4, #4]
 8001dea:	6123      	str	r3, [r4, #16]
 8001dec:	2300      	movs	r3, #0
 8001dee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001df2:	e7aa      	b.n	8001d4a <_printf_i+0x14a>
 8001df4:	4632      	mov	r2, r6
 8001df6:	4649      	mov	r1, r9
 8001df8:	4640      	mov	r0, r8
 8001dfa:	6923      	ldr	r3, [r4, #16]
 8001dfc:	47d0      	blx	sl
 8001dfe:	3001      	adds	r0, #1
 8001e00:	d0ad      	beq.n	8001d5e <_printf_i+0x15e>
 8001e02:	6823      	ldr	r3, [r4, #0]
 8001e04:	079b      	lsls	r3, r3, #30
 8001e06:	d413      	bmi.n	8001e30 <_printf_i+0x230>
 8001e08:	68e0      	ldr	r0, [r4, #12]
 8001e0a:	9b03      	ldr	r3, [sp, #12]
 8001e0c:	4298      	cmp	r0, r3
 8001e0e:	bfb8      	it	lt
 8001e10:	4618      	movlt	r0, r3
 8001e12:	e7a6      	b.n	8001d62 <_printf_i+0x162>
 8001e14:	2301      	movs	r3, #1
 8001e16:	4632      	mov	r2, r6
 8001e18:	4649      	mov	r1, r9
 8001e1a:	4640      	mov	r0, r8
 8001e1c:	47d0      	blx	sl
 8001e1e:	3001      	adds	r0, #1
 8001e20:	d09d      	beq.n	8001d5e <_printf_i+0x15e>
 8001e22:	3501      	adds	r5, #1
 8001e24:	68e3      	ldr	r3, [r4, #12]
 8001e26:	9903      	ldr	r1, [sp, #12]
 8001e28:	1a5b      	subs	r3, r3, r1
 8001e2a:	42ab      	cmp	r3, r5
 8001e2c:	dcf2      	bgt.n	8001e14 <_printf_i+0x214>
 8001e2e:	e7eb      	b.n	8001e08 <_printf_i+0x208>
 8001e30:	2500      	movs	r5, #0
 8001e32:	f104 0619 	add.w	r6, r4, #25
 8001e36:	e7f5      	b.n	8001e24 <_printf_i+0x224>
 8001e38:	08005d27 	.word	0x08005d27
 8001e3c:	08005d38 	.word	0x08005d38

08001e40 <_scanf_float>:
 8001e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e44:	b087      	sub	sp, #28
 8001e46:	9303      	str	r3, [sp, #12]
 8001e48:	688b      	ldr	r3, [r1, #8]
 8001e4a:	4617      	mov	r7, r2
 8001e4c:	1e5a      	subs	r2, r3, #1
 8001e4e:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8001e52:	bf82      	ittt	hi
 8001e54:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8001e58:	eb03 0b05 	addhi.w	fp, r3, r5
 8001e5c:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8001e60:	460a      	mov	r2, r1
 8001e62:	f04f 0500 	mov.w	r5, #0
 8001e66:	bf88      	it	hi
 8001e68:	608b      	strhi	r3, [r1, #8]
 8001e6a:	680b      	ldr	r3, [r1, #0]
 8001e6c:	4680      	mov	r8, r0
 8001e6e:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8001e72:	f842 3b1c 	str.w	r3, [r2], #28
 8001e76:	460c      	mov	r4, r1
 8001e78:	bf98      	it	ls
 8001e7a:	f04f 0b00 	movls.w	fp, #0
 8001e7e:	4616      	mov	r6, r2
 8001e80:	46aa      	mov	sl, r5
 8001e82:	46a9      	mov	r9, r5
 8001e84:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8001e88:	9201      	str	r2, [sp, #4]
 8001e8a:	9502      	str	r5, [sp, #8]
 8001e8c:	68a2      	ldr	r2, [r4, #8]
 8001e8e:	b152      	cbz	r2, 8001ea6 <_scanf_float+0x66>
 8001e90:	683b      	ldr	r3, [r7, #0]
 8001e92:	781b      	ldrb	r3, [r3, #0]
 8001e94:	2b4e      	cmp	r3, #78	@ 0x4e
 8001e96:	d865      	bhi.n	8001f64 <_scanf_float+0x124>
 8001e98:	2b40      	cmp	r3, #64	@ 0x40
 8001e9a:	d83d      	bhi.n	8001f18 <_scanf_float+0xd8>
 8001e9c:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8001ea0:	b2c8      	uxtb	r0, r1
 8001ea2:	280e      	cmp	r0, #14
 8001ea4:	d93b      	bls.n	8001f1e <_scanf_float+0xde>
 8001ea6:	f1b9 0f00 	cmp.w	r9, #0
 8001eaa:	d003      	beq.n	8001eb4 <_scanf_float+0x74>
 8001eac:	6823      	ldr	r3, [r4, #0]
 8001eae:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001eb2:	6023      	str	r3, [r4, #0]
 8001eb4:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001eb8:	f1ba 0f01 	cmp.w	sl, #1
 8001ebc:	f200 8118 	bhi.w	80020f0 <_scanf_float+0x2b0>
 8001ec0:	9b01      	ldr	r3, [sp, #4]
 8001ec2:	429e      	cmp	r6, r3
 8001ec4:	f200 8109 	bhi.w	80020da <_scanf_float+0x29a>
 8001ec8:	2001      	movs	r0, #1
 8001eca:	b007      	add	sp, #28
 8001ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001ed0:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8001ed4:	2a0d      	cmp	r2, #13
 8001ed6:	d8e6      	bhi.n	8001ea6 <_scanf_float+0x66>
 8001ed8:	a101      	add	r1, pc, #4	@ (adr r1, 8001ee0 <_scanf_float+0xa0>)
 8001eda:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8001ede:	bf00      	nop
 8001ee0:	08002027 	.word	0x08002027
 8001ee4:	08001ea7 	.word	0x08001ea7
 8001ee8:	08001ea7 	.word	0x08001ea7
 8001eec:	08001ea7 	.word	0x08001ea7
 8001ef0:	08002087 	.word	0x08002087
 8001ef4:	0800205f 	.word	0x0800205f
 8001ef8:	08001ea7 	.word	0x08001ea7
 8001efc:	08001ea7 	.word	0x08001ea7
 8001f00:	08002035 	.word	0x08002035
 8001f04:	08001ea7 	.word	0x08001ea7
 8001f08:	08001ea7 	.word	0x08001ea7
 8001f0c:	08001ea7 	.word	0x08001ea7
 8001f10:	08001ea7 	.word	0x08001ea7
 8001f14:	08001fed 	.word	0x08001fed
 8001f18:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8001f1c:	e7da      	b.n	8001ed4 <_scanf_float+0x94>
 8001f1e:	290e      	cmp	r1, #14
 8001f20:	d8c1      	bhi.n	8001ea6 <_scanf_float+0x66>
 8001f22:	a001      	add	r0, pc, #4	@ (adr r0, 8001f28 <_scanf_float+0xe8>)
 8001f24:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8001f28:	08001fdd 	.word	0x08001fdd
 8001f2c:	08001ea7 	.word	0x08001ea7
 8001f30:	08001fdd 	.word	0x08001fdd
 8001f34:	08002073 	.word	0x08002073
 8001f38:	08001ea7 	.word	0x08001ea7
 8001f3c:	08001f85 	.word	0x08001f85
 8001f40:	08001fc3 	.word	0x08001fc3
 8001f44:	08001fc3 	.word	0x08001fc3
 8001f48:	08001fc3 	.word	0x08001fc3
 8001f4c:	08001fc3 	.word	0x08001fc3
 8001f50:	08001fc3 	.word	0x08001fc3
 8001f54:	08001fc3 	.word	0x08001fc3
 8001f58:	08001fc3 	.word	0x08001fc3
 8001f5c:	08001fc3 	.word	0x08001fc3
 8001f60:	08001fc3 	.word	0x08001fc3
 8001f64:	2b6e      	cmp	r3, #110	@ 0x6e
 8001f66:	d809      	bhi.n	8001f7c <_scanf_float+0x13c>
 8001f68:	2b60      	cmp	r3, #96	@ 0x60
 8001f6a:	d8b1      	bhi.n	8001ed0 <_scanf_float+0x90>
 8001f6c:	2b54      	cmp	r3, #84	@ 0x54
 8001f6e:	d07b      	beq.n	8002068 <_scanf_float+0x228>
 8001f70:	2b59      	cmp	r3, #89	@ 0x59
 8001f72:	d198      	bne.n	8001ea6 <_scanf_float+0x66>
 8001f74:	2d07      	cmp	r5, #7
 8001f76:	d196      	bne.n	8001ea6 <_scanf_float+0x66>
 8001f78:	2508      	movs	r5, #8
 8001f7a:	e02c      	b.n	8001fd6 <_scanf_float+0x196>
 8001f7c:	2b74      	cmp	r3, #116	@ 0x74
 8001f7e:	d073      	beq.n	8002068 <_scanf_float+0x228>
 8001f80:	2b79      	cmp	r3, #121	@ 0x79
 8001f82:	e7f6      	b.n	8001f72 <_scanf_float+0x132>
 8001f84:	6821      	ldr	r1, [r4, #0]
 8001f86:	05c8      	lsls	r0, r1, #23
 8001f88:	d51b      	bpl.n	8001fc2 <_scanf_float+0x182>
 8001f8a:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8001f8e:	6021      	str	r1, [r4, #0]
 8001f90:	f109 0901 	add.w	r9, r9, #1
 8001f94:	f1bb 0f00 	cmp.w	fp, #0
 8001f98:	d003      	beq.n	8001fa2 <_scanf_float+0x162>
 8001f9a:	3201      	adds	r2, #1
 8001f9c:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
 8001fa0:	60a2      	str	r2, [r4, #8]
 8001fa2:	68a3      	ldr	r3, [r4, #8]
 8001fa4:	3b01      	subs	r3, #1
 8001fa6:	60a3      	str	r3, [r4, #8]
 8001fa8:	6923      	ldr	r3, [r4, #16]
 8001faa:	3301      	adds	r3, #1
 8001fac:	6123      	str	r3, [r4, #16]
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	3b01      	subs	r3, #1
 8001fb2:	2b00      	cmp	r3, #0
 8001fb4:	607b      	str	r3, [r7, #4]
 8001fb6:	f340 8087 	ble.w	80020c8 <_scanf_float+0x288>
 8001fba:	683b      	ldr	r3, [r7, #0]
 8001fbc:	3301      	adds	r3, #1
 8001fbe:	603b      	str	r3, [r7, #0]
 8001fc0:	e764      	b.n	8001e8c <_scanf_float+0x4c>
 8001fc2:	eb1a 0105 	adds.w	r1, sl, r5
 8001fc6:	f47f af6e 	bne.w	8001ea6 <_scanf_float+0x66>
 8001fca:	460d      	mov	r5, r1
 8001fcc:	468a      	mov	sl, r1
 8001fce:	6822      	ldr	r2, [r4, #0]
 8001fd0:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8001fd4:	6022      	str	r2, [r4, #0]
 8001fd6:	f806 3b01 	strb.w	r3, [r6], #1
 8001fda:	e7e2      	b.n	8001fa2 <_scanf_float+0x162>
 8001fdc:	6822      	ldr	r2, [r4, #0]
 8001fde:	0610      	lsls	r0, r2, #24
 8001fe0:	f57f af61 	bpl.w	8001ea6 <_scanf_float+0x66>
 8001fe4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8001fe8:	6022      	str	r2, [r4, #0]
 8001fea:	e7f4      	b.n	8001fd6 <_scanf_float+0x196>
 8001fec:	f1ba 0f00 	cmp.w	sl, #0
 8001ff0:	d10e      	bne.n	8002010 <_scanf_float+0x1d0>
 8001ff2:	f1b9 0f00 	cmp.w	r9, #0
 8001ff6:	d10e      	bne.n	8002016 <_scanf_float+0x1d6>
 8001ff8:	6822      	ldr	r2, [r4, #0]
 8001ffa:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8001ffe:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002002:	d108      	bne.n	8002016 <_scanf_float+0x1d6>
 8002004:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002008:	f04f 0a01 	mov.w	sl, #1
 800200c:	6022      	str	r2, [r4, #0]
 800200e:	e7e2      	b.n	8001fd6 <_scanf_float+0x196>
 8002010:	f1ba 0f02 	cmp.w	sl, #2
 8002014:	d055      	beq.n	80020c2 <_scanf_float+0x282>
 8002016:	2d01      	cmp	r5, #1
 8002018:	d002      	beq.n	8002020 <_scanf_float+0x1e0>
 800201a:	2d04      	cmp	r5, #4
 800201c:	f47f af43 	bne.w	8001ea6 <_scanf_float+0x66>
 8002020:	3501      	adds	r5, #1
 8002022:	b2ed      	uxtb	r5, r5
 8002024:	e7d7      	b.n	8001fd6 <_scanf_float+0x196>
 8002026:	f1ba 0f01 	cmp.w	sl, #1
 800202a:	f47f af3c 	bne.w	8001ea6 <_scanf_float+0x66>
 800202e:	f04f 0a02 	mov.w	sl, #2
 8002032:	e7d0      	b.n	8001fd6 <_scanf_float+0x196>
 8002034:	b97d      	cbnz	r5, 8002056 <_scanf_float+0x216>
 8002036:	f1b9 0f00 	cmp.w	r9, #0
 800203a:	f47f af37 	bne.w	8001eac <_scanf_float+0x6c>
 800203e:	6822      	ldr	r2, [r4, #0]
 8002040:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002044:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002048:	f040 8103 	bne.w	8002252 <_scanf_float+0x412>
 800204c:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002050:	2501      	movs	r5, #1
 8002052:	6022      	str	r2, [r4, #0]
 8002054:	e7bf      	b.n	8001fd6 <_scanf_float+0x196>
 8002056:	2d03      	cmp	r5, #3
 8002058:	d0e2      	beq.n	8002020 <_scanf_float+0x1e0>
 800205a:	2d05      	cmp	r5, #5
 800205c:	e7de      	b.n	800201c <_scanf_float+0x1dc>
 800205e:	2d02      	cmp	r5, #2
 8002060:	f47f af21 	bne.w	8001ea6 <_scanf_float+0x66>
 8002064:	2503      	movs	r5, #3
 8002066:	e7b6      	b.n	8001fd6 <_scanf_float+0x196>
 8002068:	2d06      	cmp	r5, #6
 800206a:	f47f af1c 	bne.w	8001ea6 <_scanf_float+0x66>
 800206e:	2507      	movs	r5, #7
 8002070:	e7b1      	b.n	8001fd6 <_scanf_float+0x196>
 8002072:	6822      	ldr	r2, [r4, #0]
 8002074:	0591      	lsls	r1, r2, #22
 8002076:	f57f af16 	bpl.w	8001ea6 <_scanf_float+0x66>
 800207a:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 800207e:	6022      	str	r2, [r4, #0]
 8002080:	f8cd 9008 	str.w	r9, [sp, #8]
 8002084:	e7a7      	b.n	8001fd6 <_scanf_float+0x196>
 8002086:	6822      	ldr	r2, [r4, #0]
 8002088:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 800208c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002090:	d006      	beq.n	80020a0 <_scanf_float+0x260>
 8002092:	0550      	lsls	r0, r2, #21
 8002094:	f57f af07 	bpl.w	8001ea6 <_scanf_float+0x66>
 8002098:	f1b9 0f00 	cmp.w	r9, #0
 800209c:	f000 80d9 	beq.w	8002252 <_scanf_float+0x412>
 80020a0:	0591      	lsls	r1, r2, #22
 80020a2:	bf58      	it	pl
 80020a4:	9902      	ldrpl	r1, [sp, #8]
 80020a6:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80020aa:	bf58      	it	pl
 80020ac:	eba9 0101 	subpl.w	r1, r9, r1
 80020b0:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 80020b4:	f04f 0900 	mov.w	r9, #0
 80020b8:	bf58      	it	pl
 80020ba:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80020be:	6022      	str	r2, [r4, #0]
 80020c0:	e789      	b.n	8001fd6 <_scanf_float+0x196>
 80020c2:	f04f 0a03 	mov.w	sl, #3
 80020c6:	e786      	b.n	8001fd6 <_scanf_float+0x196>
 80020c8:	4639      	mov	r1, r7
 80020ca:	4640      	mov	r0, r8
 80020cc:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 80020d0:	4798      	blx	r3
 80020d2:	2800      	cmp	r0, #0
 80020d4:	f43f aeda 	beq.w	8001e8c <_scanf_float+0x4c>
 80020d8:	e6e5      	b.n	8001ea6 <_scanf_float+0x66>
 80020da:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80020de:	463a      	mov	r2, r7
 80020e0:	4640      	mov	r0, r8
 80020e2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80020e6:	4798      	blx	r3
 80020e8:	6923      	ldr	r3, [r4, #16]
 80020ea:	3b01      	subs	r3, #1
 80020ec:	6123      	str	r3, [r4, #16]
 80020ee:	e6e7      	b.n	8001ec0 <_scanf_float+0x80>
 80020f0:	1e6b      	subs	r3, r5, #1
 80020f2:	2b06      	cmp	r3, #6
 80020f4:	d824      	bhi.n	8002140 <_scanf_float+0x300>
 80020f6:	2d02      	cmp	r5, #2
 80020f8:	d836      	bhi.n	8002168 <_scanf_float+0x328>
 80020fa:	9b01      	ldr	r3, [sp, #4]
 80020fc:	429e      	cmp	r6, r3
 80020fe:	f67f aee3 	bls.w	8001ec8 <_scanf_float+0x88>
 8002102:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002106:	463a      	mov	r2, r7
 8002108:	4640      	mov	r0, r8
 800210a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800210e:	4798      	blx	r3
 8002110:	6923      	ldr	r3, [r4, #16]
 8002112:	3b01      	subs	r3, #1
 8002114:	6123      	str	r3, [r4, #16]
 8002116:	e7f0      	b.n	80020fa <_scanf_float+0x2ba>
 8002118:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800211c:	463a      	mov	r2, r7
 800211e:	4640      	mov	r0, r8
 8002120:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8002124:	4798      	blx	r3
 8002126:	6923      	ldr	r3, [r4, #16]
 8002128:	3b01      	subs	r3, #1
 800212a:	6123      	str	r3, [r4, #16]
 800212c:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002130:	fa5f fa8a 	uxtb.w	sl, sl
 8002134:	f1ba 0f02 	cmp.w	sl, #2
 8002138:	d1ee      	bne.n	8002118 <_scanf_float+0x2d8>
 800213a:	3d03      	subs	r5, #3
 800213c:	b2ed      	uxtb	r5, r5
 800213e:	1b76      	subs	r6, r6, r5
 8002140:	6823      	ldr	r3, [r4, #0]
 8002142:	05da      	lsls	r2, r3, #23
 8002144:	d530      	bpl.n	80021a8 <_scanf_float+0x368>
 8002146:	055b      	lsls	r3, r3, #21
 8002148:	d511      	bpl.n	800216e <_scanf_float+0x32e>
 800214a:	9b01      	ldr	r3, [sp, #4]
 800214c:	429e      	cmp	r6, r3
 800214e:	f67f aebb 	bls.w	8001ec8 <_scanf_float+0x88>
 8002152:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002156:	463a      	mov	r2, r7
 8002158:	4640      	mov	r0, r8
 800215a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800215e:	4798      	blx	r3
 8002160:	6923      	ldr	r3, [r4, #16]
 8002162:	3b01      	subs	r3, #1
 8002164:	6123      	str	r3, [r4, #16]
 8002166:	e7f0      	b.n	800214a <_scanf_float+0x30a>
 8002168:	46aa      	mov	sl, r5
 800216a:	46b3      	mov	fp, r6
 800216c:	e7de      	b.n	800212c <_scanf_float+0x2ec>
 800216e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002172:	6923      	ldr	r3, [r4, #16]
 8002174:	2965      	cmp	r1, #101	@ 0x65
 8002176:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 800217a:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
 800217e:	6123      	str	r3, [r4, #16]
 8002180:	d00c      	beq.n	800219c <_scanf_float+0x35c>
 8002182:	2945      	cmp	r1, #69	@ 0x45
 8002184:	d00a      	beq.n	800219c <_scanf_float+0x35c>
 8002186:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800218a:	463a      	mov	r2, r7
 800218c:	4640      	mov	r0, r8
 800218e:	4798      	blx	r3
 8002190:	6923      	ldr	r3, [r4, #16]
 8002192:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002196:	3b01      	subs	r3, #1
 8002198:	1eb5      	subs	r5, r6, #2
 800219a:	6123      	str	r3, [r4, #16]
 800219c:	463a      	mov	r2, r7
 800219e:	4640      	mov	r0, r8
 80021a0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80021a4:	4798      	blx	r3
 80021a6:	462e      	mov	r6, r5
 80021a8:	6822      	ldr	r2, [r4, #0]
 80021aa:	f012 0210 	ands.w	r2, r2, #16
 80021ae:	d001      	beq.n	80021b4 <_scanf_float+0x374>
 80021b0:	2000      	movs	r0, #0
 80021b2:	e68a      	b.n	8001eca <_scanf_float+0x8a>
 80021b4:	7032      	strb	r2, [r6, #0]
 80021b6:	6823      	ldr	r3, [r4, #0]
 80021b8:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80021bc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80021c0:	d11c      	bne.n	80021fc <_scanf_float+0x3bc>
 80021c2:	9b02      	ldr	r3, [sp, #8]
 80021c4:	454b      	cmp	r3, r9
 80021c6:	eba3 0209 	sub.w	r2, r3, r9
 80021ca:	d123      	bne.n	8002214 <_scanf_float+0x3d4>
 80021cc:	2200      	movs	r2, #0
 80021ce:	4640      	mov	r0, r8
 80021d0:	9901      	ldr	r1, [sp, #4]
 80021d2:	f002 fc7d 	bl	8004ad0 <_strtod_r>
 80021d6:	9b03      	ldr	r3, [sp, #12]
 80021d8:	6825      	ldr	r5, [r4, #0]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	f015 0f02 	tst.w	r5, #2
 80021e0:	4606      	mov	r6, r0
 80021e2:	460f      	mov	r7, r1
 80021e4:	f103 0204 	add.w	r2, r3, #4
 80021e8:	d01f      	beq.n	800222a <_scanf_float+0x3ea>
 80021ea:	9903      	ldr	r1, [sp, #12]
 80021ec:	600a      	str	r2, [r1, #0]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	e9c3 6700 	strd	r6, r7, [r3]
 80021f4:	68e3      	ldr	r3, [r4, #12]
 80021f6:	3301      	adds	r3, #1
 80021f8:	60e3      	str	r3, [r4, #12]
 80021fa:	e7d9      	b.n	80021b0 <_scanf_float+0x370>
 80021fc:	9b04      	ldr	r3, [sp, #16]
 80021fe:	2b00      	cmp	r3, #0
 8002200:	d0e4      	beq.n	80021cc <_scanf_float+0x38c>
 8002202:	9905      	ldr	r1, [sp, #20]
 8002204:	230a      	movs	r3, #10
 8002206:	4640      	mov	r0, r8
 8002208:	3101      	adds	r1, #1
 800220a:	f002 fce1 	bl	8004bd0 <_strtol_r>
 800220e:	9b04      	ldr	r3, [sp, #16]
 8002210:	9e05      	ldr	r6, [sp, #20]
 8002212:	1ac2      	subs	r2, r0, r3
 8002214:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8002218:	429e      	cmp	r6, r3
 800221a:	bf28      	it	cs
 800221c:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002220:	4630      	mov	r0, r6
 8002222:	490d      	ldr	r1, [pc, #52]	@ (8002258 <_scanf_float+0x418>)
 8002224:	f000 f8de 	bl	80023e4 <siprintf>
 8002228:	e7d0      	b.n	80021cc <_scanf_float+0x38c>
 800222a:	076d      	lsls	r5, r5, #29
 800222c:	d4dd      	bmi.n	80021ea <_scanf_float+0x3aa>
 800222e:	9d03      	ldr	r5, [sp, #12]
 8002230:	602a      	str	r2, [r5, #0]
 8002232:	681d      	ldr	r5, [r3, #0]
 8002234:	4602      	mov	r2, r0
 8002236:	460b      	mov	r3, r1
 8002238:	f7fe fbe8 	bl	8000a0c <__aeabi_dcmpun>
 800223c:	b120      	cbz	r0, 8002248 <_scanf_float+0x408>
 800223e:	4807      	ldr	r0, [pc, #28]	@ (800225c <_scanf_float+0x41c>)
 8002240:	f000 fa50 	bl	80026e4 <nanf>
 8002244:	6028      	str	r0, [r5, #0]
 8002246:	e7d5      	b.n	80021f4 <_scanf_float+0x3b4>
 8002248:	4630      	mov	r0, r6
 800224a:	4639      	mov	r1, r7
 800224c:	f7fe fc3c 	bl	8000ac8 <__aeabi_d2f>
 8002250:	e7f8      	b.n	8002244 <_scanf_float+0x404>
 8002252:	f04f 0900 	mov.w	r9, #0
 8002256:	e62d      	b.n	8001eb4 <_scanf_float+0x74>
 8002258:	08005d49 	.word	0x08005d49
 800225c:	080060dd 	.word	0x080060dd

08002260 <std>:
 8002260:	2300      	movs	r3, #0
 8002262:	b510      	push	{r4, lr}
 8002264:	4604      	mov	r4, r0
 8002266:	e9c0 3300 	strd	r3, r3, [r0]
 800226a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800226e:	6083      	str	r3, [r0, #8]
 8002270:	8181      	strh	r1, [r0, #12]
 8002272:	6643      	str	r3, [r0, #100]	@ 0x64
 8002274:	81c2      	strh	r2, [r0, #14]
 8002276:	6183      	str	r3, [r0, #24]
 8002278:	4619      	mov	r1, r3
 800227a:	2208      	movs	r2, #8
 800227c:	305c      	adds	r0, #92	@ 0x5c
 800227e:	f000 f9a9 	bl	80025d4 <memset>
 8002282:	4b0d      	ldr	r3, [pc, #52]	@ (80022b8 <std+0x58>)
 8002284:	6224      	str	r4, [r4, #32]
 8002286:	6263      	str	r3, [r4, #36]	@ 0x24
 8002288:	4b0c      	ldr	r3, [pc, #48]	@ (80022bc <std+0x5c>)
 800228a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800228c:	4b0c      	ldr	r3, [pc, #48]	@ (80022c0 <std+0x60>)
 800228e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002290:	4b0c      	ldr	r3, [pc, #48]	@ (80022c4 <std+0x64>)
 8002292:	6323      	str	r3, [r4, #48]	@ 0x30
 8002294:	4b0c      	ldr	r3, [pc, #48]	@ (80022c8 <std+0x68>)
 8002296:	429c      	cmp	r4, r3
 8002298:	d006      	beq.n	80022a8 <std+0x48>
 800229a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800229e:	4294      	cmp	r4, r2
 80022a0:	d002      	beq.n	80022a8 <std+0x48>
 80022a2:	33d0      	adds	r3, #208	@ 0xd0
 80022a4:	429c      	cmp	r4, r3
 80022a6:	d105      	bne.n	80022b4 <std+0x54>
 80022a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80022ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022b0:	f000 ba06 	b.w	80026c0 <__retarget_lock_init_recursive>
 80022b4:	bd10      	pop	{r4, pc}
 80022b6:	bf00      	nop
 80022b8:	08002425 	.word	0x08002425
 80022bc:	08002447 	.word	0x08002447
 80022c0:	0800247f 	.word	0x0800247f
 80022c4:	080024a3 	.word	0x080024a3
 80022c8:	20000234 	.word	0x20000234

080022cc <stdio_exit_handler>:
 80022cc:	4a02      	ldr	r2, [pc, #8]	@ (80022d8 <stdio_exit_handler+0xc>)
 80022ce:	4903      	ldr	r1, [pc, #12]	@ (80022dc <stdio_exit_handler+0x10>)
 80022d0:	4803      	ldr	r0, [pc, #12]	@ (80022e0 <stdio_exit_handler+0x14>)
 80022d2:	f000 b869 	b.w	80023a8 <_fwalk_sglue>
 80022d6:	bf00      	nop
 80022d8:	20000004 	.word	0x20000004
 80022dc:	08004f85 	.word	0x08004f85
 80022e0:	20000014 	.word	0x20000014

080022e4 <cleanup_stdio>:
 80022e4:	6841      	ldr	r1, [r0, #4]
 80022e6:	4b0c      	ldr	r3, [pc, #48]	@ (8002318 <cleanup_stdio+0x34>)
 80022e8:	b510      	push	{r4, lr}
 80022ea:	4299      	cmp	r1, r3
 80022ec:	4604      	mov	r4, r0
 80022ee:	d001      	beq.n	80022f4 <cleanup_stdio+0x10>
 80022f0:	f002 fe48 	bl	8004f84 <_fflush_r>
 80022f4:	68a1      	ldr	r1, [r4, #8]
 80022f6:	4b09      	ldr	r3, [pc, #36]	@ (800231c <cleanup_stdio+0x38>)
 80022f8:	4299      	cmp	r1, r3
 80022fa:	d002      	beq.n	8002302 <cleanup_stdio+0x1e>
 80022fc:	4620      	mov	r0, r4
 80022fe:	f002 fe41 	bl	8004f84 <_fflush_r>
 8002302:	68e1      	ldr	r1, [r4, #12]
 8002304:	4b06      	ldr	r3, [pc, #24]	@ (8002320 <cleanup_stdio+0x3c>)
 8002306:	4299      	cmp	r1, r3
 8002308:	d004      	beq.n	8002314 <cleanup_stdio+0x30>
 800230a:	4620      	mov	r0, r4
 800230c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002310:	f002 be38 	b.w	8004f84 <_fflush_r>
 8002314:	bd10      	pop	{r4, pc}
 8002316:	bf00      	nop
 8002318:	20000234 	.word	0x20000234
 800231c:	2000029c 	.word	0x2000029c
 8002320:	20000304 	.word	0x20000304

08002324 <global_stdio_init.part.0>:
 8002324:	b510      	push	{r4, lr}
 8002326:	4b0b      	ldr	r3, [pc, #44]	@ (8002354 <global_stdio_init.part.0+0x30>)
 8002328:	4c0b      	ldr	r4, [pc, #44]	@ (8002358 <global_stdio_init.part.0+0x34>)
 800232a:	4a0c      	ldr	r2, [pc, #48]	@ (800235c <global_stdio_init.part.0+0x38>)
 800232c:	4620      	mov	r0, r4
 800232e:	601a      	str	r2, [r3, #0]
 8002330:	2104      	movs	r1, #4
 8002332:	2200      	movs	r2, #0
 8002334:	f7ff ff94 	bl	8002260 <std>
 8002338:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800233c:	2201      	movs	r2, #1
 800233e:	2109      	movs	r1, #9
 8002340:	f7ff ff8e 	bl	8002260 <std>
 8002344:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002348:	2202      	movs	r2, #2
 800234a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800234e:	2112      	movs	r1, #18
 8002350:	f7ff bf86 	b.w	8002260 <std>
 8002354:	2000036c 	.word	0x2000036c
 8002358:	20000234 	.word	0x20000234
 800235c:	080022cd 	.word	0x080022cd

08002360 <__sfp_lock_acquire>:
 8002360:	4801      	ldr	r0, [pc, #4]	@ (8002368 <__sfp_lock_acquire+0x8>)
 8002362:	f000 b9ae 	b.w	80026c2 <__retarget_lock_acquire_recursive>
 8002366:	bf00      	nop
 8002368:	20000375 	.word	0x20000375

0800236c <__sfp_lock_release>:
 800236c:	4801      	ldr	r0, [pc, #4]	@ (8002374 <__sfp_lock_release+0x8>)
 800236e:	f000 b9a9 	b.w	80026c4 <__retarget_lock_release_recursive>
 8002372:	bf00      	nop
 8002374:	20000375 	.word	0x20000375

08002378 <__sinit>:
 8002378:	b510      	push	{r4, lr}
 800237a:	4604      	mov	r4, r0
 800237c:	f7ff fff0 	bl	8002360 <__sfp_lock_acquire>
 8002380:	6a23      	ldr	r3, [r4, #32]
 8002382:	b11b      	cbz	r3, 800238c <__sinit+0x14>
 8002384:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002388:	f7ff bff0 	b.w	800236c <__sfp_lock_release>
 800238c:	4b04      	ldr	r3, [pc, #16]	@ (80023a0 <__sinit+0x28>)
 800238e:	6223      	str	r3, [r4, #32]
 8002390:	4b04      	ldr	r3, [pc, #16]	@ (80023a4 <__sinit+0x2c>)
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	2b00      	cmp	r3, #0
 8002396:	d1f5      	bne.n	8002384 <__sinit+0xc>
 8002398:	f7ff ffc4 	bl	8002324 <global_stdio_init.part.0>
 800239c:	e7f2      	b.n	8002384 <__sinit+0xc>
 800239e:	bf00      	nop
 80023a0:	080022e5 	.word	0x080022e5
 80023a4:	2000036c 	.word	0x2000036c

080023a8 <_fwalk_sglue>:
 80023a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80023ac:	4607      	mov	r7, r0
 80023ae:	4688      	mov	r8, r1
 80023b0:	4614      	mov	r4, r2
 80023b2:	2600      	movs	r6, #0
 80023b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80023b8:	f1b9 0901 	subs.w	r9, r9, #1
 80023bc:	d505      	bpl.n	80023ca <_fwalk_sglue+0x22>
 80023be:	6824      	ldr	r4, [r4, #0]
 80023c0:	2c00      	cmp	r4, #0
 80023c2:	d1f7      	bne.n	80023b4 <_fwalk_sglue+0xc>
 80023c4:	4630      	mov	r0, r6
 80023c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80023ca:	89ab      	ldrh	r3, [r5, #12]
 80023cc:	2b01      	cmp	r3, #1
 80023ce:	d907      	bls.n	80023e0 <_fwalk_sglue+0x38>
 80023d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80023d4:	3301      	adds	r3, #1
 80023d6:	d003      	beq.n	80023e0 <_fwalk_sglue+0x38>
 80023d8:	4629      	mov	r1, r5
 80023da:	4638      	mov	r0, r7
 80023dc:	47c0      	blx	r8
 80023de:	4306      	orrs	r6, r0
 80023e0:	3568      	adds	r5, #104	@ 0x68
 80023e2:	e7e9      	b.n	80023b8 <_fwalk_sglue+0x10>

080023e4 <siprintf>:
 80023e4:	b40e      	push	{r1, r2, r3}
 80023e6:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80023ea:	b500      	push	{lr}
 80023ec:	b09c      	sub	sp, #112	@ 0x70
 80023ee:	ab1d      	add	r3, sp, #116	@ 0x74
 80023f0:	9002      	str	r0, [sp, #8]
 80023f2:	9006      	str	r0, [sp, #24]
 80023f4:	9107      	str	r1, [sp, #28]
 80023f6:	9104      	str	r1, [sp, #16]
 80023f8:	4808      	ldr	r0, [pc, #32]	@ (800241c <siprintf+0x38>)
 80023fa:	4909      	ldr	r1, [pc, #36]	@ (8002420 <siprintf+0x3c>)
 80023fc:	f853 2b04 	ldr.w	r2, [r3], #4
 8002400:	9105      	str	r1, [sp, #20]
 8002402:	6800      	ldr	r0, [r0, #0]
 8002404:	a902      	add	r1, sp, #8
 8002406:	9301      	str	r3, [sp, #4]
 8002408:	f002 fc40 	bl	8004c8c <_svfiprintf_r>
 800240c:	2200      	movs	r2, #0
 800240e:	9b02      	ldr	r3, [sp, #8]
 8002410:	701a      	strb	r2, [r3, #0]
 8002412:	b01c      	add	sp, #112	@ 0x70
 8002414:	f85d eb04 	ldr.w	lr, [sp], #4
 8002418:	b003      	add	sp, #12
 800241a:	4770      	bx	lr
 800241c:	20000010 	.word	0x20000010
 8002420:	ffff0208 	.word	0xffff0208

08002424 <__sread>:
 8002424:	b510      	push	{r4, lr}
 8002426:	460c      	mov	r4, r1
 8002428:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800242c:	f000 f900 	bl	8002630 <_read_r>
 8002430:	2800      	cmp	r0, #0
 8002432:	bfab      	itete	ge
 8002434:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002436:	89a3      	ldrhlt	r3, [r4, #12]
 8002438:	181b      	addge	r3, r3, r0
 800243a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800243e:	bfac      	ite	ge
 8002440:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002442:	81a3      	strhlt	r3, [r4, #12]
 8002444:	bd10      	pop	{r4, pc}

08002446 <__swrite>:
 8002446:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800244a:	461f      	mov	r7, r3
 800244c:	898b      	ldrh	r3, [r1, #12]
 800244e:	4605      	mov	r5, r0
 8002450:	05db      	lsls	r3, r3, #23
 8002452:	460c      	mov	r4, r1
 8002454:	4616      	mov	r6, r2
 8002456:	d505      	bpl.n	8002464 <__swrite+0x1e>
 8002458:	2302      	movs	r3, #2
 800245a:	2200      	movs	r2, #0
 800245c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002460:	f000 f8d4 	bl	800260c <_lseek_r>
 8002464:	89a3      	ldrh	r3, [r4, #12]
 8002466:	4632      	mov	r2, r6
 8002468:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800246c:	81a3      	strh	r3, [r4, #12]
 800246e:	4628      	mov	r0, r5
 8002470:	463b      	mov	r3, r7
 8002472:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002476:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800247a:	f000 b8eb 	b.w	8002654 <_write_r>

0800247e <__sseek>:
 800247e:	b510      	push	{r4, lr}
 8002480:	460c      	mov	r4, r1
 8002482:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002486:	f000 f8c1 	bl	800260c <_lseek_r>
 800248a:	1c43      	adds	r3, r0, #1
 800248c:	89a3      	ldrh	r3, [r4, #12]
 800248e:	bf15      	itete	ne
 8002490:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002492:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002496:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800249a:	81a3      	strheq	r3, [r4, #12]
 800249c:	bf18      	it	ne
 800249e:	81a3      	strhne	r3, [r4, #12]
 80024a0:	bd10      	pop	{r4, pc}

080024a2 <__sclose>:
 80024a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80024a6:	f000 b8a1 	b.w	80025ec <_close_r>

080024aa <__swbuf_r>:
 80024aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024ac:	460e      	mov	r6, r1
 80024ae:	4614      	mov	r4, r2
 80024b0:	4605      	mov	r5, r0
 80024b2:	b118      	cbz	r0, 80024bc <__swbuf_r+0x12>
 80024b4:	6a03      	ldr	r3, [r0, #32]
 80024b6:	b90b      	cbnz	r3, 80024bc <__swbuf_r+0x12>
 80024b8:	f7ff ff5e 	bl	8002378 <__sinit>
 80024bc:	69a3      	ldr	r3, [r4, #24]
 80024be:	60a3      	str	r3, [r4, #8]
 80024c0:	89a3      	ldrh	r3, [r4, #12]
 80024c2:	071a      	lsls	r2, r3, #28
 80024c4:	d501      	bpl.n	80024ca <__swbuf_r+0x20>
 80024c6:	6923      	ldr	r3, [r4, #16]
 80024c8:	b943      	cbnz	r3, 80024dc <__swbuf_r+0x32>
 80024ca:	4621      	mov	r1, r4
 80024cc:	4628      	mov	r0, r5
 80024ce:	f000 f82b 	bl	8002528 <__swsetup_r>
 80024d2:	b118      	cbz	r0, 80024dc <__swbuf_r+0x32>
 80024d4:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80024d8:	4638      	mov	r0, r7
 80024da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024dc:	6823      	ldr	r3, [r4, #0]
 80024de:	6922      	ldr	r2, [r4, #16]
 80024e0:	b2f6      	uxtb	r6, r6
 80024e2:	1a98      	subs	r0, r3, r2
 80024e4:	6963      	ldr	r3, [r4, #20]
 80024e6:	4637      	mov	r7, r6
 80024e8:	4283      	cmp	r3, r0
 80024ea:	dc05      	bgt.n	80024f8 <__swbuf_r+0x4e>
 80024ec:	4621      	mov	r1, r4
 80024ee:	4628      	mov	r0, r5
 80024f0:	f002 fd48 	bl	8004f84 <_fflush_r>
 80024f4:	2800      	cmp	r0, #0
 80024f6:	d1ed      	bne.n	80024d4 <__swbuf_r+0x2a>
 80024f8:	68a3      	ldr	r3, [r4, #8]
 80024fa:	3b01      	subs	r3, #1
 80024fc:	60a3      	str	r3, [r4, #8]
 80024fe:	6823      	ldr	r3, [r4, #0]
 8002500:	1c5a      	adds	r2, r3, #1
 8002502:	6022      	str	r2, [r4, #0]
 8002504:	701e      	strb	r6, [r3, #0]
 8002506:	6962      	ldr	r2, [r4, #20]
 8002508:	1c43      	adds	r3, r0, #1
 800250a:	429a      	cmp	r2, r3
 800250c:	d004      	beq.n	8002518 <__swbuf_r+0x6e>
 800250e:	89a3      	ldrh	r3, [r4, #12]
 8002510:	07db      	lsls	r3, r3, #31
 8002512:	d5e1      	bpl.n	80024d8 <__swbuf_r+0x2e>
 8002514:	2e0a      	cmp	r6, #10
 8002516:	d1df      	bne.n	80024d8 <__swbuf_r+0x2e>
 8002518:	4621      	mov	r1, r4
 800251a:	4628      	mov	r0, r5
 800251c:	f002 fd32 	bl	8004f84 <_fflush_r>
 8002520:	2800      	cmp	r0, #0
 8002522:	d0d9      	beq.n	80024d8 <__swbuf_r+0x2e>
 8002524:	e7d6      	b.n	80024d4 <__swbuf_r+0x2a>
	...

08002528 <__swsetup_r>:
 8002528:	b538      	push	{r3, r4, r5, lr}
 800252a:	4b29      	ldr	r3, [pc, #164]	@ (80025d0 <__swsetup_r+0xa8>)
 800252c:	4605      	mov	r5, r0
 800252e:	6818      	ldr	r0, [r3, #0]
 8002530:	460c      	mov	r4, r1
 8002532:	b118      	cbz	r0, 800253c <__swsetup_r+0x14>
 8002534:	6a03      	ldr	r3, [r0, #32]
 8002536:	b90b      	cbnz	r3, 800253c <__swsetup_r+0x14>
 8002538:	f7ff ff1e 	bl	8002378 <__sinit>
 800253c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002540:	0719      	lsls	r1, r3, #28
 8002542:	d422      	bmi.n	800258a <__swsetup_r+0x62>
 8002544:	06da      	lsls	r2, r3, #27
 8002546:	d407      	bmi.n	8002558 <__swsetup_r+0x30>
 8002548:	2209      	movs	r2, #9
 800254a:	602a      	str	r2, [r5, #0]
 800254c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002550:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002554:	81a3      	strh	r3, [r4, #12]
 8002556:	e033      	b.n	80025c0 <__swsetup_r+0x98>
 8002558:	0758      	lsls	r0, r3, #29
 800255a:	d512      	bpl.n	8002582 <__swsetup_r+0x5a>
 800255c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800255e:	b141      	cbz	r1, 8002572 <__swsetup_r+0x4a>
 8002560:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8002564:	4299      	cmp	r1, r3
 8002566:	d002      	beq.n	800256e <__swsetup_r+0x46>
 8002568:	4628      	mov	r0, r5
 800256a:	f000 ff11 	bl	8003390 <_free_r>
 800256e:	2300      	movs	r3, #0
 8002570:	6363      	str	r3, [r4, #52]	@ 0x34
 8002572:	89a3      	ldrh	r3, [r4, #12]
 8002574:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8002578:	81a3      	strh	r3, [r4, #12]
 800257a:	2300      	movs	r3, #0
 800257c:	6063      	str	r3, [r4, #4]
 800257e:	6923      	ldr	r3, [r4, #16]
 8002580:	6023      	str	r3, [r4, #0]
 8002582:	89a3      	ldrh	r3, [r4, #12]
 8002584:	f043 0308 	orr.w	r3, r3, #8
 8002588:	81a3      	strh	r3, [r4, #12]
 800258a:	6923      	ldr	r3, [r4, #16]
 800258c:	b94b      	cbnz	r3, 80025a2 <__swsetup_r+0x7a>
 800258e:	89a3      	ldrh	r3, [r4, #12]
 8002590:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8002594:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002598:	d003      	beq.n	80025a2 <__swsetup_r+0x7a>
 800259a:	4621      	mov	r1, r4
 800259c:	4628      	mov	r0, r5
 800259e:	f002 fd3e 	bl	800501e <__smakebuf_r>
 80025a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80025a6:	f013 0201 	ands.w	r2, r3, #1
 80025aa:	d00a      	beq.n	80025c2 <__swsetup_r+0x9a>
 80025ac:	2200      	movs	r2, #0
 80025ae:	60a2      	str	r2, [r4, #8]
 80025b0:	6962      	ldr	r2, [r4, #20]
 80025b2:	4252      	negs	r2, r2
 80025b4:	61a2      	str	r2, [r4, #24]
 80025b6:	6922      	ldr	r2, [r4, #16]
 80025b8:	b942      	cbnz	r2, 80025cc <__swsetup_r+0xa4>
 80025ba:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80025be:	d1c5      	bne.n	800254c <__swsetup_r+0x24>
 80025c0:	bd38      	pop	{r3, r4, r5, pc}
 80025c2:	0799      	lsls	r1, r3, #30
 80025c4:	bf58      	it	pl
 80025c6:	6962      	ldrpl	r2, [r4, #20]
 80025c8:	60a2      	str	r2, [r4, #8]
 80025ca:	e7f4      	b.n	80025b6 <__swsetup_r+0x8e>
 80025cc:	2000      	movs	r0, #0
 80025ce:	e7f7      	b.n	80025c0 <__swsetup_r+0x98>
 80025d0:	20000010 	.word	0x20000010

080025d4 <memset>:
 80025d4:	4603      	mov	r3, r0
 80025d6:	4402      	add	r2, r0
 80025d8:	4293      	cmp	r3, r2
 80025da:	d100      	bne.n	80025de <memset+0xa>
 80025dc:	4770      	bx	lr
 80025de:	f803 1b01 	strb.w	r1, [r3], #1
 80025e2:	e7f9      	b.n	80025d8 <memset+0x4>

080025e4 <_localeconv_r>:
 80025e4:	4800      	ldr	r0, [pc, #0]	@ (80025e8 <_localeconv_r+0x4>)
 80025e6:	4770      	bx	lr
 80025e8:	20000150 	.word	0x20000150

080025ec <_close_r>:
 80025ec:	b538      	push	{r3, r4, r5, lr}
 80025ee:	2300      	movs	r3, #0
 80025f0:	4d05      	ldr	r5, [pc, #20]	@ (8002608 <_close_r+0x1c>)
 80025f2:	4604      	mov	r4, r0
 80025f4:	4608      	mov	r0, r1
 80025f6:	602b      	str	r3, [r5, #0]
 80025f8:	f003 fb22 	bl	8005c40 <_close>
 80025fc:	1c43      	adds	r3, r0, #1
 80025fe:	d102      	bne.n	8002606 <_close_r+0x1a>
 8002600:	682b      	ldr	r3, [r5, #0]
 8002602:	b103      	cbz	r3, 8002606 <_close_r+0x1a>
 8002604:	6023      	str	r3, [r4, #0]
 8002606:	bd38      	pop	{r3, r4, r5, pc}
 8002608:	20000370 	.word	0x20000370

0800260c <_lseek_r>:
 800260c:	b538      	push	{r3, r4, r5, lr}
 800260e:	4604      	mov	r4, r0
 8002610:	4608      	mov	r0, r1
 8002612:	4611      	mov	r1, r2
 8002614:	2200      	movs	r2, #0
 8002616:	4d05      	ldr	r5, [pc, #20]	@ (800262c <_lseek_r+0x20>)
 8002618:	602a      	str	r2, [r5, #0]
 800261a:	461a      	mov	r2, r3
 800261c:	f003 fb38 	bl	8005c90 <_lseek>
 8002620:	1c43      	adds	r3, r0, #1
 8002622:	d102      	bne.n	800262a <_lseek_r+0x1e>
 8002624:	682b      	ldr	r3, [r5, #0]
 8002626:	b103      	cbz	r3, 800262a <_lseek_r+0x1e>
 8002628:	6023      	str	r3, [r4, #0]
 800262a:	bd38      	pop	{r3, r4, r5, pc}
 800262c:	20000370 	.word	0x20000370

08002630 <_read_r>:
 8002630:	b538      	push	{r3, r4, r5, lr}
 8002632:	4604      	mov	r4, r0
 8002634:	4608      	mov	r0, r1
 8002636:	4611      	mov	r1, r2
 8002638:	2200      	movs	r2, #0
 800263a:	4d05      	ldr	r5, [pc, #20]	@ (8002650 <_read_r+0x20>)
 800263c:	602a      	str	r2, [r5, #0]
 800263e:	461a      	mov	r2, r3
 8002640:	f003 fb2e 	bl	8005ca0 <_read>
 8002644:	1c43      	adds	r3, r0, #1
 8002646:	d102      	bne.n	800264e <_read_r+0x1e>
 8002648:	682b      	ldr	r3, [r5, #0]
 800264a:	b103      	cbz	r3, 800264e <_read_r+0x1e>
 800264c:	6023      	str	r3, [r4, #0]
 800264e:	bd38      	pop	{r3, r4, r5, pc}
 8002650:	20000370 	.word	0x20000370

08002654 <_write_r>:
 8002654:	b538      	push	{r3, r4, r5, lr}
 8002656:	4604      	mov	r4, r0
 8002658:	4608      	mov	r0, r1
 800265a:	4611      	mov	r1, r2
 800265c:	2200      	movs	r2, #0
 800265e:	4d05      	ldr	r5, [pc, #20]	@ (8002674 <_write_r+0x20>)
 8002660:	602a      	str	r2, [r5, #0]
 8002662:	461a      	mov	r2, r3
 8002664:	f003 fb32 	bl	8005ccc <_write>
 8002668:	1c43      	adds	r3, r0, #1
 800266a:	d102      	bne.n	8002672 <_write_r+0x1e>
 800266c:	682b      	ldr	r3, [r5, #0]
 800266e:	b103      	cbz	r3, 8002672 <_write_r+0x1e>
 8002670:	6023      	str	r3, [r4, #0]
 8002672:	bd38      	pop	{r3, r4, r5, pc}
 8002674:	20000370 	.word	0x20000370

08002678 <__libc_init_array>:
 8002678:	b570      	push	{r4, r5, r6, lr}
 800267a:	2600      	movs	r6, #0
 800267c:	4d0c      	ldr	r5, [pc, #48]	@ (80026b0 <__libc_init_array+0x38>)
 800267e:	4c0d      	ldr	r4, [pc, #52]	@ (80026b4 <__libc_init_array+0x3c>)
 8002680:	1b64      	subs	r4, r4, r5
 8002682:	10a4      	asrs	r4, r4, #2
 8002684:	42a6      	cmp	r6, r4
 8002686:	d109      	bne.n	800269c <__libc_init_array+0x24>
 8002688:	f003 fb2a 	bl	8005ce0 <_init>
 800268c:	2600      	movs	r6, #0
 800268e:	4d0a      	ldr	r5, [pc, #40]	@ (80026b8 <__libc_init_array+0x40>)
 8002690:	4c0a      	ldr	r4, [pc, #40]	@ (80026bc <__libc_init_array+0x44>)
 8002692:	1b64      	subs	r4, r4, r5
 8002694:	10a4      	asrs	r4, r4, #2
 8002696:	42a6      	cmp	r6, r4
 8002698:	d105      	bne.n	80026a6 <__libc_init_array+0x2e>
 800269a:	bd70      	pop	{r4, r5, r6, pc}
 800269c:	f855 3b04 	ldr.w	r3, [r5], #4
 80026a0:	4798      	blx	r3
 80026a2:	3601      	adds	r6, #1
 80026a4:	e7ee      	b.n	8002684 <__libc_init_array+0xc>
 80026a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80026aa:	4798      	blx	r3
 80026ac:	3601      	adds	r6, #1
 80026ae:	e7f2      	b.n	8002696 <__libc_init_array+0x1e>
 80026b0:	08006148 	.word	0x08006148
 80026b4:	08006148 	.word	0x08006148
 80026b8:	08006148 	.word	0x08006148
 80026bc:	0800614c 	.word	0x0800614c

080026c0 <__retarget_lock_init_recursive>:
 80026c0:	4770      	bx	lr

080026c2 <__retarget_lock_acquire_recursive>:
 80026c2:	4770      	bx	lr

080026c4 <__retarget_lock_release_recursive>:
 80026c4:	4770      	bx	lr

080026c6 <memchr>:
 80026c6:	4603      	mov	r3, r0
 80026c8:	b510      	push	{r4, lr}
 80026ca:	b2c9      	uxtb	r1, r1
 80026cc:	4402      	add	r2, r0
 80026ce:	4293      	cmp	r3, r2
 80026d0:	4618      	mov	r0, r3
 80026d2:	d101      	bne.n	80026d8 <memchr+0x12>
 80026d4:	2000      	movs	r0, #0
 80026d6:	e003      	b.n	80026e0 <memchr+0x1a>
 80026d8:	7804      	ldrb	r4, [r0, #0]
 80026da:	3301      	adds	r3, #1
 80026dc:	428c      	cmp	r4, r1
 80026de:	d1f6      	bne.n	80026ce <memchr+0x8>
 80026e0:	bd10      	pop	{r4, pc}
	...

080026e4 <nanf>:
 80026e4:	4800      	ldr	r0, [pc, #0]	@ (80026e8 <nanf+0x4>)
 80026e6:	4770      	bx	lr
 80026e8:	7fc00000 	.word	0x7fc00000

080026ec <quorem>:
 80026ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026f0:	6903      	ldr	r3, [r0, #16]
 80026f2:	690c      	ldr	r4, [r1, #16]
 80026f4:	4607      	mov	r7, r0
 80026f6:	42a3      	cmp	r3, r4
 80026f8:	db7e      	blt.n	80027f8 <quorem+0x10c>
 80026fa:	3c01      	subs	r4, #1
 80026fc:	00a3      	lsls	r3, r4, #2
 80026fe:	f100 0514 	add.w	r5, r0, #20
 8002702:	f101 0814 	add.w	r8, r1, #20
 8002706:	9300      	str	r3, [sp, #0]
 8002708:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800270c:	9301      	str	r3, [sp, #4]
 800270e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002712:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002716:	3301      	adds	r3, #1
 8002718:	429a      	cmp	r2, r3
 800271a:	fbb2 f6f3 	udiv	r6, r2, r3
 800271e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002722:	d32e      	bcc.n	8002782 <quorem+0x96>
 8002724:	f04f 0a00 	mov.w	sl, #0
 8002728:	46c4      	mov	ip, r8
 800272a:	46ae      	mov	lr, r5
 800272c:	46d3      	mov	fp, sl
 800272e:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002732:	b298      	uxth	r0, r3
 8002734:	fb06 a000 	mla	r0, r6, r0, sl
 8002738:	0c1b      	lsrs	r3, r3, #16
 800273a:	0c02      	lsrs	r2, r0, #16
 800273c:	fb06 2303 	mla	r3, r6, r3, r2
 8002740:	f8de 2000 	ldr.w	r2, [lr]
 8002744:	b280      	uxth	r0, r0
 8002746:	b292      	uxth	r2, r2
 8002748:	1a12      	subs	r2, r2, r0
 800274a:	445a      	add	r2, fp
 800274c:	f8de 0000 	ldr.w	r0, [lr]
 8002750:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002754:	b29b      	uxth	r3, r3
 8002756:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800275a:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800275e:	b292      	uxth	r2, r2
 8002760:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002764:	45e1      	cmp	r9, ip
 8002766:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800276a:	f84e 2b04 	str.w	r2, [lr], #4
 800276e:	d2de      	bcs.n	800272e <quorem+0x42>
 8002770:	9b00      	ldr	r3, [sp, #0]
 8002772:	58eb      	ldr	r3, [r5, r3]
 8002774:	b92b      	cbnz	r3, 8002782 <quorem+0x96>
 8002776:	9b01      	ldr	r3, [sp, #4]
 8002778:	3b04      	subs	r3, #4
 800277a:	429d      	cmp	r5, r3
 800277c:	461a      	mov	r2, r3
 800277e:	d32f      	bcc.n	80027e0 <quorem+0xf4>
 8002780:	613c      	str	r4, [r7, #16]
 8002782:	4638      	mov	r0, r7
 8002784:	f001 f9c4 	bl	8003b10 <__mcmp>
 8002788:	2800      	cmp	r0, #0
 800278a:	db25      	blt.n	80027d8 <quorem+0xec>
 800278c:	4629      	mov	r1, r5
 800278e:	2000      	movs	r0, #0
 8002790:	f858 2b04 	ldr.w	r2, [r8], #4
 8002794:	f8d1 c000 	ldr.w	ip, [r1]
 8002798:	fa1f fe82 	uxth.w	lr, r2
 800279c:	fa1f f38c 	uxth.w	r3, ip
 80027a0:	eba3 030e 	sub.w	r3, r3, lr
 80027a4:	4403      	add	r3, r0
 80027a6:	0c12      	lsrs	r2, r2, #16
 80027a8:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80027ac:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80027b0:	b29b      	uxth	r3, r3
 80027b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80027b6:	45c1      	cmp	r9, r8
 80027b8:	ea4f 4022 	mov.w	r0, r2, asr #16
 80027bc:	f841 3b04 	str.w	r3, [r1], #4
 80027c0:	d2e6      	bcs.n	8002790 <quorem+0xa4>
 80027c2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80027c6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80027ca:	b922      	cbnz	r2, 80027d6 <quorem+0xea>
 80027cc:	3b04      	subs	r3, #4
 80027ce:	429d      	cmp	r5, r3
 80027d0:	461a      	mov	r2, r3
 80027d2:	d30b      	bcc.n	80027ec <quorem+0x100>
 80027d4:	613c      	str	r4, [r7, #16]
 80027d6:	3601      	adds	r6, #1
 80027d8:	4630      	mov	r0, r6
 80027da:	b003      	add	sp, #12
 80027dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027e0:	6812      	ldr	r2, [r2, #0]
 80027e2:	3b04      	subs	r3, #4
 80027e4:	2a00      	cmp	r2, #0
 80027e6:	d1cb      	bne.n	8002780 <quorem+0x94>
 80027e8:	3c01      	subs	r4, #1
 80027ea:	e7c6      	b.n	800277a <quorem+0x8e>
 80027ec:	6812      	ldr	r2, [r2, #0]
 80027ee:	3b04      	subs	r3, #4
 80027f0:	2a00      	cmp	r2, #0
 80027f2:	d1ef      	bne.n	80027d4 <quorem+0xe8>
 80027f4:	3c01      	subs	r4, #1
 80027f6:	e7ea      	b.n	80027ce <quorem+0xe2>
 80027f8:	2000      	movs	r0, #0
 80027fa:	e7ee      	b.n	80027da <quorem+0xee>
 80027fc:	0000      	movs	r0, r0
	...

08002800 <_dtoa_r>:
 8002800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002804:	4614      	mov	r4, r2
 8002806:	461d      	mov	r5, r3
 8002808:	69c7      	ldr	r7, [r0, #28]
 800280a:	b097      	sub	sp, #92	@ 0x5c
 800280c:	4683      	mov	fp, r0
 800280e:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8002812:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8002814:	b97f      	cbnz	r7, 8002836 <_dtoa_r+0x36>
 8002816:	2010      	movs	r0, #16
 8002818:	f000 fe02 	bl	8003420 <malloc>
 800281c:	4602      	mov	r2, r0
 800281e:	f8cb 001c 	str.w	r0, [fp, #28]
 8002822:	b920      	cbnz	r0, 800282e <_dtoa_r+0x2e>
 8002824:	21ef      	movs	r1, #239	@ 0xef
 8002826:	4ba8      	ldr	r3, [pc, #672]	@ (8002ac8 <_dtoa_r+0x2c8>)
 8002828:	48a8      	ldr	r0, [pc, #672]	@ (8002acc <_dtoa_r+0x2cc>)
 800282a:	f002 fcad 	bl	8005188 <__assert_func>
 800282e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002832:	6007      	str	r7, [r0, #0]
 8002834:	60c7      	str	r7, [r0, #12]
 8002836:	f8db 301c 	ldr.w	r3, [fp, #28]
 800283a:	6819      	ldr	r1, [r3, #0]
 800283c:	b159      	cbz	r1, 8002856 <_dtoa_r+0x56>
 800283e:	685a      	ldr	r2, [r3, #4]
 8002840:	2301      	movs	r3, #1
 8002842:	4093      	lsls	r3, r2
 8002844:	604a      	str	r2, [r1, #4]
 8002846:	608b      	str	r3, [r1, #8]
 8002848:	4658      	mov	r0, fp
 800284a:	f000 fedf 	bl	800360c <_Bfree>
 800284e:	2200      	movs	r2, #0
 8002850:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002854:	601a      	str	r2, [r3, #0]
 8002856:	1e2b      	subs	r3, r5, #0
 8002858:	bfaf      	iteee	ge
 800285a:	2300      	movge	r3, #0
 800285c:	2201      	movlt	r2, #1
 800285e:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002862:	9303      	strlt	r3, [sp, #12]
 8002864:	bfa8      	it	ge
 8002866:	6033      	strge	r3, [r6, #0]
 8002868:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800286c:	4b98      	ldr	r3, [pc, #608]	@ (8002ad0 <_dtoa_r+0x2d0>)
 800286e:	bfb8      	it	lt
 8002870:	6032      	strlt	r2, [r6, #0]
 8002872:	ea33 0308 	bics.w	r3, r3, r8
 8002876:	d112      	bne.n	800289e <_dtoa_r+0x9e>
 8002878:	f242 730f 	movw	r3, #9999	@ 0x270f
 800287c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800287e:	6013      	str	r3, [r2, #0]
 8002880:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002884:	4323      	orrs	r3, r4
 8002886:	f000 8550 	beq.w	800332a <_dtoa_r+0xb2a>
 800288a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800288c:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8002ad4 <_dtoa_r+0x2d4>
 8002890:	2b00      	cmp	r3, #0
 8002892:	f000 8552 	beq.w	800333a <_dtoa_r+0xb3a>
 8002896:	f10a 0303 	add.w	r3, sl, #3
 800289a:	f000 bd4c 	b.w	8003336 <_dtoa_r+0xb36>
 800289e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80028a2:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80028a6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80028aa:	2200      	movs	r2, #0
 80028ac:	2300      	movs	r3, #0
 80028ae:	f7fe f87b 	bl	80009a8 <__aeabi_dcmpeq>
 80028b2:	4607      	mov	r7, r0
 80028b4:	b158      	cbz	r0, 80028ce <_dtoa_r+0xce>
 80028b6:	2301      	movs	r3, #1
 80028b8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80028ba:	6013      	str	r3, [r2, #0]
 80028bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80028be:	b113      	cbz	r3, 80028c6 <_dtoa_r+0xc6>
 80028c0:	4b85      	ldr	r3, [pc, #532]	@ (8002ad8 <_dtoa_r+0x2d8>)
 80028c2:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80028c4:	6013      	str	r3, [r2, #0]
 80028c6:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8002adc <_dtoa_r+0x2dc>
 80028ca:	f000 bd36 	b.w	800333a <_dtoa_r+0xb3a>
 80028ce:	ab14      	add	r3, sp, #80	@ 0x50
 80028d0:	9301      	str	r3, [sp, #4]
 80028d2:	ab15      	add	r3, sp, #84	@ 0x54
 80028d4:	9300      	str	r3, [sp, #0]
 80028d6:	4658      	mov	r0, fp
 80028d8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80028dc:	f001 fa30 	bl	8003d40 <__d2b>
 80028e0:	f3c8 560a 	ubfx	r6, r8, #20, #11
 80028e4:	4681      	mov	r9, r0
 80028e6:	2e00      	cmp	r6, #0
 80028e8:	d077      	beq.n	80029da <_dtoa_r+0x1da>
 80028ea:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80028ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80028f0:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80028f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80028f8:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80028fc:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002900:	9712      	str	r7, [sp, #72]	@ 0x48
 8002902:	4619      	mov	r1, r3
 8002904:	2200      	movs	r2, #0
 8002906:	4b76      	ldr	r3, [pc, #472]	@ (8002ae0 <_dtoa_r+0x2e0>)
 8002908:	f7fd fc2e 	bl	8000168 <__aeabi_dsub>
 800290c:	a368      	add	r3, pc, #416	@ (adr r3, 8002ab0 <_dtoa_r+0x2b0>)
 800290e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002912:	f7fd fde1 	bl	80004d8 <__aeabi_dmul>
 8002916:	a368      	add	r3, pc, #416	@ (adr r3, 8002ab8 <_dtoa_r+0x2b8>)
 8002918:	e9d3 2300 	ldrd	r2, r3, [r3]
 800291c:	f7fd fc26 	bl	800016c <__adddf3>
 8002920:	4604      	mov	r4, r0
 8002922:	4630      	mov	r0, r6
 8002924:	460d      	mov	r5, r1
 8002926:	f7fd fd6d 	bl	8000404 <__aeabi_i2d>
 800292a:	a365      	add	r3, pc, #404	@ (adr r3, 8002ac0 <_dtoa_r+0x2c0>)
 800292c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002930:	f7fd fdd2 	bl	80004d8 <__aeabi_dmul>
 8002934:	4602      	mov	r2, r0
 8002936:	460b      	mov	r3, r1
 8002938:	4620      	mov	r0, r4
 800293a:	4629      	mov	r1, r5
 800293c:	f7fd fc16 	bl	800016c <__adddf3>
 8002940:	4604      	mov	r4, r0
 8002942:	460d      	mov	r5, r1
 8002944:	f7fe f878 	bl	8000a38 <__aeabi_d2iz>
 8002948:	2200      	movs	r2, #0
 800294a:	4607      	mov	r7, r0
 800294c:	2300      	movs	r3, #0
 800294e:	4620      	mov	r0, r4
 8002950:	4629      	mov	r1, r5
 8002952:	f7fe f833 	bl	80009bc <__aeabi_dcmplt>
 8002956:	b140      	cbz	r0, 800296a <_dtoa_r+0x16a>
 8002958:	4638      	mov	r0, r7
 800295a:	f7fd fd53 	bl	8000404 <__aeabi_i2d>
 800295e:	4622      	mov	r2, r4
 8002960:	462b      	mov	r3, r5
 8002962:	f7fe f821 	bl	80009a8 <__aeabi_dcmpeq>
 8002966:	b900      	cbnz	r0, 800296a <_dtoa_r+0x16a>
 8002968:	3f01      	subs	r7, #1
 800296a:	2f16      	cmp	r7, #22
 800296c:	d853      	bhi.n	8002a16 <_dtoa_r+0x216>
 800296e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002972:	4b5c      	ldr	r3, [pc, #368]	@ (8002ae4 <_dtoa_r+0x2e4>)
 8002974:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002978:	e9d3 2300 	ldrd	r2, r3, [r3]
 800297c:	f7fe f81e 	bl	80009bc <__aeabi_dcmplt>
 8002980:	2800      	cmp	r0, #0
 8002982:	d04a      	beq.n	8002a1a <_dtoa_r+0x21a>
 8002984:	2300      	movs	r3, #0
 8002986:	3f01      	subs	r7, #1
 8002988:	930f      	str	r3, [sp, #60]	@ 0x3c
 800298a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800298c:	1b9b      	subs	r3, r3, r6
 800298e:	1e5a      	subs	r2, r3, #1
 8002990:	bf46      	itte	mi
 8002992:	f1c3 0801 	rsbmi	r8, r3, #1
 8002996:	2300      	movmi	r3, #0
 8002998:	f04f 0800 	movpl.w	r8, #0
 800299c:	9209      	str	r2, [sp, #36]	@ 0x24
 800299e:	bf48      	it	mi
 80029a0:	9309      	strmi	r3, [sp, #36]	@ 0x24
 80029a2:	2f00      	cmp	r7, #0
 80029a4:	db3b      	blt.n	8002a1e <_dtoa_r+0x21e>
 80029a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80029a8:	970e      	str	r7, [sp, #56]	@ 0x38
 80029aa:	443b      	add	r3, r7
 80029ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80029ae:	2300      	movs	r3, #0
 80029b0:	930a      	str	r3, [sp, #40]	@ 0x28
 80029b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80029b4:	2b09      	cmp	r3, #9
 80029b6:	d866      	bhi.n	8002a86 <_dtoa_r+0x286>
 80029b8:	2b05      	cmp	r3, #5
 80029ba:	bfc4      	itt	gt
 80029bc:	3b04      	subgt	r3, #4
 80029be:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80029c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80029c2:	bfc8      	it	gt
 80029c4:	2400      	movgt	r4, #0
 80029c6:	f1a3 0302 	sub.w	r3, r3, #2
 80029ca:	bfd8      	it	le
 80029cc:	2401      	movle	r4, #1
 80029ce:	2b03      	cmp	r3, #3
 80029d0:	d864      	bhi.n	8002a9c <_dtoa_r+0x29c>
 80029d2:	e8df f003 	tbb	[pc, r3]
 80029d6:	382b      	.short	0x382b
 80029d8:	5636      	.short	0x5636
 80029da:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 80029de:	441e      	add	r6, r3
 80029e0:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80029e4:	2b20      	cmp	r3, #32
 80029e6:	bfc1      	itttt	gt
 80029e8:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80029ec:	fa08 f803 	lslgt.w	r8, r8, r3
 80029f0:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80029f4:	fa24 f303 	lsrgt.w	r3, r4, r3
 80029f8:	bfd6      	itet	le
 80029fa:	f1c3 0320 	rsble	r3, r3, #32
 80029fe:	ea48 0003 	orrgt.w	r0, r8, r3
 8002a02:	fa04 f003 	lslle.w	r0, r4, r3
 8002a06:	f7fd fced 	bl	80003e4 <__aeabi_ui2d>
 8002a0a:	2201      	movs	r2, #1
 8002a0c:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002a10:	3e01      	subs	r6, #1
 8002a12:	9212      	str	r2, [sp, #72]	@ 0x48
 8002a14:	e775      	b.n	8002902 <_dtoa_r+0x102>
 8002a16:	2301      	movs	r3, #1
 8002a18:	e7b6      	b.n	8002988 <_dtoa_r+0x188>
 8002a1a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8002a1c:	e7b5      	b.n	800298a <_dtoa_r+0x18a>
 8002a1e:	427b      	negs	r3, r7
 8002a20:	930a      	str	r3, [sp, #40]	@ 0x28
 8002a22:	2300      	movs	r3, #0
 8002a24:	eba8 0807 	sub.w	r8, r8, r7
 8002a28:	930e      	str	r3, [sp, #56]	@ 0x38
 8002a2a:	e7c2      	b.n	80029b2 <_dtoa_r+0x1b2>
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002a30:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002a32:	2b00      	cmp	r3, #0
 8002a34:	dc35      	bgt.n	8002aa2 <_dtoa_r+0x2a2>
 8002a36:	2301      	movs	r3, #1
 8002a38:	461a      	mov	r2, r3
 8002a3a:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002a3e:	9221      	str	r2, [sp, #132]	@ 0x84
 8002a40:	e00b      	b.n	8002a5a <_dtoa_r+0x25a>
 8002a42:	2301      	movs	r3, #1
 8002a44:	e7f3      	b.n	8002a2e <_dtoa_r+0x22e>
 8002a46:	2300      	movs	r3, #0
 8002a48:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002a4a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002a4c:	18fb      	adds	r3, r7, r3
 8002a4e:	9308      	str	r3, [sp, #32]
 8002a50:	3301      	adds	r3, #1
 8002a52:	2b01      	cmp	r3, #1
 8002a54:	9307      	str	r3, [sp, #28]
 8002a56:	bfb8      	it	lt
 8002a58:	2301      	movlt	r3, #1
 8002a5a:	2100      	movs	r1, #0
 8002a5c:	2204      	movs	r2, #4
 8002a5e:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002a62:	f102 0514 	add.w	r5, r2, #20
 8002a66:	429d      	cmp	r5, r3
 8002a68:	d91f      	bls.n	8002aaa <_dtoa_r+0x2aa>
 8002a6a:	6041      	str	r1, [r0, #4]
 8002a6c:	4658      	mov	r0, fp
 8002a6e:	f000 fd8d 	bl	800358c <_Balloc>
 8002a72:	4682      	mov	sl, r0
 8002a74:	2800      	cmp	r0, #0
 8002a76:	d139      	bne.n	8002aec <_dtoa_r+0x2ec>
 8002a78:	4602      	mov	r2, r0
 8002a7a:	f240 11af 	movw	r1, #431	@ 0x1af
 8002a7e:	4b1a      	ldr	r3, [pc, #104]	@ (8002ae8 <_dtoa_r+0x2e8>)
 8002a80:	e6d2      	b.n	8002828 <_dtoa_r+0x28>
 8002a82:	2301      	movs	r3, #1
 8002a84:	e7e0      	b.n	8002a48 <_dtoa_r+0x248>
 8002a86:	2401      	movs	r4, #1
 8002a88:	2300      	movs	r3, #0
 8002a8a:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002a8c:	9320      	str	r3, [sp, #128]	@ 0x80
 8002a8e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002a92:	2200      	movs	r2, #0
 8002a94:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002a98:	2312      	movs	r3, #18
 8002a9a:	e7d0      	b.n	8002a3e <_dtoa_r+0x23e>
 8002a9c:	2301      	movs	r3, #1
 8002a9e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002aa0:	e7f5      	b.n	8002a8e <_dtoa_r+0x28e>
 8002aa2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002aa4:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002aa8:	e7d7      	b.n	8002a5a <_dtoa_r+0x25a>
 8002aaa:	3101      	adds	r1, #1
 8002aac:	0052      	lsls	r2, r2, #1
 8002aae:	e7d8      	b.n	8002a62 <_dtoa_r+0x262>
 8002ab0:	636f4361 	.word	0x636f4361
 8002ab4:	3fd287a7 	.word	0x3fd287a7
 8002ab8:	8b60c8b3 	.word	0x8b60c8b3
 8002abc:	3fc68a28 	.word	0x3fc68a28
 8002ac0:	509f79fb 	.word	0x509f79fb
 8002ac4:	3fd34413 	.word	0x3fd34413
 8002ac8:	08005d5b 	.word	0x08005d5b
 8002acc:	08005d72 	.word	0x08005d72
 8002ad0:	7ff00000 	.word	0x7ff00000
 8002ad4:	08005d57 	.word	0x08005d57
 8002ad8:	08005d26 	.word	0x08005d26
 8002adc:	08005d25 	.word	0x08005d25
 8002ae0:	3ff80000 	.word	0x3ff80000
 8002ae4:	08005e68 	.word	0x08005e68
 8002ae8:	08005dca 	.word	0x08005dca
 8002aec:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002af0:	6018      	str	r0, [r3, #0]
 8002af2:	9b07      	ldr	r3, [sp, #28]
 8002af4:	2b0e      	cmp	r3, #14
 8002af6:	f200 80a4 	bhi.w	8002c42 <_dtoa_r+0x442>
 8002afa:	2c00      	cmp	r4, #0
 8002afc:	f000 80a1 	beq.w	8002c42 <_dtoa_r+0x442>
 8002b00:	2f00      	cmp	r7, #0
 8002b02:	dd33      	ble.n	8002b6c <_dtoa_r+0x36c>
 8002b04:	4b86      	ldr	r3, [pc, #536]	@ (8002d20 <_dtoa_r+0x520>)
 8002b06:	f007 020f 	and.w	r2, r7, #15
 8002b0a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002b0e:	05f8      	lsls	r0, r7, #23
 8002b10:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002b14:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002b18:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002b1c:	d516      	bpl.n	8002b4c <_dtoa_r+0x34c>
 8002b1e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002b22:	4b80      	ldr	r3, [pc, #512]	@ (8002d24 <_dtoa_r+0x524>)
 8002b24:	2603      	movs	r6, #3
 8002b26:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002b2a:	f7fd fdff 	bl	800072c <__aeabi_ddiv>
 8002b2e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b32:	f004 040f 	and.w	r4, r4, #15
 8002b36:	4d7b      	ldr	r5, [pc, #492]	@ (8002d24 <_dtoa_r+0x524>)
 8002b38:	b954      	cbnz	r4, 8002b50 <_dtoa_r+0x350>
 8002b3a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002b3e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b42:	f7fd fdf3 	bl	800072c <__aeabi_ddiv>
 8002b46:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b4a:	e028      	b.n	8002b9e <_dtoa_r+0x39e>
 8002b4c:	2602      	movs	r6, #2
 8002b4e:	e7f2      	b.n	8002b36 <_dtoa_r+0x336>
 8002b50:	07e1      	lsls	r1, r4, #31
 8002b52:	d508      	bpl.n	8002b66 <_dtoa_r+0x366>
 8002b54:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b58:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002b5c:	f7fd fcbc 	bl	80004d8 <__aeabi_dmul>
 8002b60:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002b64:	3601      	adds	r6, #1
 8002b66:	1064      	asrs	r4, r4, #1
 8002b68:	3508      	adds	r5, #8
 8002b6a:	e7e5      	b.n	8002b38 <_dtoa_r+0x338>
 8002b6c:	f000 80d2 	beq.w	8002d14 <_dtoa_r+0x514>
 8002b70:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002b74:	427c      	negs	r4, r7
 8002b76:	4b6a      	ldr	r3, [pc, #424]	@ (8002d20 <_dtoa_r+0x520>)
 8002b78:	f004 020f 	and.w	r2, r4, #15
 8002b7c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002b80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b84:	f7fd fca8 	bl	80004d8 <__aeabi_dmul>
 8002b88:	2602      	movs	r6, #2
 8002b8a:	2300      	movs	r3, #0
 8002b8c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b90:	4d64      	ldr	r5, [pc, #400]	@ (8002d24 <_dtoa_r+0x524>)
 8002b92:	1124      	asrs	r4, r4, #4
 8002b94:	2c00      	cmp	r4, #0
 8002b96:	f040 80b2 	bne.w	8002cfe <_dtoa_r+0x4fe>
 8002b9a:	2b00      	cmp	r3, #0
 8002b9c:	d1d3      	bne.n	8002b46 <_dtoa_r+0x346>
 8002b9e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002ba2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	f000 80b7 	beq.w	8002d18 <_dtoa_r+0x518>
 8002baa:	2200      	movs	r2, #0
 8002bac:	4620      	mov	r0, r4
 8002bae:	4629      	mov	r1, r5
 8002bb0:	4b5d      	ldr	r3, [pc, #372]	@ (8002d28 <_dtoa_r+0x528>)
 8002bb2:	f7fd ff03 	bl	80009bc <__aeabi_dcmplt>
 8002bb6:	2800      	cmp	r0, #0
 8002bb8:	f000 80ae 	beq.w	8002d18 <_dtoa_r+0x518>
 8002bbc:	9b07      	ldr	r3, [sp, #28]
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	f000 80aa 	beq.w	8002d18 <_dtoa_r+0x518>
 8002bc4:	9b08      	ldr	r3, [sp, #32]
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	dd37      	ble.n	8002c3a <_dtoa_r+0x43a>
 8002bca:	1e7b      	subs	r3, r7, #1
 8002bcc:	4620      	mov	r0, r4
 8002bce:	9304      	str	r3, [sp, #16]
 8002bd0:	2200      	movs	r2, #0
 8002bd2:	4629      	mov	r1, r5
 8002bd4:	4b55      	ldr	r3, [pc, #340]	@ (8002d2c <_dtoa_r+0x52c>)
 8002bd6:	f7fd fc7f 	bl	80004d8 <__aeabi_dmul>
 8002bda:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002bde:	9c08      	ldr	r4, [sp, #32]
 8002be0:	3601      	adds	r6, #1
 8002be2:	4630      	mov	r0, r6
 8002be4:	f7fd fc0e 	bl	8000404 <__aeabi_i2d>
 8002be8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002bec:	f7fd fc74 	bl	80004d8 <__aeabi_dmul>
 8002bf0:	2200      	movs	r2, #0
 8002bf2:	4b4f      	ldr	r3, [pc, #316]	@ (8002d30 <_dtoa_r+0x530>)
 8002bf4:	f7fd faba 	bl	800016c <__adddf3>
 8002bf8:	4605      	mov	r5, r0
 8002bfa:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002bfe:	2c00      	cmp	r4, #0
 8002c00:	f040 809a 	bne.w	8002d38 <_dtoa_r+0x538>
 8002c04:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c08:	2200      	movs	r2, #0
 8002c0a:	4b4a      	ldr	r3, [pc, #296]	@ (8002d34 <_dtoa_r+0x534>)
 8002c0c:	f7fd faac 	bl	8000168 <__aeabi_dsub>
 8002c10:	4602      	mov	r2, r0
 8002c12:	460b      	mov	r3, r1
 8002c14:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002c18:	462a      	mov	r2, r5
 8002c1a:	4633      	mov	r3, r6
 8002c1c:	f7fd feec 	bl	80009f8 <__aeabi_dcmpgt>
 8002c20:	2800      	cmp	r0, #0
 8002c22:	f040 828e 	bne.w	8003142 <_dtoa_r+0x942>
 8002c26:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c2a:	462a      	mov	r2, r5
 8002c2c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002c30:	f7fd fec4 	bl	80009bc <__aeabi_dcmplt>
 8002c34:	2800      	cmp	r0, #0
 8002c36:	f040 8127 	bne.w	8002e88 <_dtoa_r+0x688>
 8002c3a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002c3e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002c42:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	f2c0 8163 	blt.w	8002f10 <_dtoa_r+0x710>
 8002c4a:	2f0e      	cmp	r7, #14
 8002c4c:	f300 8160 	bgt.w	8002f10 <_dtoa_r+0x710>
 8002c50:	4b33      	ldr	r3, [pc, #204]	@ (8002d20 <_dtoa_r+0x520>)
 8002c52:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002c56:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002c5a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002c5e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	da03      	bge.n	8002c6c <_dtoa_r+0x46c>
 8002c64:	9b07      	ldr	r3, [sp, #28]
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	f340 8100 	ble.w	8002e6c <_dtoa_r+0x66c>
 8002c6c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002c70:	4656      	mov	r6, sl
 8002c72:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c76:	4620      	mov	r0, r4
 8002c78:	4629      	mov	r1, r5
 8002c7a:	f7fd fd57 	bl	800072c <__aeabi_ddiv>
 8002c7e:	f7fd fedb 	bl	8000a38 <__aeabi_d2iz>
 8002c82:	4680      	mov	r8, r0
 8002c84:	f7fd fbbe 	bl	8000404 <__aeabi_i2d>
 8002c88:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c8c:	f7fd fc24 	bl	80004d8 <__aeabi_dmul>
 8002c90:	4602      	mov	r2, r0
 8002c92:	460b      	mov	r3, r1
 8002c94:	4620      	mov	r0, r4
 8002c96:	4629      	mov	r1, r5
 8002c98:	f7fd fa66 	bl	8000168 <__aeabi_dsub>
 8002c9c:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002ca0:	9d07      	ldr	r5, [sp, #28]
 8002ca2:	f806 4b01 	strb.w	r4, [r6], #1
 8002ca6:	eba6 040a 	sub.w	r4, r6, sl
 8002caa:	42a5      	cmp	r5, r4
 8002cac:	4602      	mov	r2, r0
 8002cae:	460b      	mov	r3, r1
 8002cb0:	f040 8116 	bne.w	8002ee0 <_dtoa_r+0x6e0>
 8002cb4:	f7fd fa5a 	bl	800016c <__adddf3>
 8002cb8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002cbc:	4604      	mov	r4, r0
 8002cbe:	460d      	mov	r5, r1
 8002cc0:	f7fd fe9a 	bl	80009f8 <__aeabi_dcmpgt>
 8002cc4:	2800      	cmp	r0, #0
 8002cc6:	f040 80f8 	bne.w	8002eba <_dtoa_r+0x6ba>
 8002cca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002cce:	4620      	mov	r0, r4
 8002cd0:	4629      	mov	r1, r5
 8002cd2:	f7fd fe69 	bl	80009a8 <__aeabi_dcmpeq>
 8002cd6:	b118      	cbz	r0, 8002ce0 <_dtoa_r+0x4e0>
 8002cd8:	f018 0f01 	tst.w	r8, #1
 8002cdc:	f040 80ed 	bne.w	8002eba <_dtoa_r+0x6ba>
 8002ce0:	4649      	mov	r1, r9
 8002ce2:	4658      	mov	r0, fp
 8002ce4:	f000 fc92 	bl	800360c <_Bfree>
 8002ce8:	2300      	movs	r3, #0
 8002cea:	7033      	strb	r3, [r6, #0]
 8002cec:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8002cee:	3701      	adds	r7, #1
 8002cf0:	601f      	str	r7, [r3, #0]
 8002cf2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002cf4:	2b00      	cmp	r3, #0
 8002cf6:	f000 8320 	beq.w	800333a <_dtoa_r+0xb3a>
 8002cfa:	601e      	str	r6, [r3, #0]
 8002cfc:	e31d      	b.n	800333a <_dtoa_r+0xb3a>
 8002cfe:	07e2      	lsls	r2, r4, #31
 8002d00:	d505      	bpl.n	8002d0e <_dtoa_r+0x50e>
 8002d02:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002d06:	f7fd fbe7 	bl	80004d8 <__aeabi_dmul>
 8002d0a:	2301      	movs	r3, #1
 8002d0c:	3601      	adds	r6, #1
 8002d0e:	1064      	asrs	r4, r4, #1
 8002d10:	3508      	adds	r5, #8
 8002d12:	e73f      	b.n	8002b94 <_dtoa_r+0x394>
 8002d14:	2602      	movs	r6, #2
 8002d16:	e742      	b.n	8002b9e <_dtoa_r+0x39e>
 8002d18:	9c07      	ldr	r4, [sp, #28]
 8002d1a:	9704      	str	r7, [sp, #16]
 8002d1c:	e761      	b.n	8002be2 <_dtoa_r+0x3e2>
 8002d1e:	bf00      	nop
 8002d20:	08005e68 	.word	0x08005e68
 8002d24:	08005e40 	.word	0x08005e40
 8002d28:	3ff00000 	.word	0x3ff00000
 8002d2c:	40240000 	.word	0x40240000
 8002d30:	401c0000 	.word	0x401c0000
 8002d34:	40140000 	.word	0x40140000
 8002d38:	4b70      	ldr	r3, [pc, #448]	@ (8002efc <_dtoa_r+0x6fc>)
 8002d3a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002d3c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002d40:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002d44:	4454      	add	r4, sl
 8002d46:	2900      	cmp	r1, #0
 8002d48:	d045      	beq.n	8002dd6 <_dtoa_r+0x5d6>
 8002d4a:	2000      	movs	r0, #0
 8002d4c:	496c      	ldr	r1, [pc, #432]	@ (8002f00 <_dtoa_r+0x700>)
 8002d4e:	f7fd fced 	bl	800072c <__aeabi_ddiv>
 8002d52:	4633      	mov	r3, r6
 8002d54:	462a      	mov	r2, r5
 8002d56:	f7fd fa07 	bl	8000168 <__aeabi_dsub>
 8002d5a:	4656      	mov	r6, sl
 8002d5c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002d60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d64:	f7fd fe68 	bl	8000a38 <__aeabi_d2iz>
 8002d68:	4605      	mov	r5, r0
 8002d6a:	f7fd fb4b 	bl	8000404 <__aeabi_i2d>
 8002d6e:	4602      	mov	r2, r0
 8002d70:	460b      	mov	r3, r1
 8002d72:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d76:	f7fd f9f7 	bl	8000168 <__aeabi_dsub>
 8002d7a:	4602      	mov	r2, r0
 8002d7c:	460b      	mov	r3, r1
 8002d7e:	3530      	adds	r5, #48	@ 0x30
 8002d80:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d84:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002d88:	f806 5b01 	strb.w	r5, [r6], #1
 8002d8c:	f7fd fe16 	bl	80009bc <__aeabi_dcmplt>
 8002d90:	2800      	cmp	r0, #0
 8002d92:	d163      	bne.n	8002e5c <_dtoa_r+0x65c>
 8002d94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002d98:	2000      	movs	r0, #0
 8002d9a:	495a      	ldr	r1, [pc, #360]	@ (8002f04 <_dtoa_r+0x704>)
 8002d9c:	f7fd f9e4 	bl	8000168 <__aeabi_dsub>
 8002da0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002da4:	f7fd fe0a 	bl	80009bc <__aeabi_dcmplt>
 8002da8:	2800      	cmp	r0, #0
 8002daa:	f040 8087 	bne.w	8002ebc <_dtoa_r+0x6bc>
 8002dae:	42a6      	cmp	r6, r4
 8002db0:	f43f af43 	beq.w	8002c3a <_dtoa_r+0x43a>
 8002db4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002db8:	2200      	movs	r2, #0
 8002dba:	4b53      	ldr	r3, [pc, #332]	@ (8002f08 <_dtoa_r+0x708>)
 8002dbc:	f7fd fb8c 	bl	80004d8 <__aeabi_dmul>
 8002dc0:	2200      	movs	r2, #0
 8002dc2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002dc6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002dca:	4b4f      	ldr	r3, [pc, #316]	@ (8002f08 <_dtoa_r+0x708>)
 8002dcc:	f7fd fb84 	bl	80004d8 <__aeabi_dmul>
 8002dd0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002dd4:	e7c4      	b.n	8002d60 <_dtoa_r+0x560>
 8002dd6:	4631      	mov	r1, r6
 8002dd8:	4628      	mov	r0, r5
 8002dda:	f7fd fb7d 	bl	80004d8 <__aeabi_dmul>
 8002dde:	4656      	mov	r6, sl
 8002de0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002de4:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002de6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002dea:	f7fd fe25 	bl	8000a38 <__aeabi_d2iz>
 8002dee:	4605      	mov	r5, r0
 8002df0:	f7fd fb08 	bl	8000404 <__aeabi_i2d>
 8002df4:	4602      	mov	r2, r0
 8002df6:	460b      	mov	r3, r1
 8002df8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002dfc:	f7fd f9b4 	bl	8000168 <__aeabi_dsub>
 8002e00:	4602      	mov	r2, r0
 8002e02:	460b      	mov	r3, r1
 8002e04:	3530      	adds	r5, #48	@ 0x30
 8002e06:	f806 5b01 	strb.w	r5, [r6], #1
 8002e0a:	42a6      	cmp	r6, r4
 8002e0c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002e10:	f04f 0200 	mov.w	r2, #0
 8002e14:	d124      	bne.n	8002e60 <_dtoa_r+0x660>
 8002e16:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002e1a:	4b39      	ldr	r3, [pc, #228]	@ (8002f00 <_dtoa_r+0x700>)
 8002e1c:	f7fd f9a6 	bl	800016c <__adddf3>
 8002e20:	4602      	mov	r2, r0
 8002e22:	460b      	mov	r3, r1
 8002e24:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002e28:	f7fd fde6 	bl	80009f8 <__aeabi_dcmpgt>
 8002e2c:	2800      	cmp	r0, #0
 8002e2e:	d145      	bne.n	8002ebc <_dtoa_r+0x6bc>
 8002e30:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002e34:	2000      	movs	r0, #0
 8002e36:	4932      	ldr	r1, [pc, #200]	@ (8002f00 <_dtoa_r+0x700>)
 8002e38:	f7fd f996 	bl	8000168 <__aeabi_dsub>
 8002e3c:	4602      	mov	r2, r0
 8002e3e:	460b      	mov	r3, r1
 8002e40:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002e44:	f7fd fdba 	bl	80009bc <__aeabi_dcmplt>
 8002e48:	2800      	cmp	r0, #0
 8002e4a:	f43f aef6 	beq.w	8002c3a <_dtoa_r+0x43a>
 8002e4e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002e50:	1e73      	subs	r3, r6, #1
 8002e52:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002e54:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002e58:	2b30      	cmp	r3, #48	@ 0x30
 8002e5a:	d0f8      	beq.n	8002e4e <_dtoa_r+0x64e>
 8002e5c:	9f04      	ldr	r7, [sp, #16]
 8002e5e:	e73f      	b.n	8002ce0 <_dtoa_r+0x4e0>
 8002e60:	4b29      	ldr	r3, [pc, #164]	@ (8002f08 <_dtoa_r+0x708>)
 8002e62:	f7fd fb39 	bl	80004d8 <__aeabi_dmul>
 8002e66:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e6a:	e7bc      	b.n	8002de6 <_dtoa_r+0x5e6>
 8002e6c:	d10c      	bne.n	8002e88 <_dtoa_r+0x688>
 8002e6e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e72:	2200      	movs	r2, #0
 8002e74:	4b25      	ldr	r3, [pc, #148]	@ (8002f0c <_dtoa_r+0x70c>)
 8002e76:	f7fd fb2f 	bl	80004d8 <__aeabi_dmul>
 8002e7a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002e7e:	f7fd fdb1 	bl	80009e4 <__aeabi_dcmpge>
 8002e82:	2800      	cmp	r0, #0
 8002e84:	f000 815b 	beq.w	800313e <_dtoa_r+0x93e>
 8002e88:	2400      	movs	r4, #0
 8002e8a:	4625      	mov	r5, r4
 8002e8c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002e8e:	4656      	mov	r6, sl
 8002e90:	43db      	mvns	r3, r3
 8002e92:	9304      	str	r3, [sp, #16]
 8002e94:	2700      	movs	r7, #0
 8002e96:	4621      	mov	r1, r4
 8002e98:	4658      	mov	r0, fp
 8002e9a:	f000 fbb7 	bl	800360c <_Bfree>
 8002e9e:	2d00      	cmp	r5, #0
 8002ea0:	d0dc      	beq.n	8002e5c <_dtoa_r+0x65c>
 8002ea2:	b12f      	cbz	r7, 8002eb0 <_dtoa_r+0x6b0>
 8002ea4:	42af      	cmp	r7, r5
 8002ea6:	d003      	beq.n	8002eb0 <_dtoa_r+0x6b0>
 8002ea8:	4639      	mov	r1, r7
 8002eaa:	4658      	mov	r0, fp
 8002eac:	f000 fbae 	bl	800360c <_Bfree>
 8002eb0:	4629      	mov	r1, r5
 8002eb2:	4658      	mov	r0, fp
 8002eb4:	f000 fbaa 	bl	800360c <_Bfree>
 8002eb8:	e7d0      	b.n	8002e5c <_dtoa_r+0x65c>
 8002eba:	9704      	str	r7, [sp, #16]
 8002ebc:	4633      	mov	r3, r6
 8002ebe:	461e      	mov	r6, r3
 8002ec0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002ec4:	2a39      	cmp	r2, #57	@ 0x39
 8002ec6:	d107      	bne.n	8002ed8 <_dtoa_r+0x6d8>
 8002ec8:	459a      	cmp	sl, r3
 8002eca:	d1f8      	bne.n	8002ebe <_dtoa_r+0x6be>
 8002ecc:	9a04      	ldr	r2, [sp, #16]
 8002ece:	3201      	adds	r2, #1
 8002ed0:	9204      	str	r2, [sp, #16]
 8002ed2:	2230      	movs	r2, #48	@ 0x30
 8002ed4:	f88a 2000 	strb.w	r2, [sl]
 8002ed8:	781a      	ldrb	r2, [r3, #0]
 8002eda:	3201      	adds	r2, #1
 8002edc:	701a      	strb	r2, [r3, #0]
 8002ede:	e7bd      	b.n	8002e5c <_dtoa_r+0x65c>
 8002ee0:	2200      	movs	r2, #0
 8002ee2:	4b09      	ldr	r3, [pc, #36]	@ (8002f08 <_dtoa_r+0x708>)
 8002ee4:	f7fd faf8 	bl	80004d8 <__aeabi_dmul>
 8002ee8:	2200      	movs	r2, #0
 8002eea:	2300      	movs	r3, #0
 8002eec:	4604      	mov	r4, r0
 8002eee:	460d      	mov	r5, r1
 8002ef0:	f7fd fd5a 	bl	80009a8 <__aeabi_dcmpeq>
 8002ef4:	2800      	cmp	r0, #0
 8002ef6:	f43f aebc 	beq.w	8002c72 <_dtoa_r+0x472>
 8002efa:	e6f1      	b.n	8002ce0 <_dtoa_r+0x4e0>
 8002efc:	08005e68 	.word	0x08005e68
 8002f00:	3fe00000 	.word	0x3fe00000
 8002f04:	3ff00000 	.word	0x3ff00000
 8002f08:	40240000 	.word	0x40240000
 8002f0c:	40140000 	.word	0x40140000
 8002f10:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002f12:	2a00      	cmp	r2, #0
 8002f14:	f000 80db 	beq.w	80030ce <_dtoa_r+0x8ce>
 8002f18:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8002f1a:	2a01      	cmp	r2, #1
 8002f1c:	f300 80bf 	bgt.w	800309e <_dtoa_r+0x89e>
 8002f20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002f22:	2a00      	cmp	r2, #0
 8002f24:	f000 80b7 	beq.w	8003096 <_dtoa_r+0x896>
 8002f28:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002f2c:	4646      	mov	r6, r8
 8002f2e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002f30:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002f32:	2101      	movs	r1, #1
 8002f34:	441a      	add	r2, r3
 8002f36:	4658      	mov	r0, fp
 8002f38:	4498      	add	r8, r3
 8002f3a:	9209      	str	r2, [sp, #36]	@ 0x24
 8002f3c:	f000 fc64 	bl	8003808 <__i2b>
 8002f40:	4605      	mov	r5, r0
 8002f42:	b15e      	cbz	r6, 8002f5c <_dtoa_r+0x75c>
 8002f44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f46:	2b00      	cmp	r3, #0
 8002f48:	dd08      	ble.n	8002f5c <_dtoa_r+0x75c>
 8002f4a:	42b3      	cmp	r3, r6
 8002f4c:	bfa8      	it	ge
 8002f4e:	4633      	movge	r3, r6
 8002f50:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002f52:	eba8 0803 	sub.w	r8, r8, r3
 8002f56:	1af6      	subs	r6, r6, r3
 8002f58:	1ad3      	subs	r3, r2, r3
 8002f5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f5e:	b1f3      	cbz	r3, 8002f9e <_dtoa_r+0x79e>
 8002f60:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	f000 80b7 	beq.w	80030d6 <_dtoa_r+0x8d6>
 8002f68:	b18c      	cbz	r4, 8002f8e <_dtoa_r+0x78e>
 8002f6a:	4629      	mov	r1, r5
 8002f6c:	4622      	mov	r2, r4
 8002f6e:	4658      	mov	r0, fp
 8002f70:	f000 fd08 	bl	8003984 <__pow5mult>
 8002f74:	464a      	mov	r2, r9
 8002f76:	4601      	mov	r1, r0
 8002f78:	4605      	mov	r5, r0
 8002f7a:	4658      	mov	r0, fp
 8002f7c:	f000 fc5a 	bl	8003834 <__multiply>
 8002f80:	4649      	mov	r1, r9
 8002f82:	9004      	str	r0, [sp, #16]
 8002f84:	4658      	mov	r0, fp
 8002f86:	f000 fb41 	bl	800360c <_Bfree>
 8002f8a:	9b04      	ldr	r3, [sp, #16]
 8002f8c:	4699      	mov	r9, r3
 8002f8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f90:	1b1a      	subs	r2, r3, r4
 8002f92:	d004      	beq.n	8002f9e <_dtoa_r+0x79e>
 8002f94:	4649      	mov	r1, r9
 8002f96:	4658      	mov	r0, fp
 8002f98:	f000 fcf4 	bl	8003984 <__pow5mult>
 8002f9c:	4681      	mov	r9, r0
 8002f9e:	2101      	movs	r1, #1
 8002fa0:	4658      	mov	r0, fp
 8002fa2:	f000 fc31 	bl	8003808 <__i2b>
 8002fa6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002fa8:	4604      	mov	r4, r0
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	f000 81c9 	beq.w	8003342 <_dtoa_r+0xb42>
 8002fb0:	461a      	mov	r2, r3
 8002fb2:	4601      	mov	r1, r0
 8002fb4:	4658      	mov	r0, fp
 8002fb6:	f000 fce5 	bl	8003984 <__pow5mult>
 8002fba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002fbc:	4604      	mov	r4, r0
 8002fbe:	2b01      	cmp	r3, #1
 8002fc0:	f300 808f 	bgt.w	80030e2 <_dtoa_r+0x8e2>
 8002fc4:	9b02      	ldr	r3, [sp, #8]
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	f040 8087 	bne.w	80030da <_dtoa_r+0x8da>
 8002fcc:	9b03      	ldr	r3, [sp, #12]
 8002fce:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	f040 8083 	bne.w	80030de <_dtoa_r+0x8de>
 8002fd8:	9b03      	ldr	r3, [sp, #12]
 8002fda:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002fde:	0d1b      	lsrs	r3, r3, #20
 8002fe0:	051b      	lsls	r3, r3, #20
 8002fe2:	b12b      	cbz	r3, 8002ff0 <_dtoa_r+0x7f0>
 8002fe4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fe6:	f108 0801 	add.w	r8, r8, #1
 8002fea:	3301      	adds	r3, #1
 8002fec:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fee:	2301      	movs	r3, #1
 8002ff0:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ff2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	f000 81aa 	beq.w	800334e <_dtoa_r+0xb4e>
 8002ffa:	6923      	ldr	r3, [r4, #16]
 8002ffc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003000:	6918      	ldr	r0, [r3, #16]
 8003002:	f000 fbb5 	bl	8003770 <__hi0bits>
 8003006:	f1c0 0020 	rsb	r0, r0, #32
 800300a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800300c:	4418      	add	r0, r3
 800300e:	f010 001f 	ands.w	r0, r0, #31
 8003012:	d071      	beq.n	80030f8 <_dtoa_r+0x8f8>
 8003014:	f1c0 0320 	rsb	r3, r0, #32
 8003018:	2b04      	cmp	r3, #4
 800301a:	dd65      	ble.n	80030e8 <_dtoa_r+0x8e8>
 800301c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800301e:	f1c0 001c 	rsb	r0, r0, #28
 8003022:	4403      	add	r3, r0
 8003024:	4480      	add	r8, r0
 8003026:	4406      	add	r6, r0
 8003028:	9309      	str	r3, [sp, #36]	@ 0x24
 800302a:	f1b8 0f00 	cmp.w	r8, #0
 800302e:	dd05      	ble.n	800303c <_dtoa_r+0x83c>
 8003030:	4649      	mov	r1, r9
 8003032:	4642      	mov	r2, r8
 8003034:	4658      	mov	r0, fp
 8003036:	f000 fcff 	bl	8003a38 <__lshift>
 800303a:	4681      	mov	r9, r0
 800303c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800303e:	2b00      	cmp	r3, #0
 8003040:	dd05      	ble.n	800304e <_dtoa_r+0x84e>
 8003042:	4621      	mov	r1, r4
 8003044:	461a      	mov	r2, r3
 8003046:	4658      	mov	r0, fp
 8003048:	f000 fcf6 	bl	8003a38 <__lshift>
 800304c:	4604      	mov	r4, r0
 800304e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003050:	2b00      	cmp	r3, #0
 8003052:	d053      	beq.n	80030fc <_dtoa_r+0x8fc>
 8003054:	4621      	mov	r1, r4
 8003056:	4648      	mov	r0, r9
 8003058:	f000 fd5a 	bl	8003b10 <__mcmp>
 800305c:	2800      	cmp	r0, #0
 800305e:	da4d      	bge.n	80030fc <_dtoa_r+0x8fc>
 8003060:	1e7b      	subs	r3, r7, #1
 8003062:	4649      	mov	r1, r9
 8003064:	9304      	str	r3, [sp, #16]
 8003066:	220a      	movs	r2, #10
 8003068:	2300      	movs	r3, #0
 800306a:	4658      	mov	r0, fp
 800306c:	f000 faf0 	bl	8003650 <__multadd>
 8003070:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003072:	4681      	mov	r9, r0
 8003074:	2b00      	cmp	r3, #0
 8003076:	f000 816c 	beq.w	8003352 <_dtoa_r+0xb52>
 800307a:	2300      	movs	r3, #0
 800307c:	4629      	mov	r1, r5
 800307e:	220a      	movs	r2, #10
 8003080:	4658      	mov	r0, fp
 8003082:	f000 fae5 	bl	8003650 <__multadd>
 8003086:	9b08      	ldr	r3, [sp, #32]
 8003088:	4605      	mov	r5, r0
 800308a:	2b00      	cmp	r3, #0
 800308c:	dc61      	bgt.n	8003152 <_dtoa_r+0x952>
 800308e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003090:	2b02      	cmp	r3, #2
 8003092:	dc3b      	bgt.n	800310c <_dtoa_r+0x90c>
 8003094:	e05d      	b.n	8003152 <_dtoa_r+0x952>
 8003096:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003098:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800309c:	e746      	b.n	8002f2c <_dtoa_r+0x72c>
 800309e:	9b07      	ldr	r3, [sp, #28]
 80030a0:	1e5c      	subs	r4, r3, #1
 80030a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80030a4:	42a3      	cmp	r3, r4
 80030a6:	bfbf      	itttt	lt
 80030a8:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 80030aa:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 80030ac:	1ae3      	sublt	r3, r4, r3
 80030ae:	18d2      	addlt	r2, r2, r3
 80030b0:	bfa8      	it	ge
 80030b2:	1b1c      	subge	r4, r3, r4
 80030b4:	9b07      	ldr	r3, [sp, #28]
 80030b6:	bfbe      	ittt	lt
 80030b8:	940a      	strlt	r4, [sp, #40]	@ 0x28
 80030ba:	920e      	strlt	r2, [sp, #56]	@ 0x38
 80030bc:	2400      	movlt	r4, #0
 80030be:	2b00      	cmp	r3, #0
 80030c0:	bfb5      	itete	lt
 80030c2:	eba8 0603 	sublt.w	r6, r8, r3
 80030c6:	4646      	movge	r6, r8
 80030c8:	2300      	movlt	r3, #0
 80030ca:	9b07      	ldrge	r3, [sp, #28]
 80030cc:	e730      	b.n	8002f30 <_dtoa_r+0x730>
 80030ce:	4646      	mov	r6, r8
 80030d0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80030d2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80030d4:	e735      	b.n	8002f42 <_dtoa_r+0x742>
 80030d6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80030d8:	e75c      	b.n	8002f94 <_dtoa_r+0x794>
 80030da:	2300      	movs	r3, #0
 80030dc:	e788      	b.n	8002ff0 <_dtoa_r+0x7f0>
 80030de:	9b02      	ldr	r3, [sp, #8]
 80030e0:	e786      	b.n	8002ff0 <_dtoa_r+0x7f0>
 80030e2:	2300      	movs	r3, #0
 80030e4:	930a      	str	r3, [sp, #40]	@ 0x28
 80030e6:	e788      	b.n	8002ffa <_dtoa_r+0x7fa>
 80030e8:	d09f      	beq.n	800302a <_dtoa_r+0x82a>
 80030ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80030ec:	331c      	adds	r3, #28
 80030ee:	441a      	add	r2, r3
 80030f0:	4498      	add	r8, r3
 80030f2:	441e      	add	r6, r3
 80030f4:	9209      	str	r2, [sp, #36]	@ 0x24
 80030f6:	e798      	b.n	800302a <_dtoa_r+0x82a>
 80030f8:	4603      	mov	r3, r0
 80030fa:	e7f6      	b.n	80030ea <_dtoa_r+0x8ea>
 80030fc:	9b07      	ldr	r3, [sp, #28]
 80030fe:	9704      	str	r7, [sp, #16]
 8003100:	2b00      	cmp	r3, #0
 8003102:	dc20      	bgt.n	8003146 <_dtoa_r+0x946>
 8003104:	9308      	str	r3, [sp, #32]
 8003106:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003108:	2b02      	cmp	r3, #2
 800310a:	dd1e      	ble.n	800314a <_dtoa_r+0x94a>
 800310c:	9b08      	ldr	r3, [sp, #32]
 800310e:	2b00      	cmp	r3, #0
 8003110:	f47f aebc 	bne.w	8002e8c <_dtoa_r+0x68c>
 8003114:	4621      	mov	r1, r4
 8003116:	2205      	movs	r2, #5
 8003118:	4658      	mov	r0, fp
 800311a:	f000 fa99 	bl	8003650 <__multadd>
 800311e:	4601      	mov	r1, r0
 8003120:	4604      	mov	r4, r0
 8003122:	4648      	mov	r0, r9
 8003124:	f000 fcf4 	bl	8003b10 <__mcmp>
 8003128:	2800      	cmp	r0, #0
 800312a:	f77f aeaf 	ble.w	8002e8c <_dtoa_r+0x68c>
 800312e:	2331      	movs	r3, #49	@ 0x31
 8003130:	4656      	mov	r6, sl
 8003132:	f806 3b01 	strb.w	r3, [r6], #1
 8003136:	9b04      	ldr	r3, [sp, #16]
 8003138:	3301      	adds	r3, #1
 800313a:	9304      	str	r3, [sp, #16]
 800313c:	e6aa      	b.n	8002e94 <_dtoa_r+0x694>
 800313e:	9c07      	ldr	r4, [sp, #28]
 8003140:	9704      	str	r7, [sp, #16]
 8003142:	4625      	mov	r5, r4
 8003144:	e7f3      	b.n	800312e <_dtoa_r+0x92e>
 8003146:	9b07      	ldr	r3, [sp, #28]
 8003148:	9308      	str	r3, [sp, #32]
 800314a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800314c:	2b00      	cmp	r3, #0
 800314e:	f000 8104 	beq.w	800335a <_dtoa_r+0xb5a>
 8003152:	2e00      	cmp	r6, #0
 8003154:	dd05      	ble.n	8003162 <_dtoa_r+0x962>
 8003156:	4629      	mov	r1, r5
 8003158:	4632      	mov	r2, r6
 800315a:	4658      	mov	r0, fp
 800315c:	f000 fc6c 	bl	8003a38 <__lshift>
 8003160:	4605      	mov	r5, r0
 8003162:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003164:	2b00      	cmp	r3, #0
 8003166:	d05a      	beq.n	800321e <_dtoa_r+0xa1e>
 8003168:	4658      	mov	r0, fp
 800316a:	6869      	ldr	r1, [r5, #4]
 800316c:	f000 fa0e 	bl	800358c <_Balloc>
 8003170:	4606      	mov	r6, r0
 8003172:	b928      	cbnz	r0, 8003180 <_dtoa_r+0x980>
 8003174:	4602      	mov	r2, r0
 8003176:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800317a:	4b83      	ldr	r3, [pc, #524]	@ (8003388 <_dtoa_r+0xb88>)
 800317c:	f7ff bb54 	b.w	8002828 <_dtoa_r+0x28>
 8003180:	692a      	ldr	r2, [r5, #16]
 8003182:	f105 010c 	add.w	r1, r5, #12
 8003186:	3202      	adds	r2, #2
 8003188:	0092      	lsls	r2, r2, #2
 800318a:	300c      	adds	r0, #12
 800318c:	f001 ffe8 	bl	8005160 <memcpy>
 8003190:	2201      	movs	r2, #1
 8003192:	4631      	mov	r1, r6
 8003194:	4658      	mov	r0, fp
 8003196:	f000 fc4f 	bl	8003a38 <__lshift>
 800319a:	462f      	mov	r7, r5
 800319c:	4605      	mov	r5, r0
 800319e:	f10a 0301 	add.w	r3, sl, #1
 80031a2:	9307      	str	r3, [sp, #28]
 80031a4:	9b08      	ldr	r3, [sp, #32]
 80031a6:	4453      	add	r3, sl
 80031a8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80031aa:	9b02      	ldr	r3, [sp, #8]
 80031ac:	f003 0301 	and.w	r3, r3, #1
 80031b0:	930a      	str	r3, [sp, #40]	@ 0x28
 80031b2:	9b07      	ldr	r3, [sp, #28]
 80031b4:	4621      	mov	r1, r4
 80031b6:	3b01      	subs	r3, #1
 80031b8:	4648      	mov	r0, r9
 80031ba:	9302      	str	r3, [sp, #8]
 80031bc:	f7ff fa96 	bl	80026ec <quorem>
 80031c0:	4639      	mov	r1, r7
 80031c2:	9008      	str	r0, [sp, #32]
 80031c4:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80031c8:	4648      	mov	r0, r9
 80031ca:	f000 fca1 	bl	8003b10 <__mcmp>
 80031ce:	462a      	mov	r2, r5
 80031d0:	9009      	str	r0, [sp, #36]	@ 0x24
 80031d2:	4621      	mov	r1, r4
 80031d4:	4658      	mov	r0, fp
 80031d6:	f000 fcb7 	bl	8003b48 <__mdiff>
 80031da:	68c2      	ldr	r2, [r0, #12]
 80031dc:	4606      	mov	r6, r0
 80031de:	bb02      	cbnz	r2, 8003222 <_dtoa_r+0xa22>
 80031e0:	4601      	mov	r1, r0
 80031e2:	4648      	mov	r0, r9
 80031e4:	f000 fc94 	bl	8003b10 <__mcmp>
 80031e8:	4602      	mov	r2, r0
 80031ea:	4631      	mov	r1, r6
 80031ec:	4658      	mov	r0, fp
 80031ee:	920c      	str	r2, [sp, #48]	@ 0x30
 80031f0:	f000 fa0c 	bl	800360c <_Bfree>
 80031f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80031f6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80031f8:	9e07      	ldr	r6, [sp, #28]
 80031fa:	ea43 0102 	orr.w	r1, r3, r2
 80031fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003200:	4319      	orrs	r1, r3
 8003202:	d110      	bne.n	8003226 <_dtoa_r+0xa26>
 8003204:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003208:	d029      	beq.n	800325e <_dtoa_r+0xa5e>
 800320a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800320c:	2b00      	cmp	r3, #0
 800320e:	dd02      	ble.n	8003216 <_dtoa_r+0xa16>
 8003210:	9b08      	ldr	r3, [sp, #32]
 8003212:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8003216:	9b02      	ldr	r3, [sp, #8]
 8003218:	f883 8000 	strb.w	r8, [r3]
 800321c:	e63b      	b.n	8002e96 <_dtoa_r+0x696>
 800321e:	4628      	mov	r0, r5
 8003220:	e7bb      	b.n	800319a <_dtoa_r+0x99a>
 8003222:	2201      	movs	r2, #1
 8003224:	e7e1      	b.n	80031ea <_dtoa_r+0x9ea>
 8003226:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003228:	2b00      	cmp	r3, #0
 800322a:	db04      	blt.n	8003236 <_dtoa_r+0xa36>
 800322c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 800322e:	430b      	orrs	r3, r1
 8003230:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003232:	430b      	orrs	r3, r1
 8003234:	d120      	bne.n	8003278 <_dtoa_r+0xa78>
 8003236:	2a00      	cmp	r2, #0
 8003238:	dded      	ble.n	8003216 <_dtoa_r+0xa16>
 800323a:	4649      	mov	r1, r9
 800323c:	2201      	movs	r2, #1
 800323e:	4658      	mov	r0, fp
 8003240:	f000 fbfa 	bl	8003a38 <__lshift>
 8003244:	4621      	mov	r1, r4
 8003246:	4681      	mov	r9, r0
 8003248:	f000 fc62 	bl	8003b10 <__mcmp>
 800324c:	2800      	cmp	r0, #0
 800324e:	dc03      	bgt.n	8003258 <_dtoa_r+0xa58>
 8003250:	d1e1      	bne.n	8003216 <_dtoa_r+0xa16>
 8003252:	f018 0f01 	tst.w	r8, #1
 8003256:	d0de      	beq.n	8003216 <_dtoa_r+0xa16>
 8003258:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800325c:	d1d8      	bne.n	8003210 <_dtoa_r+0xa10>
 800325e:	2339      	movs	r3, #57	@ 0x39
 8003260:	9a02      	ldr	r2, [sp, #8]
 8003262:	7013      	strb	r3, [r2, #0]
 8003264:	4633      	mov	r3, r6
 8003266:	461e      	mov	r6, r3
 8003268:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800326c:	3b01      	subs	r3, #1
 800326e:	2a39      	cmp	r2, #57	@ 0x39
 8003270:	d052      	beq.n	8003318 <_dtoa_r+0xb18>
 8003272:	3201      	adds	r2, #1
 8003274:	701a      	strb	r2, [r3, #0]
 8003276:	e60e      	b.n	8002e96 <_dtoa_r+0x696>
 8003278:	2a00      	cmp	r2, #0
 800327a:	dd07      	ble.n	800328c <_dtoa_r+0xa8c>
 800327c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003280:	d0ed      	beq.n	800325e <_dtoa_r+0xa5e>
 8003282:	9a02      	ldr	r2, [sp, #8]
 8003284:	f108 0301 	add.w	r3, r8, #1
 8003288:	7013      	strb	r3, [r2, #0]
 800328a:	e604      	b.n	8002e96 <_dtoa_r+0x696>
 800328c:	9b07      	ldr	r3, [sp, #28]
 800328e:	9a07      	ldr	r2, [sp, #28]
 8003290:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003294:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003296:	4293      	cmp	r3, r2
 8003298:	d028      	beq.n	80032ec <_dtoa_r+0xaec>
 800329a:	4649      	mov	r1, r9
 800329c:	2300      	movs	r3, #0
 800329e:	220a      	movs	r2, #10
 80032a0:	4658      	mov	r0, fp
 80032a2:	f000 f9d5 	bl	8003650 <__multadd>
 80032a6:	42af      	cmp	r7, r5
 80032a8:	4681      	mov	r9, r0
 80032aa:	f04f 0300 	mov.w	r3, #0
 80032ae:	f04f 020a 	mov.w	r2, #10
 80032b2:	4639      	mov	r1, r7
 80032b4:	4658      	mov	r0, fp
 80032b6:	d107      	bne.n	80032c8 <_dtoa_r+0xac8>
 80032b8:	f000 f9ca 	bl	8003650 <__multadd>
 80032bc:	4607      	mov	r7, r0
 80032be:	4605      	mov	r5, r0
 80032c0:	9b07      	ldr	r3, [sp, #28]
 80032c2:	3301      	adds	r3, #1
 80032c4:	9307      	str	r3, [sp, #28]
 80032c6:	e774      	b.n	80031b2 <_dtoa_r+0x9b2>
 80032c8:	f000 f9c2 	bl	8003650 <__multadd>
 80032cc:	4629      	mov	r1, r5
 80032ce:	4607      	mov	r7, r0
 80032d0:	2300      	movs	r3, #0
 80032d2:	220a      	movs	r2, #10
 80032d4:	4658      	mov	r0, fp
 80032d6:	f000 f9bb 	bl	8003650 <__multadd>
 80032da:	4605      	mov	r5, r0
 80032dc:	e7f0      	b.n	80032c0 <_dtoa_r+0xac0>
 80032de:	9b08      	ldr	r3, [sp, #32]
 80032e0:	2700      	movs	r7, #0
 80032e2:	2b00      	cmp	r3, #0
 80032e4:	bfcc      	ite	gt
 80032e6:	461e      	movgt	r6, r3
 80032e8:	2601      	movle	r6, #1
 80032ea:	4456      	add	r6, sl
 80032ec:	4649      	mov	r1, r9
 80032ee:	2201      	movs	r2, #1
 80032f0:	4658      	mov	r0, fp
 80032f2:	f000 fba1 	bl	8003a38 <__lshift>
 80032f6:	4621      	mov	r1, r4
 80032f8:	4681      	mov	r9, r0
 80032fa:	f000 fc09 	bl	8003b10 <__mcmp>
 80032fe:	2800      	cmp	r0, #0
 8003300:	dcb0      	bgt.n	8003264 <_dtoa_r+0xa64>
 8003302:	d102      	bne.n	800330a <_dtoa_r+0xb0a>
 8003304:	f018 0f01 	tst.w	r8, #1
 8003308:	d1ac      	bne.n	8003264 <_dtoa_r+0xa64>
 800330a:	4633      	mov	r3, r6
 800330c:	461e      	mov	r6, r3
 800330e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003312:	2a30      	cmp	r2, #48	@ 0x30
 8003314:	d0fa      	beq.n	800330c <_dtoa_r+0xb0c>
 8003316:	e5be      	b.n	8002e96 <_dtoa_r+0x696>
 8003318:	459a      	cmp	sl, r3
 800331a:	d1a4      	bne.n	8003266 <_dtoa_r+0xa66>
 800331c:	9b04      	ldr	r3, [sp, #16]
 800331e:	3301      	adds	r3, #1
 8003320:	9304      	str	r3, [sp, #16]
 8003322:	2331      	movs	r3, #49	@ 0x31
 8003324:	f88a 3000 	strb.w	r3, [sl]
 8003328:	e5b5      	b.n	8002e96 <_dtoa_r+0x696>
 800332a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800332c:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800338c <_dtoa_r+0xb8c>
 8003330:	b11b      	cbz	r3, 800333a <_dtoa_r+0xb3a>
 8003332:	f10a 0308 	add.w	r3, sl, #8
 8003336:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003338:	6013      	str	r3, [r2, #0]
 800333a:	4650      	mov	r0, sl
 800333c:	b017      	add	sp, #92	@ 0x5c
 800333e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003342:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003344:	2b01      	cmp	r3, #1
 8003346:	f77f ae3d 	ble.w	8002fc4 <_dtoa_r+0x7c4>
 800334a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800334c:	930a      	str	r3, [sp, #40]	@ 0x28
 800334e:	2001      	movs	r0, #1
 8003350:	e65b      	b.n	800300a <_dtoa_r+0x80a>
 8003352:	9b08      	ldr	r3, [sp, #32]
 8003354:	2b00      	cmp	r3, #0
 8003356:	f77f aed6 	ble.w	8003106 <_dtoa_r+0x906>
 800335a:	4656      	mov	r6, sl
 800335c:	4621      	mov	r1, r4
 800335e:	4648      	mov	r0, r9
 8003360:	f7ff f9c4 	bl	80026ec <quorem>
 8003364:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003368:	9b08      	ldr	r3, [sp, #32]
 800336a:	f806 8b01 	strb.w	r8, [r6], #1
 800336e:	eba6 020a 	sub.w	r2, r6, sl
 8003372:	4293      	cmp	r3, r2
 8003374:	ddb3      	ble.n	80032de <_dtoa_r+0xade>
 8003376:	4649      	mov	r1, r9
 8003378:	2300      	movs	r3, #0
 800337a:	220a      	movs	r2, #10
 800337c:	4658      	mov	r0, fp
 800337e:	f000 f967 	bl	8003650 <__multadd>
 8003382:	4681      	mov	r9, r0
 8003384:	e7ea      	b.n	800335c <_dtoa_r+0xb5c>
 8003386:	bf00      	nop
 8003388:	08005dca 	.word	0x08005dca
 800338c:	08005d4e 	.word	0x08005d4e

08003390 <_free_r>:
 8003390:	b538      	push	{r3, r4, r5, lr}
 8003392:	4605      	mov	r5, r0
 8003394:	2900      	cmp	r1, #0
 8003396:	d040      	beq.n	800341a <_free_r+0x8a>
 8003398:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800339c:	1f0c      	subs	r4, r1, #4
 800339e:	2b00      	cmp	r3, #0
 80033a0:	bfb8      	it	lt
 80033a2:	18e4      	addlt	r4, r4, r3
 80033a4:	f000 f8e6 	bl	8003574 <__malloc_lock>
 80033a8:	4a1c      	ldr	r2, [pc, #112]	@ (800341c <_free_r+0x8c>)
 80033aa:	6813      	ldr	r3, [r2, #0]
 80033ac:	b933      	cbnz	r3, 80033bc <_free_r+0x2c>
 80033ae:	6063      	str	r3, [r4, #4]
 80033b0:	6014      	str	r4, [r2, #0]
 80033b2:	4628      	mov	r0, r5
 80033b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80033b8:	f000 b8e2 	b.w	8003580 <__malloc_unlock>
 80033bc:	42a3      	cmp	r3, r4
 80033be:	d908      	bls.n	80033d2 <_free_r+0x42>
 80033c0:	6820      	ldr	r0, [r4, #0]
 80033c2:	1821      	adds	r1, r4, r0
 80033c4:	428b      	cmp	r3, r1
 80033c6:	bf01      	itttt	eq
 80033c8:	6819      	ldreq	r1, [r3, #0]
 80033ca:	685b      	ldreq	r3, [r3, #4]
 80033cc:	1809      	addeq	r1, r1, r0
 80033ce:	6021      	streq	r1, [r4, #0]
 80033d0:	e7ed      	b.n	80033ae <_free_r+0x1e>
 80033d2:	461a      	mov	r2, r3
 80033d4:	685b      	ldr	r3, [r3, #4]
 80033d6:	b10b      	cbz	r3, 80033dc <_free_r+0x4c>
 80033d8:	42a3      	cmp	r3, r4
 80033da:	d9fa      	bls.n	80033d2 <_free_r+0x42>
 80033dc:	6811      	ldr	r1, [r2, #0]
 80033de:	1850      	adds	r0, r2, r1
 80033e0:	42a0      	cmp	r0, r4
 80033e2:	d10b      	bne.n	80033fc <_free_r+0x6c>
 80033e4:	6820      	ldr	r0, [r4, #0]
 80033e6:	4401      	add	r1, r0
 80033e8:	1850      	adds	r0, r2, r1
 80033ea:	4283      	cmp	r3, r0
 80033ec:	6011      	str	r1, [r2, #0]
 80033ee:	d1e0      	bne.n	80033b2 <_free_r+0x22>
 80033f0:	6818      	ldr	r0, [r3, #0]
 80033f2:	685b      	ldr	r3, [r3, #4]
 80033f4:	4408      	add	r0, r1
 80033f6:	6010      	str	r0, [r2, #0]
 80033f8:	6053      	str	r3, [r2, #4]
 80033fa:	e7da      	b.n	80033b2 <_free_r+0x22>
 80033fc:	d902      	bls.n	8003404 <_free_r+0x74>
 80033fe:	230c      	movs	r3, #12
 8003400:	602b      	str	r3, [r5, #0]
 8003402:	e7d6      	b.n	80033b2 <_free_r+0x22>
 8003404:	6820      	ldr	r0, [r4, #0]
 8003406:	1821      	adds	r1, r4, r0
 8003408:	428b      	cmp	r3, r1
 800340a:	bf01      	itttt	eq
 800340c:	6819      	ldreq	r1, [r3, #0]
 800340e:	685b      	ldreq	r3, [r3, #4]
 8003410:	1809      	addeq	r1, r1, r0
 8003412:	6021      	streq	r1, [r4, #0]
 8003414:	6063      	str	r3, [r4, #4]
 8003416:	6054      	str	r4, [r2, #4]
 8003418:	e7cb      	b.n	80033b2 <_free_r+0x22>
 800341a:	bd38      	pop	{r3, r4, r5, pc}
 800341c:	2000037c 	.word	0x2000037c

08003420 <malloc>:
 8003420:	4b02      	ldr	r3, [pc, #8]	@ (800342c <malloc+0xc>)
 8003422:	4601      	mov	r1, r0
 8003424:	6818      	ldr	r0, [r3, #0]
 8003426:	f000 b825 	b.w	8003474 <_malloc_r>
 800342a:	bf00      	nop
 800342c:	20000010 	.word	0x20000010

08003430 <sbrk_aligned>:
 8003430:	b570      	push	{r4, r5, r6, lr}
 8003432:	4e0f      	ldr	r6, [pc, #60]	@ (8003470 <sbrk_aligned+0x40>)
 8003434:	460c      	mov	r4, r1
 8003436:	6831      	ldr	r1, [r6, #0]
 8003438:	4605      	mov	r5, r0
 800343a:	b911      	cbnz	r1, 8003442 <sbrk_aligned+0x12>
 800343c:	f001 fe7a 	bl	8005134 <_sbrk_r>
 8003440:	6030      	str	r0, [r6, #0]
 8003442:	4621      	mov	r1, r4
 8003444:	4628      	mov	r0, r5
 8003446:	f001 fe75 	bl	8005134 <_sbrk_r>
 800344a:	1c43      	adds	r3, r0, #1
 800344c:	d103      	bne.n	8003456 <sbrk_aligned+0x26>
 800344e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8003452:	4620      	mov	r0, r4
 8003454:	bd70      	pop	{r4, r5, r6, pc}
 8003456:	1cc4      	adds	r4, r0, #3
 8003458:	f024 0403 	bic.w	r4, r4, #3
 800345c:	42a0      	cmp	r0, r4
 800345e:	d0f8      	beq.n	8003452 <sbrk_aligned+0x22>
 8003460:	1a21      	subs	r1, r4, r0
 8003462:	4628      	mov	r0, r5
 8003464:	f001 fe66 	bl	8005134 <_sbrk_r>
 8003468:	3001      	adds	r0, #1
 800346a:	d1f2      	bne.n	8003452 <sbrk_aligned+0x22>
 800346c:	e7ef      	b.n	800344e <sbrk_aligned+0x1e>
 800346e:	bf00      	nop
 8003470:	20000378 	.word	0x20000378

08003474 <_malloc_r>:
 8003474:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003478:	1ccd      	adds	r5, r1, #3
 800347a:	f025 0503 	bic.w	r5, r5, #3
 800347e:	3508      	adds	r5, #8
 8003480:	2d0c      	cmp	r5, #12
 8003482:	bf38      	it	cc
 8003484:	250c      	movcc	r5, #12
 8003486:	2d00      	cmp	r5, #0
 8003488:	4606      	mov	r6, r0
 800348a:	db01      	blt.n	8003490 <_malloc_r+0x1c>
 800348c:	42a9      	cmp	r1, r5
 800348e:	d904      	bls.n	800349a <_malloc_r+0x26>
 8003490:	230c      	movs	r3, #12
 8003492:	6033      	str	r3, [r6, #0]
 8003494:	2000      	movs	r0, #0
 8003496:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800349a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003570 <_malloc_r+0xfc>
 800349e:	f000 f869 	bl	8003574 <__malloc_lock>
 80034a2:	f8d8 3000 	ldr.w	r3, [r8]
 80034a6:	461c      	mov	r4, r3
 80034a8:	bb44      	cbnz	r4, 80034fc <_malloc_r+0x88>
 80034aa:	4629      	mov	r1, r5
 80034ac:	4630      	mov	r0, r6
 80034ae:	f7ff ffbf 	bl	8003430 <sbrk_aligned>
 80034b2:	1c43      	adds	r3, r0, #1
 80034b4:	4604      	mov	r4, r0
 80034b6:	d158      	bne.n	800356a <_malloc_r+0xf6>
 80034b8:	f8d8 4000 	ldr.w	r4, [r8]
 80034bc:	4627      	mov	r7, r4
 80034be:	2f00      	cmp	r7, #0
 80034c0:	d143      	bne.n	800354a <_malloc_r+0xd6>
 80034c2:	2c00      	cmp	r4, #0
 80034c4:	d04b      	beq.n	800355e <_malloc_r+0xea>
 80034c6:	6823      	ldr	r3, [r4, #0]
 80034c8:	4639      	mov	r1, r7
 80034ca:	4630      	mov	r0, r6
 80034cc:	eb04 0903 	add.w	r9, r4, r3
 80034d0:	f001 fe30 	bl	8005134 <_sbrk_r>
 80034d4:	4581      	cmp	r9, r0
 80034d6:	d142      	bne.n	800355e <_malloc_r+0xea>
 80034d8:	6821      	ldr	r1, [r4, #0]
 80034da:	4630      	mov	r0, r6
 80034dc:	1a6d      	subs	r5, r5, r1
 80034de:	4629      	mov	r1, r5
 80034e0:	f7ff ffa6 	bl	8003430 <sbrk_aligned>
 80034e4:	3001      	adds	r0, #1
 80034e6:	d03a      	beq.n	800355e <_malloc_r+0xea>
 80034e8:	6823      	ldr	r3, [r4, #0]
 80034ea:	442b      	add	r3, r5
 80034ec:	6023      	str	r3, [r4, #0]
 80034ee:	f8d8 3000 	ldr.w	r3, [r8]
 80034f2:	685a      	ldr	r2, [r3, #4]
 80034f4:	bb62      	cbnz	r2, 8003550 <_malloc_r+0xdc>
 80034f6:	f8c8 7000 	str.w	r7, [r8]
 80034fa:	e00f      	b.n	800351c <_malloc_r+0xa8>
 80034fc:	6822      	ldr	r2, [r4, #0]
 80034fe:	1b52      	subs	r2, r2, r5
 8003500:	d420      	bmi.n	8003544 <_malloc_r+0xd0>
 8003502:	2a0b      	cmp	r2, #11
 8003504:	d917      	bls.n	8003536 <_malloc_r+0xc2>
 8003506:	1961      	adds	r1, r4, r5
 8003508:	42a3      	cmp	r3, r4
 800350a:	6025      	str	r5, [r4, #0]
 800350c:	bf18      	it	ne
 800350e:	6059      	strne	r1, [r3, #4]
 8003510:	6863      	ldr	r3, [r4, #4]
 8003512:	bf08      	it	eq
 8003514:	f8c8 1000 	streq.w	r1, [r8]
 8003518:	5162      	str	r2, [r4, r5]
 800351a:	604b      	str	r3, [r1, #4]
 800351c:	4630      	mov	r0, r6
 800351e:	f000 f82f 	bl	8003580 <__malloc_unlock>
 8003522:	f104 000b 	add.w	r0, r4, #11
 8003526:	1d23      	adds	r3, r4, #4
 8003528:	f020 0007 	bic.w	r0, r0, #7
 800352c:	1ac2      	subs	r2, r0, r3
 800352e:	bf1c      	itt	ne
 8003530:	1a1b      	subne	r3, r3, r0
 8003532:	50a3      	strne	r3, [r4, r2]
 8003534:	e7af      	b.n	8003496 <_malloc_r+0x22>
 8003536:	6862      	ldr	r2, [r4, #4]
 8003538:	42a3      	cmp	r3, r4
 800353a:	bf0c      	ite	eq
 800353c:	f8c8 2000 	streq.w	r2, [r8]
 8003540:	605a      	strne	r2, [r3, #4]
 8003542:	e7eb      	b.n	800351c <_malloc_r+0xa8>
 8003544:	4623      	mov	r3, r4
 8003546:	6864      	ldr	r4, [r4, #4]
 8003548:	e7ae      	b.n	80034a8 <_malloc_r+0x34>
 800354a:	463c      	mov	r4, r7
 800354c:	687f      	ldr	r7, [r7, #4]
 800354e:	e7b6      	b.n	80034be <_malloc_r+0x4a>
 8003550:	461a      	mov	r2, r3
 8003552:	685b      	ldr	r3, [r3, #4]
 8003554:	42a3      	cmp	r3, r4
 8003556:	d1fb      	bne.n	8003550 <_malloc_r+0xdc>
 8003558:	2300      	movs	r3, #0
 800355a:	6053      	str	r3, [r2, #4]
 800355c:	e7de      	b.n	800351c <_malloc_r+0xa8>
 800355e:	230c      	movs	r3, #12
 8003560:	4630      	mov	r0, r6
 8003562:	6033      	str	r3, [r6, #0]
 8003564:	f000 f80c 	bl	8003580 <__malloc_unlock>
 8003568:	e794      	b.n	8003494 <_malloc_r+0x20>
 800356a:	6005      	str	r5, [r0, #0]
 800356c:	e7d6      	b.n	800351c <_malloc_r+0xa8>
 800356e:	bf00      	nop
 8003570:	2000037c 	.word	0x2000037c

08003574 <__malloc_lock>:
 8003574:	4801      	ldr	r0, [pc, #4]	@ (800357c <__malloc_lock+0x8>)
 8003576:	f7ff b8a4 	b.w	80026c2 <__retarget_lock_acquire_recursive>
 800357a:	bf00      	nop
 800357c:	20000374 	.word	0x20000374

08003580 <__malloc_unlock>:
 8003580:	4801      	ldr	r0, [pc, #4]	@ (8003588 <__malloc_unlock+0x8>)
 8003582:	f7ff b89f 	b.w	80026c4 <__retarget_lock_release_recursive>
 8003586:	bf00      	nop
 8003588:	20000374 	.word	0x20000374

0800358c <_Balloc>:
 800358c:	b570      	push	{r4, r5, r6, lr}
 800358e:	69c6      	ldr	r6, [r0, #28]
 8003590:	4604      	mov	r4, r0
 8003592:	460d      	mov	r5, r1
 8003594:	b976      	cbnz	r6, 80035b4 <_Balloc+0x28>
 8003596:	2010      	movs	r0, #16
 8003598:	f7ff ff42 	bl	8003420 <malloc>
 800359c:	4602      	mov	r2, r0
 800359e:	61e0      	str	r0, [r4, #28]
 80035a0:	b920      	cbnz	r0, 80035ac <_Balloc+0x20>
 80035a2:	216b      	movs	r1, #107	@ 0x6b
 80035a4:	4b17      	ldr	r3, [pc, #92]	@ (8003604 <_Balloc+0x78>)
 80035a6:	4818      	ldr	r0, [pc, #96]	@ (8003608 <_Balloc+0x7c>)
 80035a8:	f001 fdee 	bl	8005188 <__assert_func>
 80035ac:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80035b0:	6006      	str	r6, [r0, #0]
 80035b2:	60c6      	str	r6, [r0, #12]
 80035b4:	69e6      	ldr	r6, [r4, #28]
 80035b6:	68f3      	ldr	r3, [r6, #12]
 80035b8:	b183      	cbz	r3, 80035dc <_Balloc+0x50>
 80035ba:	69e3      	ldr	r3, [r4, #28]
 80035bc:	68db      	ldr	r3, [r3, #12]
 80035be:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80035c2:	b9b8      	cbnz	r0, 80035f4 <_Balloc+0x68>
 80035c4:	2101      	movs	r1, #1
 80035c6:	fa01 f605 	lsl.w	r6, r1, r5
 80035ca:	1d72      	adds	r2, r6, #5
 80035cc:	4620      	mov	r0, r4
 80035ce:	0092      	lsls	r2, r2, #2
 80035d0:	f001 fdf8 	bl	80051c4 <_calloc_r>
 80035d4:	b160      	cbz	r0, 80035f0 <_Balloc+0x64>
 80035d6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80035da:	e00e      	b.n	80035fa <_Balloc+0x6e>
 80035dc:	2221      	movs	r2, #33	@ 0x21
 80035de:	2104      	movs	r1, #4
 80035e0:	4620      	mov	r0, r4
 80035e2:	f001 fdef 	bl	80051c4 <_calloc_r>
 80035e6:	69e3      	ldr	r3, [r4, #28]
 80035e8:	60f0      	str	r0, [r6, #12]
 80035ea:	68db      	ldr	r3, [r3, #12]
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d1e4      	bne.n	80035ba <_Balloc+0x2e>
 80035f0:	2000      	movs	r0, #0
 80035f2:	bd70      	pop	{r4, r5, r6, pc}
 80035f4:	6802      	ldr	r2, [r0, #0]
 80035f6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80035fa:	2300      	movs	r3, #0
 80035fc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003600:	e7f7      	b.n	80035f2 <_Balloc+0x66>
 8003602:	bf00      	nop
 8003604:	08005d5b 	.word	0x08005d5b
 8003608:	08005ddb 	.word	0x08005ddb

0800360c <_Bfree>:
 800360c:	b570      	push	{r4, r5, r6, lr}
 800360e:	69c6      	ldr	r6, [r0, #28]
 8003610:	4605      	mov	r5, r0
 8003612:	460c      	mov	r4, r1
 8003614:	b976      	cbnz	r6, 8003634 <_Bfree+0x28>
 8003616:	2010      	movs	r0, #16
 8003618:	f7ff ff02 	bl	8003420 <malloc>
 800361c:	4602      	mov	r2, r0
 800361e:	61e8      	str	r0, [r5, #28]
 8003620:	b920      	cbnz	r0, 800362c <_Bfree+0x20>
 8003622:	218f      	movs	r1, #143	@ 0x8f
 8003624:	4b08      	ldr	r3, [pc, #32]	@ (8003648 <_Bfree+0x3c>)
 8003626:	4809      	ldr	r0, [pc, #36]	@ (800364c <_Bfree+0x40>)
 8003628:	f001 fdae 	bl	8005188 <__assert_func>
 800362c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003630:	6006      	str	r6, [r0, #0]
 8003632:	60c6      	str	r6, [r0, #12]
 8003634:	b13c      	cbz	r4, 8003646 <_Bfree+0x3a>
 8003636:	69eb      	ldr	r3, [r5, #28]
 8003638:	6862      	ldr	r2, [r4, #4]
 800363a:	68db      	ldr	r3, [r3, #12]
 800363c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003640:	6021      	str	r1, [r4, #0]
 8003642:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003646:	bd70      	pop	{r4, r5, r6, pc}
 8003648:	08005d5b 	.word	0x08005d5b
 800364c:	08005ddb 	.word	0x08005ddb

08003650 <__multadd>:
 8003650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003654:	4607      	mov	r7, r0
 8003656:	460c      	mov	r4, r1
 8003658:	461e      	mov	r6, r3
 800365a:	2000      	movs	r0, #0
 800365c:	690d      	ldr	r5, [r1, #16]
 800365e:	f101 0c14 	add.w	ip, r1, #20
 8003662:	f8dc 3000 	ldr.w	r3, [ip]
 8003666:	3001      	adds	r0, #1
 8003668:	b299      	uxth	r1, r3
 800366a:	fb02 6101 	mla	r1, r2, r1, r6
 800366e:	0c1e      	lsrs	r6, r3, #16
 8003670:	0c0b      	lsrs	r3, r1, #16
 8003672:	fb02 3306 	mla	r3, r2, r6, r3
 8003676:	b289      	uxth	r1, r1
 8003678:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800367c:	4285      	cmp	r5, r0
 800367e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003682:	f84c 1b04 	str.w	r1, [ip], #4
 8003686:	dcec      	bgt.n	8003662 <__multadd+0x12>
 8003688:	b30e      	cbz	r6, 80036ce <__multadd+0x7e>
 800368a:	68a3      	ldr	r3, [r4, #8]
 800368c:	42ab      	cmp	r3, r5
 800368e:	dc19      	bgt.n	80036c4 <__multadd+0x74>
 8003690:	6861      	ldr	r1, [r4, #4]
 8003692:	4638      	mov	r0, r7
 8003694:	3101      	adds	r1, #1
 8003696:	f7ff ff79 	bl	800358c <_Balloc>
 800369a:	4680      	mov	r8, r0
 800369c:	b928      	cbnz	r0, 80036aa <__multadd+0x5a>
 800369e:	4602      	mov	r2, r0
 80036a0:	21ba      	movs	r1, #186	@ 0xba
 80036a2:	4b0c      	ldr	r3, [pc, #48]	@ (80036d4 <__multadd+0x84>)
 80036a4:	480c      	ldr	r0, [pc, #48]	@ (80036d8 <__multadd+0x88>)
 80036a6:	f001 fd6f 	bl	8005188 <__assert_func>
 80036aa:	6922      	ldr	r2, [r4, #16]
 80036ac:	f104 010c 	add.w	r1, r4, #12
 80036b0:	3202      	adds	r2, #2
 80036b2:	0092      	lsls	r2, r2, #2
 80036b4:	300c      	adds	r0, #12
 80036b6:	f001 fd53 	bl	8005160 <memcpy>
 80036ba:	4621      	mov	r1, r4
 80036bc:	4638      	mov	r0, r7
 80036be:	f7ff ffa5 	bl	800360c <_Bfree>
 80036c2:	4644      	mov	r4, r8
 80036c4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80036c8:	3501      	adds	r5, #1
 80036ca:	615e      	str	r6, [r3, #20]
 80036cc:	6125      	str	r5, [r4, #16]
 80036ce:	4620      	mov	r0, r4
 80036d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80036d4:	08005dca 	.word	0x08005dca
 80036d8:	08005ddb 	.word	0x08005ddb

080036dc <__s2b>:
 80036dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80036e0:	4615      	mov	r5, r2
 80036e2:	2209      	movs	r2, #9
 80036e4:	461f      	mov	r7, r3
 80036e6:	3308      	adds	r3, #8
 80036e8:	460c      	mov	r4, r1
 80036ea:	fb93 f3f2 	sdiv	r3, r3, r2
 80036ee:	4606      	mov	r6, r0
 80036f0:	2201      	movs	r2, #1
 80036f2:	2100      	movs	r1, #0
 80036f4:	429a      	cmp	r2, r3
 80036f6:	db09      	blt.n	800370c <__s2b+0x30>
 80036f8:	4630      	mov	r0, r6
 80036fa:	f7ff ff47 	bl	800358c <_Balloc>
 80036fe:	b940      	cbnz	r0, 8003712 <__s2b+0x36>
 8003700:	4602      	mov	r2, r0
 8003702:	21d3      	movs	r1, #211	@ 0xd3
 8003704:	4b18      	ldr	r3, [pc, #96]	@ (8003768 <__s2b+0x8c>)
 8003706:	4819      	ldr	r0, [pc, #100]	@ (800376c <__s2b+0x90>)
 8003708:	f001 fd3e 	bl	8005188 <__assert_func>
 800370c:	0052      	lsls	r2, r2, #1
 800370e:	3101      	adds	r1, #1
 8003710:	e7f0      	b.n	80036f4 <__s2b+0x18>
 8003712:	9b08      	ldr	r3, [sp, #32]
 8003714:	2d09      	cmp	r5, #9
 8003716:	6143      	str	r3, [r0, #20]
 8003718:	f04f 0301 	mov.w	r3, #1
 800371c:	6103      	str	r3, [r0, #16]
 800371e:	dd16      	ble.n	800374e <__s2b+0x72>
 8003720:	f104 0909 	add.w	r9, r4, #9
 8003724:	46c8      	mov	r8, r9
 8003726:	442c      	add	r4, r5
 8003728:	f818 3b01 	ldrb.w	r3, [r8], #1
 800372c:	4601      	mov	r1, r0
 800372e:	220a      	movs	r2, #10
 8003730:	4630      	mov	r0, r6
 8003732:	3b30      	subs	r3, #48	@ 0x30
 8003734:	f7ff ff8c 	bl	8003650 <__multadd>
 8003738:	45a0      	cmp	r8, r4
 800373a:	d1f5      	bne.n	8003728 <__s2b+0x4c>
 800373c:	f1a5 0408 	sub.w	r4, r5, #8
 8003740:	444c      	add	r4, r9
 8003742:	1b2d      	subs	r5, r5, r4
 8003744:	1963      	adds	r3, r4, r5
 8003746:	42bb      	cmp	r3, r7
 8003748:	db04      	blt.n	8003754 <__s2b+0x78>
 800374a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800374e:	2509      	movs	r5, #9
 8003750:	340a      	adds	r4, #10
 8003752:	e7f6      	b.n	8003742 <__s2b+0x66>
 8003754:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003758:	4601      	mov	r1, r0
 800375a:	220a      	movs	r2, #10
 800375c:	4630      	mov	r0, r6
 800375e:	3b30      	subs	r3, #48	@ 0x30
 8003760:	f7ff ff76 	bl	8003650 <__multadd>
 8003764:	e7ee      	b.n	8003744 <__s2b+0x68>
 8003766:	bf00      	nop
 8003768:	08005dca 	.word	0x08005dca
 800376c:	08005ddb 	.word	0x08005ddb

08003770 <__hi0bits>:
 8003770:	4603      	mov	r3, r0
 8003772:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003776:	bf3a      	itte	cc
 8003778:	0403      	lslcc	r3, r0, #16
 800377a:	2010      	movcc	r0, #16
 800377c:	2000      	movcs	r0, #0
 800377e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003782:	bf3c      	itt	cc
 8003784:	021b      	lslcc	r3, r3, #8
 8003786:	3008      	addcc	r0, #8
 8003788:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800378c:	bf3c      	itt	cc
 800378e:	011b      	lslcc	r3, r3, #4
 8003790:	3004      	addcc	r0, #4
 8003792:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003796:	bf3c      	itt	cc
 8003798:	009b      	lslcc	r3, r3, #2
 800379a:	3002      	addcc	r0, #2
 800379c:	2b00      	cmp	r3, #0
 800379e:	db05      	blt.n	80037ac <__hi0bits+0x3c>
 80037a0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80037a4:	f100 0001 	add.w	r0, r0, #1
 80037a8:	bf08      	it	eq
 80037aa:	2020      	moveq	r0, #32
 80037ac:	4770      	bx	lr

080037ae <__lo0bits>:
 80037ae:	6803      	ldr	r3, [r0, #0]
 80037b0:	4602      	mov	r2, r0
 80037b2:	f013 0007 	ands.w	r0, r3, #7
 80037b6:	d00b      	beq.n	80037d0 <__lo0bits+0x22>
 80037b8:	07d9      	lsls	r1, r3, #31
 80037ba:	d421      	bmi.n	8003800 <__lo0bits+0x52>
 80037bc:	0798      	lsls	r0, r3, #30
 80037be:	bf49      	itett	mi
 80037c0:	085b      	lsrmi	r3, r3, #1
 80037c2:	089b      	lsrpl	r3, r3, #2
 80037c4:	2001      	movmi	r0, #1
 80037c6:	6013      	strmi	r3, [r2, #0]
 80037c8:	bf5c      	itt	pl
 80037ca:	2002      	movpl	r0, #2
 80037cc:	6013      	strpl	r3, [r2, #0]
 80037ce:	4770      	bx	lr
 80037d0:	b299      	uxth	r1, r3
 80037d2:	b909      	cbnz	r1, 80037d8 <__lo0bits+0x2a>
 80037d4:	2010      	movs	r0, #16
 80037d6:	0c1b      	lsrs	r3, r3, #16
 80037d8:	b2d9      	uxtb	r1, r3
 80037da:	b909      	cbnz	r1, 80037e0 <__lo0bits+0x32>
 80037dc:	3008      	adds	r0, #8
 80037de:	0a1b      	lsrs	r3, r3, #8
 80037e0:	0719      	lsls	r1, r3, #28
 80037e2:	bf04      	itt	eq
 80037e4:	091b      	lsreq	r3, r3, #4
 80037e6:	3004      	addeq	r0, #4
 80037e8:	0799      	lsls	r1, r3, #30
 80037ea:	bf04      	itt	eq
 80037ec:	089b      	lsreq	r3, r3, #2
 80037ee:	3002      	addeq	r0, #2
 80037f0:	07d9      	lsls	r1, r3, #31
 80037f2:	d403      	bmi.n	80037fc <__lo0bits+0x4e>
 80037f4:	085b      	lsrs	r3, r3, #1
 80037f6:	f100 0001 	add.w	r0, r0, #1
 80037fa:	d003      	beq.n	8003804 <__lo0bits+0x56>
 80037fc:	6013      	str	r3, [r2, #0]
 80037fe:	4770      	bx	lr
 8003800:	2000      	movs	r0, #0
 8003802:	4770      	bx	lr
 8003804:	2020      	movs	r0, #32
 8003806:	4770      	bx	lr

08003808 <__i2b>:
 8003808:	b510      	push	{r4, lr}
 800380a:	460c      	mov	r4, r1
 800380c:	2101      	movs	r1, #1
 800380e:	f7ff febd 	bl	800358c <_Balloc>
 8003812:	4602      	mov	r2, r0
 8003814:	b928      	cbnz	r0, 8003822 <__i2b+0x1a>
 8003816:	f240 1145 	movw	r1, #325	@ 0x145
 800381a:	4b04      	ldr	r3, [pc, #16]	@ (800382c <__i2b+0x24>)
 800381c:	4804      	ldr	r0, [pc, #16]	@ (8003830 <__i2b+0x28>)
 800381e:	f001 fcb3 	bl	8005188 <__assert_func>
 8003822:	2301      	movs	r3, #1
 8003824:	6144      	str	r4, [r0, #20]
 8003826:	6103      	str	r3, [r0, #16]
 8003828:	bd10      	pop	{r4, pc}
 800382a:	bf00      	nop
 800382c:	08005dca 	.word	0x08005dca
 8003830:	08005ddb 	.word	0x08005ddb

08003834 <__multiply>:
 8003834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003838:	4614      	mov	r4, r2
 800383a:	690a      	ldr	r2, [r1, #16]
 800383c:	6923      	ldr	r3, [r4, #16]
 800383e:	460f      	mov	r7, r1
 8003840:	429a      	cmp	r2, r3
 8003842:	bfa2      	ittt	ge
 8003844:	4623      	movge	r3, r4
 8003846:	460c      	movge	r4, r1
 8003848:	461f      	movge	r7, r3
 800384a:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800384e:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003852:	68a3      	ldr	r3, [r4, #8]
 8003854:	6861      	ldr	r1, [r4, #4]
 8003856:	eb0a 0609 	add.w	r6, sl, r9
 800385a:	42b3      	cmp	r3, r6
 800385c:	b085      	sub	sp, #20
 800385e:	bfb8      	it	lt
 8003860:	3101      	addlt	r1, #1
 8003862:	f7ff fe93 	bl	800358c <_Balloc>
 8003866:	b930      	cbnz	r0, 8003876 <__multiply+0x42>
 8003868:	4602      	mov	r2, r0
 800386a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800386e:	4b43      	ldr	r3, [pc, #268]	@ (800397c <__multiply+0x148>)
 8003870:	4843      	ldr	r0, [pc, #268]	@ (8003980 <__multiply+0x14c>)
 8003872:	f001 fc89 	bl	8005188 <__assert_func>
 8003876:	f100 0514 	add.w	r5, r0, #20
 800387a:	462b      	mov	r3, r5
 800387c:	2200      	movs	r2, #0
 800387e:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003882:	4543      	cmp	r3, r8
 8003884:	d321      	bcc.n	80038ca <__multiply+0x96>
 8003886:	f107 0114 	add.w	r1, r7, #20
 800388a:	f104 0214 	add.w	r2, r4, #20
 800388e:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003892:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003896:	9302      	str	r3, [sp, #8]
 8003898:	1b13      	subs	r3, r2, r4
 800389a:	3b15      	subs	r3, #21
 800389c:	f023 0303 	bic.w	r3, r3, #3
 80038a0:	3304      	adds	r3, #4
 80038a2:	f104 0715 	add.w	r7, r4, #21
 80038a6:	42ba      	cmp	r2, r7
 80038a8:	bf38      	it	cc
 80038aa:	2304      	movcc	r3, #4
 80038ac:	9301      	str	r3, [sp, #4]
 80038ae:	9b02      	ldr	r3, [sp, #8]
 80038b0:	9103      	str	r1, [sp, #12]
 80038b2:	428b      	cmp	r3, r1
 80038b4:	d80c      	bhi.n	80038d0 <__multiply+0x9c>
 80038b6:	2e00      	cmp	r6, #0
 80038b8:	dd03      	ble.n	80038c2 <__multiply+0x8e>
 80038ba:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d05a      	beq.n	8003978 <__multiply+0x144>
 80038c2:	6106      	str	r6, [r0, #16]
 80038c4:	b005      	add	sp, #20
 80038c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80038ca:	f843 2b04 	str.w	r2, [r3], #4
 80038ce:	e7d8      	b.n	8003882 <__multiply+0x4e>
 80038d0:	f8b1 a000 	ldrh.w	sl, [r1]
 80038d4:	f1ba 0f00 	cmp.w	sl, #0
 80038d8:	d023      	beq.n	8003922 <__multiply+0xee>
 80038da:	46a9      	mov	r9, r5
 80038dc:	f04f 0c00 	mov.w	ip, #0
 80038e0:	f104 0e14 	add.w	lr, r4, #20
 80038e4:	f85e 7b04 	ldr.w	r7, [lr], #4
 80038e8:	f8d9 3000 	ldr.w	r3, [r9]
 80038ec:	fa1f fb87 	uxth.w	fp, r7
 80038f0:	b29b      	uxth	r3, r3
 80038f2:	fb0a 330b 	mla	r3, sl, fp, r3
 80038f6:	4463      	add	r3, ip
 80038f8:	f8d9 c000 	ldr.w	ip, [r9]
 80038fc:	0c3f      	lsrs	r7, r7, #16
 80038fe:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003902:	fb0a c707 	mla	r7, sl, r7, ip
 8003906:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800390a:	b29b      	uxth	r3, r3
 800390c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003910:	4572      	cmp	r2, lr
 8003912:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003916:	f849 3b04 	str.w	r3, [r9], #4
 800391a:	d8e3      	bhi.n	80038e4 <__multiply+0xb0>
 800391c:	9b01      	ldr	r3, [sp, #4]
 800391e:	f845 c003 	str.w	ip, [r5, r3]
 8003922:	9b03      	ldr	r3, [sp, #12]
 8003924:	3104      	adds	r1, #4
 8003926:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800392a:	f1b9 0f00 	cmp.w	r9, #0
 800392e:	d021      	beq.n	8003974 <__multiply+0x140>
 8003930:	46ae      	mov	lr, r5
 8003932:	f04f 0a00 	mov.w	sl, #0
 8003936:	682b      	ldr	r3, [r5, #0]
 8003938:	f104 0c14 	add.w	ip, r4, #20
 800393c:	f8bc b000 	ldrh.w	fp, [ip]
 8003940:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003944:	b29b      	uxth	r3, r3
 8003946:	fb09 770b 	mla	r7, r9, fp, r7
 800394a:	4457      	add	r7, sl
 800394c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003950:	f84e 3b04 	str.w	r3, [lr], #4
 8003954:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003958:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800395c:	f8be 3000 	ldrh.w	r3, [lr]
 8003960:	4562      	cmp	r2, ip
 8003962:	fb09 330a 	mla	r3, r9, sl, r3
 8003966:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800396a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800396e:	d8e5      	bhi.n	800393c <__multiply+0x108>
 8003970:	9f01      	ldr	r7, [sp, #4]
 8003972:	51eb      	str	r3, [r5, r7]
 8003974:	3504      	adds	r5, #4
 8003976:	e79a      	b.n	80038ae <__multiply+0x7a>
 8003978:	3e01      	subs	r6, #1
 800397a:	e79c      	b.n	80038b6 <__multiply+0x82>
 800397c:	08005dca 	.word	0x08005dca
 8003980:	08005ddb 	.word	0x08005ddb

08003984 <__pow5mult>:
 8003984:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003988:	4615      	mov	r5, r2
 800398a:	f012 0203 	ands.w	r2, r2, #3
 800398e:	4607      	mov	r7, r0
 8003990:	460e      	mov	r6, r1
 8003992:	d007      	beq.n	80039a4 <__pow5mult+0x20>
 8003994:	4c25      	ldr	r4, [pc, #148]	@ (8003a2c <__pow5mult+0xa8>)
 8003996:	3a01      	subs	r2, #1
 8003998:	2300      	movs	r3, #0
 800399a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800399e:	f7ff fe57 	bl	8003650 <__multadd>
 80039a2:	4606      	mov	r6, r0
 80039a4:	10ad      	asrs	r5, r5, #2
 80039a6:	d03d      	beq.n	8003a24 <__pow5mult+0xa0>
 80039a8:	69fc      	ldr	r4, [r7, #28]
 80039aa:	b97c      	cbnz	r4, 80039cc <__pow5mult+0x48>
 80039ac:	2010      	movs	r0, #16
 80039ae:	f7ff fd37 	bl	8003420 <malloc>
 80039b2:	4602      	mov	r2, r0
 80039b4:	61f8      	str	r0, [r7, #28]
 80039b6:	b928      	cbnz	r0, 80039c4 <__pow5mult+0x40>
 80039b8:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80039bc:	4b1c      	ldr	r3, [pc, #112]	@ (8003a30 <__pow5mult+0xac>)
 80039be:	481d      	ldr	r0, [pc, #116]	@ (8003a34 <__pow5mult+0xb0>)
 80039c0:	f001 fbe2 	bl	8005188 <__assert_func>
 80039c4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80039c8:	6004      	str	r4, [r0, #0]
 80039ca:	60c4      	str	r4, [r0, #12]
 80039cc:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80039d0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80039d4:	b94c      	cbnz	r4, 80039ea <__pow5mult+0x66>
 80039d6:	f240 2171 	movw	r1, #625	@ 0x271
 80039da:	4638      	mov	r0, r7
 80039dc:	f7ff ff14 	bl	8003808 <__i2b>
 80039e0:	2300      	movs	r3, #0
 80039e2:	4604      	mov	r4, r0
 80039e4:	f8c8 0008 	str.w	r0, [r8, #8]
 80039e8:	6003      	str	r3, [r0, #0]
 80039ea:	f04f 0900 	mov.w	r9, #0
 80039ee:	07eb      	lsls	r3, r5, #31
 80039f0:	d50a      	bpl.n	8003a08 <__pow5mult+0x84>
 80039f2:	4631      	mov	r1, r6
 80039f4:	4622      	mov	r2, r4
 80039f6:	4638      	mov	r0, r7
 80039f8:	f7ff ff1c 	bl	8003834 <__multiply>
 80039fc:	4680      	mov	r8, r0
 80039fe:	4631      	mov	r1, r6
 8003a00:	4638      	mov	r0, r7
 8003a02:	f7ff fe03 	bl	800360c <_Bfree>
 8003a06:	4646      	mov	r6, r8
 8003a08:	106d      	asrs	r5, r5, #1
 8003a0a:	d00b      	beq.n	8003a24 <__pow5mult+0xa0>
 8003a0c:	6820      	ldr	r0, [r4, #0]
 8003a0e:	b938      	cbnz	r0, 8003a20 <__pow5mult+0x9c>
 8003a10:	4622      	mov	r2, r4
 8003a12:	4621      	mov	r1, r4
 8003a14:	4638      	mov	r0, r7
 8003a16:	f7ff ff0d 	bl	8003834 <__multiply>
 8003a1a:	6020      	str	r0, [r4, #0]
 8003a1c:	f8c0 9000 	str.w	r9, [r0]
 8003a20:	4604      	mov	r4, r0
 8003a22:	e7e4      	b.n	80039ee <__pow5mult+0x6a>
 8003a24:	4630      	mov	r0, r6
 8003a26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003a2a:	bf00      	nop
 8003a2c:	08005e34 	.word	0x08005e34
 8003a30:	08005d5b 	.word	0x08005d5b
 8003a34:	08005ddb 	.word	0x08005ddb

08003a38 <__lshift>:
 8003a38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a3c:	460c      	mov	r4, r1
 8003a3e:	4607      	mov	r7, r0
 8003a40:	4691      	mov	r9, r2
 8003a42:	6923      	ldr	r3, [r4, #16]
 8003a44:	6849      	ldr	r1, [r1, #4]
 8003a46:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003a4a:	68a3      	ldr	r3, [r4, #8]
 8003a4c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003a50:	f108 0601 	add.w	r6, r8, #1
 8003a54:	42b3      	cmp	r3, r6
 8003a56:	db0b      	blt.n	8003a70 <__lshift+0x38>
 8003a58:	4638      	mov	r0, r7
 8003a5a:	f7ff fd97 	bl	800358c <_Balloc>
 8003a5e:	4605      	mov	r5, r0
 8003a60:	b948      	cbnz	r0, 8003a76 <__lshift+0x3e>
 8003a62:	4602      	mov	r2, r0
 8003a64:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003a68:	4b27      	ldr	r3, [pc, #156]	@ (8003b08 <__lshift+0xd0>)
 8003a6a:	4828      	ldr	r0, [pc, #160]	@ (8003b0c <__lshift+0xd4>)
 8003a6c:	f001 fb8c 	bl	8005188 <__assert_func>
 8003a70:	3101      	adds	r1, #1
 8003a72:	005b      	lsls	r3, r3, #1
 8003a74:	e7ee      	b.n	8003a54 <__lshift+0x1c>
 8003a76:	2300      	movs	r3, #0
 8003a78:	f100 0114 	add.w	r1, r0, #20
 8003a7c:	f100 0210 	add.w	r2, r0, #16
 8003a80:	4618      	mov	r0, r3
 8003a82:	4553      	cmp	r3, sl
 8003a84:	db33      	blt.n	8003aee <__lshift+0xb6>
 8003a86:	6920      	ldr	r0, [r4, #16]
 8003a88:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003a8c:	f104 0314 	add.w	r3, r4, #20
 8003a90:	f019 091f 	ands.w	r9, r9, #31
 8003a94:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003a98:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003a9c:	d02b      	beq.n	8003af6 <__lshift+0xbe>
 8003a9e:	468a      	mov	sl, r1
 8003aa0:	2200      	movs	r2, #0
 8003aa2:	f1c9 0e20 	rsb	lr, r9, #32
 8003aa6:	6818      	ldr	r0, [r3, #0]
 8003aa8:	fa00 f009 	lsl.w	r0, r0, r9
 8003aac:	4310      	orrs	r0, r2
 8003aae:	f84a 0b04 	str.w	r0, [sl], #4
 8003ab2:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ab6:	459c      	cmp	ip, r3
 8003ab8:	fa22 f20e 	lsr.w	r2, r2, lr
 8003abc:	d8f3      	bhi.n	8003aa6 <__lshift+0x6e>
 8003abe:	ebac 0304 	sub.w	r3, ip, r4
 8003ac2:	3b15      	subs	r3, #21
 8003ac4:	f023 0303 	bic.w	r3, r3, #3
 8003ac8:	3304      	adds	r3, #4
 8003aca:	f104 0015 	add.w	r0, r4, #21
 8003ace:	4584      	cmp	ip, r0
 8003ad0:	bf38      	it	cc
 8003ad2:	2304      	movcc	r3, #4
 8003ad4:	50ca      	str	r2, [r1, r3]
 8003ad6:	b10a      	cbz	r2, 8003adc <__lshift+0xa4>
 8003ad8:	f108 0602 	add.w	r6, r8, #2
 8003adc:	3e01      	subs	r6, #1
 8003ade:	4638      	mov	r0, r7
 8003ae0:	4621      	mov	r1, r4
 8003ae2:	612e      	str	r6, [r5, #16]
 8003ae4:	f7ff fd92 	bl	800360c <_Bfree>
 8003ae8:	4628      	mov	r0, r5
 8003aea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003aee:	f842 0f04 	str.w	r0, [r2, #4]!
 8003af2:	3301      	adds	r3, #1
 8003af4:	e7c5      	b.n	8003a82 <__lshift+0x4a>
 8003af6:	3904      	subs	r1, #4
 8003af8:	f853 2b04 	ldr.w	r2, [r3], #4
 8003afc:	459c      	cmp	ip, r3
 8003afe:	f841 2f04 	str.w	r2, [r1, #4]!
 8003b02:	d8f9      	bhi.n	8003af8 <__lshift+0xc0>
 8003b04:	e7ea      	b.n	8003adc <__lshift+0xa4>
 8003b06:	bf00      	nop
 8003b08:	08005dca 	.word	0x08005dca
 8003b0c:	08005ddb 	.word	0x08005ddb

08003b10 <__mcmp>:
 8003b10:	4603      	mov	r3, r0
 8003b12:	690a      	ldr	r2, [r1, #16]
 8003b14:	6900      	ldr	r0, [r0, #16]
 8003b16:	b530      	push	{r4, r5, lr}
 8003b18:	1a80      	subs	r0, r0, r2
 8003b1a:	d10e      	bne.n	8003b3a <__mcmp+0x2a>
 8003b1c:	3314      	adds	r3, #20
 8003b1e:	3114      	adds	r1, #20
 8003b20:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003b24:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003b28:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003b2c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003b30:	4295      	cmp	r5, r2
 8003b32:	d003      	beq.n	8003b3c <__mcmp+0x2c>
 8003b34:	d205      	bcs.n	8003b42 <__mcmp+0x32>
 8003b36:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003b3a:	bd30      	pop	{r4, r5, pc}
 8003b3c:	42a3      	cmp	r3, r4
 8003b3e:	d3f3      	bcc.n	8003b28 <__mcmp+0x18>
 8003b40:	e7fb      	b.n	8003b3a <__mcmp+0x2a>
 8003b42:	2001      	movs	r0, #1
 8003b44:	e7f9      	b.n	8003b3a <__mcmp+0x2a>
	...

08003b48 <__mdiff>:
 8003b48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b4c:	4689      	mov	r9, r1
 8003b4e:	4606      	mov	r6, r0
 8003b50:	4611      	mov	r1, r2
 8003b52:	4648      	mov	r0, r9
 8003b54:	4614      	mov	r4, r2
 8003b56:	f7ff ffdb 	bl	8003b10 <__mcmp>
 8003b5a:	1e05      	subs	r5, r0, #0
 8003b5c:	d112      	bne.n	8003b84 <__mdiff+0x3c>
 8003b5e:	4629      	mov	r1, r5
 8003b60:	4630      	mov	r0, r6
 8003b62:	f7ff fd13 	bl	800358c <_Balloc>
 8003b66:	4602      	mov	r2, r0
 8003b68:	b928      	cbnz	r0, 8003b76 <__mdiff+0x2e>
 8003b6a:	f240 2137 	movw	r1, #567	@ 0x237
 8003b6e:	4b3e      	ldr	r3, [pc, #248]	@ (8003c68 <__mdiff+0x120>)
 8003b70:	483e      	ldr	r0, [pc, #248]	@ (8003c6c <__mdiff+0x124>)
 8003b72:	f001 fb09 	bl	8005188 <__assert_func>
 8003b76:	2301      	movs	r3, #1
 8003b78:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003b7c:	4610      	mov	r0, r2
 8003b7e:	b003      	add	sp, #12
 8003b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b84:	bfbc      	itt	lt
 8003b86:	464b      	movlt	r3, r9
 8003b88:	46a1      	movlt	r9, r4
 8003b8a:	4630      	mov	r0, r6
 8003b8c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003b90:	bfba      	itte	lt
 8003b92:	461c      	movlt	r4, r3
 8003b94:	2501      	movlt	r5, #1
 8003b96:	2500      	movge	r5, #0
 8003b98:	f7ff fcf8 	bl	800358c <_Balloc>
 8003b9c:	4602      	mov	r2, r0
 8003b9e:	b918      	cbnz	r0, 8003ba8 <__mdiff+0x60>
 8003ba0:	f240 2145 	movw	r1, #581	@ 0x245
 8003ba4:	4b30      	ldr	r3, [pc, #192]	@ (8003c68 <__mdiff+0x120>)
 8003ba6:	e7e3      	b.n	8003b70 <__mdiff+0x28>
 8003ba8:	f100 0b14 	add.w	fp, r0, #20
 8003bac:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003bb0:	f109 0310 	add.w	r3, r9, #16
 8003bb4:	60c5      	str	r5, [r0, #12]
 8003bb6:	f04f 0c00 	mov.w	ip, #0
 8003bba:	f109 0514 	add.w	r5, r9, #20
 8003bbe:	46d9      	mov	r9, fp
 8003bc0:	6926      	ldr	r6, [r4, #16]
 8003bc2:	f104 0e14 	add.w	lr, r4, #20
 8003bc6:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003bca:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003bce:	9301      	str	r3, [sp, #4]
 8003bd0:	9b01      	ldr	r3, [sp, #4]
 8003bd2:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003bd6:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003bda:	b281      	uxth	r1, r0
 8003bdc:	9301      	str	r3, [sp, #4]
 8003bde:	fa1f f38a 	uxth.w	r3, sl
 8003be2:	1a5b      	subs	r3, r3, r1
 8003be4:	0c00      	lsrs	r0, r0, #16
 8003be6:	4463      	add	r3, ip
 8003be8:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003bec:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003bf0:	b29b      	uxth	r3, r3
 8003bf2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003bf6:	4576      	cmp	r6, lr
 8003bf8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003bfc:	f849 3b04 	str.w	r3, [r9], #4
 8003c00:	d8e6      	bhi.n	8003bd0 <__mdiff+0x88>
 8003c02:	1b33      	subs	r3, r6, r4
 8003c04:	3b15      	subs	r3, #21
 8003c06:	f023 0303 	bic.w	r3, r3, #3
 8003c0a:	3415      	adds	r4, #21
 8003c0c:	3304      	adds	r3, #4
 8003c0e:	42a6      	cmp	r6, r4
 8003c10:	bf38      	it	cc
 8003c12:	2304      	movcc	r3, #4
 8003c14:	441d      	add	r5, r3
 8003c16:	445b      	add	r3, fp
 8003c18:	461e      	mov	r6, r3
 8003c1a:	462c      	mov	r4, r5
 8003c1c:	4544      	cmp	r4, r8
 8003c1e:	d30e      	bcc.n	8003c3e <__mdiff+0xf6>
 8003c20:	f108 0103 	add.w	r1, r8, #3
 8003c24:	1b49      	subs	r1, r1, r5
 8003c26:	f021 0103 	bic.w	r1, r1, #3
 8003c2a:	3d03      	subs	r5, #3
 8003c2c:	45a8      	cmp	r8, r5
 8003c2e:	bf38      	it	cc
 8003c30:	2100      	movcc	r1, #0
 8003c32:	440b      	add	r3, r1
 8003c34:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003c38:	b199      	cbz	r1, 8003c62 <__mdiff+0x11a>
 8003c3a:	6117      	str	r7, [r2, #16]
 8003c3c:	e79e      	b.n	8003b7c <__mdiff+0x34>
 8003c3e:	46e6      	mov	lr, ip
 8003c40:	f854 1b04 	ldr.w	r1, [r4], #4
 8003c44:	fa1f fc81 	uxth.w	ip, r1
 8003c48:	44f4      	add	ip, lr
 8003c4a:	0c08      	lsrs	r0, r1, #16
 8003c4c:	4471      	add	r1, lr
 8003c4e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003c52:	b289      	uxth	r1, r1
 8003c54:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003c58:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003c5c:	f846 1b04 	str.w	r1, [r6], #4
 8003c60:	e7dc      	b.n	8003c1c <__mdiff+0xd4>
 8003c62:	3f01      	subs	r7, #1
 8003c64:	e7e6      	b.n	8003c34 <__mdiff+0xec>
 8003c66:	bf00      	nop
 8003c68:	08005dca 	.word	0x08005dca
 8003c6c:	08005ddb 	.word	0x08005ddb

08003c70 <__ulp>:
 8003c70:	4b0e      	ldr	r3, [pc, #56]	@ (8003cac <__ulp+0x3c>)
 8003c72:	400b      	ands	r3, r1
 8003c74:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8003c78:	2b00      	cmp	r3, #0
 8003c7a:	dc08      	bgt.n	8003c8e <__ulp+0x1e>
 8003c7c:	425b      	negs	r3, r3
 8003c7e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8003c82:	ea4f 5223 	mov.w	r2, r3, asr #20
 8003c86:	da04      	bge.n	8003c92 <__ulp+0x22>
 8003c88:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8003c8c:	4113      	asrs	r3, r2
 8003c8e:	2200      	movs	r2, #0
 8003c90:	e008      	b.n	8003ca4 <__ulp+0x34>
 8003c92:	f1a2 0314 	sub.w	r3, r2, #20
 8003c96:	2b1e      	cmp	r3, #30
 8003c98:	bfd6      	itet	le
 8003c9a:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8003c9e:	2201      	movgt	r2, #1
 8003ca0:	40da      	lsrle	r2, r3
 8003ca2:	2300      	movs	r3, #0
 8003ca4:	4619      	mov	r1, r3
 8003ca6:	4610      	mov	r0, r2
 8003ca8:	4770      	bx	lr
 8003caa:	bf00      	nop
 8003cac:	7ff00000 	.word	0x7ff00000

08003cb0 <__b2d>:
 8003cb0:	6902      	ldr	r2, [r0, #16]
 8003cb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cb4:	f100 0614 	add.w	r6, r0, #20
 8003cb8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8003cbc:	f852 4c04 	ldr.w	r4, [r2, #-4]
 8003cc0:	4f1e      	ldr	r7, [pc, #120]	@ (8003d3c <__b2d+0x8c>)
 8003cc2:	4620      	mov	r0, r4
 8003cc4:	f7ff fd54 	bl	8003770 <__hi0bits>
 8003cc8:	4603      	mov	r3, r0
 8003cca:	f1c0 0020 	rsb	r0, r0, #32
 8003cce:	2b0a      	cmp	r3, #10
 8003cd0:	f1a2 0504 	sub.w	r5, r2, #4
 8003cd4:	6008      	str	r0, [r1, #0]
 8003cd6:	dc12      	bgt.n	8003cfe <__b2d+0x4e>
 8003cd8:	42ae      	cmp	r6, r5
 8003cda:	bf2c      	ite	cs
 8003cdc:	2200      	movcs	r2, #0
 8003cde:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8003ce2:	f1c3 0c0b 	rsb	ip, r3, #11
 8003ce6:	3315      	adds	r3, #21
 8003ce8:	fa24 fe0c 	lsr.w	lr, r4, ip
 8003cec:	fa04 f303 	lsl.w	r3, r4, r3
 8003cf0:	fa22 f20c 	lsr.w	r2, r2, ip
 8003cf4:	ea4e 0107 	orr.w	r1, lr, r7
 8003cf8:	431a      	orrs	r2, r3
 8003cfa:	4610      	mov	r0, r2
 8003cfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003cfe:	42ae      	cmp	r6, r5
 8003d00:	bf36      	itet	cc
 8003d02:	f1a2 0508 	subcc.w	r5, r2, #8
 8003d06:	2200      	movcs	r2, #0
 8003d08:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8003d0c:	3b0b      	subs	r3, #11
 8003d0e:	d012      	beq.n	8003d36 <__b2d+0x86>
 8003d10:	f1c3 0720 	rsb	r7, r3, #32
 8003d14:	fa22 f107 	lsr.w	r1, r2, r7
 8003d18:	409c      	lsls	r4, r3
 8003d1a:	430c      	orrs	r4, r1
 8003d1c:	42b5      	cmp	r5, r6
 8003d1e:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 8003d22:	bf94      	ite	ls
 8003d24:	2400      	movls	r4, #0
 8003d26:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 8003d2a:	409a      	lsls	r2, r3
 8003d2c:	40fc      	lsrs	r4, r7
 8003d2e:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8003d32:	4322      	orrs	r2, r4
 8003d34:	e7e1      	b.n	8003cfa <__b2d+0x4a>
 8003d36:	ea44 0107 	orr.w	r1, r4, r7
 8003d3a:	e7de      	b.n	8003cfa <__b2d+0x4a>
 8003d3c:	3ff00000 	.word	0x3ff00000

08003d40 <__d2b>:
 8003d40:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003d44:	2101      	movs	r1, #1
 8003d46:	4690      	mov	r8, r2
 8003d48:	4699      	mov	r9, r3
 8003d4a:	9e08      	ldr	r6, [sp, #32]
 8003d4c:	f7ff fc1e 	bl	800358c <_Balloc>
 8003d50:	4604      	mov	r4, r0
 8003d52:	b930      	cbnz	r0, 8003d62 <__d2b+0x22>
 8003d54:	4602      	mov	r2, r0
 8003d56:	f240 310f 	movw	r1, #783	@ 0x30f
 8003d5a:	4b23      	ldr	r3, [pc, #140]	@ (8003de8 <__d2b+0xa8>)
 8003d5c:	4823      	ldr	r0, [pc, #140]	@ (8003dec <__d2b+0xac>)
 8003d5e:	f001 fa13 	bl	8005188 <__assert_func>
 8003d62:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003d66:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003d6a:	b10d      	cbz	r5, 8003d70 <__d2b+0x30>
 8003d6c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003d70:	9301      	str	r3, [sp, #4]
 8003d72:	f1b8 0300 	subs.w	r3, r8, #0
 8003d76:	d024      	beq.n	8003dc2 <__d2b+0x82>
 8003d78:	4668      	mov	r0, sp
 8003d7a:	9300      	str	r3, [sp, #0]
 8003d7c:	f7ff fd17 	bl	80037ae <__lo0bits>
 8003d80:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003d84:	b1d8      	cbz	r0, 8003dbe <__d2b+0x7e>
 8003d86:	f1c0 0320 	rsb	r3, r0, #32
 8003d8a:	fa02 f303 	lsl.w	r3, r2, r3
 8003d8e:	430b      	orrs	r3, r1
 8003d90:	40c2      	lsrs	r2, r0
 8003d92:	6163      	str	r3, [r4, #20]
 8003d94:	9201      	str	r2, [sp, #4]
 8003d96:	9b01      	ldr	r3, [sp, #4]
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	bf0c      	ite	eq
 8003d9c:	2201      	moveq	r2, #1
 8003d9e:	2202      	movne	r2, #2
 8003da0:	61a3      	str	r3, [r4, #24]
 8003da2:	6122      	str	r2, [r4, #16]
 8003da4:	b1ad      	cbz	r5, 8003dd2 <__d2b+0x92>
 8003da6:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003daa:	4405      	add	r5, r0
 8003dac:	6035      	str	r5, [r6, #0]
 8003dae:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003db2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003db4:	6018      	str	r0, [r3, #0]
 8003db6:	4620      	mov	r0, r4
 8003db8:	b002      	add	sp, #8
 8003dba:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8003dbe:	6161      	str	r1, [r4, #20]
 8003dc0:	e7e9      	b.n	8003d96 <__d2b+0x56>
 8003dc2:	a801      	add	r0, sp, #4
 8003dc4:	f7ff fcf3 	bl	80037ae <__lo0bits>
 8003dc8:	9b01      	ldr	r3, [sp, #4]
 8003dca:	2201      	movs	r2, #1
 8003dcc:	6163      	str	r3, [r4, #20]
 8003dce:	3020      	adds	r0, #32
 8003dd0:	e7e7      	b.n	8003da2 <__d2b+0x62>
 8003dd2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003dd6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003dda:	6030      	str	r0, [r6, #0]
 8003ddc:	6918      	ldr	r0, [r3, #16]
 8003dde:	f7ff fcc7 	bl	8003770 <__hi0bits>
 8003de2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003de6:	e7e4      	b.n	8003db2 <__d2b+0x72>
 8003de8:	08005dca 	.word	0x08005dca
 8003dec:	08005ddb 	.word	0x08005ddb

08003df0 <__ratio>:
 8003df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003df4:	b085      	sub	sp, #20
 8003df6:	e9cd 1000 	strd	r1, r0, [sp]
 8003dfa:	a902      	add	r1, sp, #8
 8003dfc:	f7ff ff58 	bl	8003cb0 <__b2d>
 8003e00:	468b      	mov	fp, r1
 8003e02:	4606      	mov	r6, r0
 8003e04:	460f      	mov	r7, r1
 8003e06:	9800      	ldr	r0, [sp, #0]
 8003e08:	a903      	add	r1, sp, #12
 8003e0a:	f7ff ff51 	bl	8003cb0 <__b2d>
 8003e0e:	460d      	mov	r5, r1
 8003e10:	9b01      	ldr	r3, [sp, #4]
 8003e12:	4689      	mov	r9, r1
 8003e14:	6919      	ldr	r1, [r3, #16]
 8003e16:	9b00      	ldr	r3, [sp, #0]
 8003e18:	4604      	mov	r4, r0
 8003e1a:	691b      	ldr	r3, [r3, #16]
 8003e1c:	4630      	mov	r0, r6
 8003e1e:	1ac9      	subs	r1, r1, r3
 8003e20:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8003e24:	1a9b      	subs	r3, r3, r2
 8003e26:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	bfcd      	iteet	gt
 8003e2e:	463a      	movgt	r2, r7
 8003e30:	462a      	movle	r2, r5
 8003e32:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8003e36:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8003e3a:	bfd8      	it	le
 8003e3c:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8003e40:	464b      	mov	r3, r9
 8003e42:	4622      	mov	r2, r4
 8003e44:	4659      	mov	r1, fp
 8003e46:	f7fc fc71 	bl	800072c <__aeabi_ddiv>
 8003e4a:	b005      	add	sp, #20
 8003e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003e50 <__copybits>:
 8003e50:	3901      	subs	r1, #1
 8003e52:	b570      	push	{r4, r5, r6, lr}
 8003e54:	1149      	asrs	r1, r1, #5
 8003e56:	6914      	ldr	r4, [r2, #16]
 8003e58:	3101      	adds	r1, #1
 8003e5a:	f102 0314 	add.w	r3, r2, #20
 8003e5e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8003e62:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8003e66:	1f05      	subs	r5, r0, #4
 8003e68:	42a3      	cmp	r3, r4
 8003e6a:	d30c      	bcc.n	8003e86 <__copybits+0x36>
 8003e6c:	1aa3      	subs	r3, r4, r2
 8003e6e:	3b11      	subs	r3, #17
 8003e70:	f023 0303 	bic.w	r3, r3, #3
 8003e74:	3211      	adds	r2, #17
 8003e76:	42a2      	cmp	r2, r4
 8003e78:	bf88      	it	hi
 8003e7a:	2300      	movhi	r3, #0
 8003e7c:	4418      	add	r0, r3
 8003e7e:	2300      	movs	r3, #0
 8003e80:	4288      	cmp	r0, r1
 8003e82:	d305      	bcc.n	8003e90 <__copybits+0x40>
 8003e84:	bd70      	pop	{r4, r5, r6, pc}
 8003e86:	f853 6b04 	ldr.w	r6, [r3], #4
 8003e8a:	f845 6f04 	str.w	r6, [r5, #4]!
 8003e8e:	e7eb      	b.n	8003e68 <__copybits+0x18>
 8003e90:	f840 3b04 	str.w	r3, [r0], #4
 8003e94:	e7f4      	b.n	8003e80 <__copybits+0x30>

08003e96 <__any_on>:
 8003e96:	f100 0214 	add.w	r2, r0, #20
 8003e9a:	6900      	ldr	r0, [r0, #16]
 8003e9c:	114b      	asrs	r3, r1, #5
 8003e9e:	4298      	cmp	r0, r3
 8003ea0:	b510      	push	{r4, lr}
 8003ea2:	db11      	blt.n	8003ec8 <__any_on+0x32>
 8003ea4:	dd0a      	ble.n	8003ebc <__any_on+0x26>
 8003ea6:	f011 011f 	ands.w	r1, r1, #31
 8003eaa:	d007      	beq.n	8003ebc <__any_on+0x26>
 8003eac:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8003eb0:	fa24 f001 	lsr.w	r0, r4, r1
 8003eb4:	fa00 f101 	lsl.w	r1, r0, r1
 8003eb8:	428c      	cmp	r4, r1
 8003eba:	d10b      	bne.n	8003ed4 <__any_on+0x3e>
 8003ebc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d803      	bhi.n	8003ecc <__any_on+0x36>
 8003ec4:	2000      	movs	r0, #0
 8003ec6:	bd10      	pop	{r4, pc}
 8003ec8:	4603      	mov	r3, r0
 8003eca:	e7f7      	b.n	8003ebc <__any_on+0x26>
 8003ecc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003ed0:	2900      	cmp	r1, #0
 8003ed2:	d0f5      	beq.n	8003ec0 <__any_on+0x2a>
 8003ed4:	2001      	movs	r0, #1
 8003ed6:	e7f6      	b.n	8003ec6 <__any_on+0x30>

08003ed8 <sulp>:
 8003ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003edc:	460f      	mov	r7, r1
 8003ede:	4690      	mov	r8, r2
 8003ee0:	f7ff fec6 	bl	8003c70 <__ulp>
 8003ee4:	4604      	mov	r4, r0
 8003ee6:	460d      	mov	r5, r1
 8003ee8:	f1b8 0f00 	cmp.w	r8, #0
 8003eec:	d011      	beq.n	8003f12 <sulp+0x3a>
 8003eee:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8003ef2:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	dd0b      	ble.n	8003f12 <sulp+0x3a>
 8003efa:	2400      	movs	r4, #0
 8003efc:	051b      	lsls	r3, r3, #20
 8003efe:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8003f02:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8003f06:	4622      	mov	r2, r4
 8003f08:	462b      	mov	r3, r5
 8003f0a:	f7fc fae5 	bl	80004d8 <__aeabi_dmul>
 8003f0e:	4604      	mov	r4, r0
 8003f10:	460d      	mov	r5, r1
 8003f12:	4620      	mov	r0, r4
 8003f14:	4629      	mov	r1, r5
 8003f16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f1a:	0000      	movs	r0, r0
 8003f1c:	0000      	movs	r0, r0
	...

08003f20 <_strtod_l>:
 8003f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f24:	b09f      	sub	sp, #124	@ 0x7c
 8003f26:	9217      	str	r2, [sp, #92]	@ 0x5c
 8003f28:	2200      	movs	r2, #0
 8003f2a:	460c      	mov	r4, r1
 8003f2c:	921a      	str	r2, [sp, #104]	@ 0x68
 8003f2e:	f04f 0a00 	mov.w	sl, #0
 8003f32:	f04f 0b00 	mov.w	fp, #0
 8003f36:	460a      	mov	r2, r1
 8003f38:	9005      	str	r0, [sp, #20]
 8003f3a:	9219      	str	r2, [sp, #100]	@ 0x64
 8003f3c:	7811      	ldrb	r1, [r2, #0]
 8003f3e:	292b      	cmp	r1, #43	@ 0x2b
 8003f40:	d048      	beq.n	8003fd4 <_strtod_l+0xb4>
 8003f42:	d836      	bhi.n	8003fb2 <_strtod_l+0x92>
 8003f44:	290d      	cmp	r1, #13
 8003f46:	d830      	bhi.n	8003faa <_strtod_l+0x8a>
 8003f48:	2908      	cmp	r1, #8
 8003f4a:	d830      	bhi.n	8003fae <_strtod_l+0x8e>
 8003f4c:	2900      	cmp	r1, #0
 8003f4e:	d039      	beq.n	8003fc4 <_strtod_l+0xa4>
 8003f50:	2200      	movs	r2, #0
 8003f52:	920b      	str	r2, [sp, #44]	@ 0x2c
 8003f54:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8003f56:	782a      	ldrb	r2, [r5, #0]
 8003f58:	2a30      	cmp	r2, #48	@ 0x30
 8003f5a:	f040 80b1 	bne.w	80040c0 <_strtod_l+0x1a0>
 8003f5e:	786a      	ldrb	r2, [r5, #1]
 8003f60:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8003f64:	2a58      	cmp	r2, #88	@ 0x58
 8003f66:	d16c      	bne.n	8004042 <_strtod_l+0x122>
 8003f68:	9302      	str	r3, [sp, #8]
 8003f6a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003f6c:	4a8e      	ldr	r2, [pc, #568]	@ (80041a8 <_strtod_l+0x288>)
 8003f6e:	9301      	str	r3, [sp, #4]
 8003f70:	ab1a      	add	r3, sp, #104	@ 0x68
 8003f72:	9300      	str	r3, [sp, #0]
 8003f74:	9805      	ldr	r0, [sp, #20]
 8003f76:	ab1b      	add	r3, sp, #108	@ 0x6c
 8003f78:	a919      	add	r1, sp, #100	@ 0x64
 8003f7a:	f001 f99f 	bl	80052bc <__gethex>
 8003f7e:	f010 060f 	ands.w	r6, r0, #15
 8003f82:	4604      	mov	r4, r0
 8003f84:	d005      	beq.n	8003f92 <_strtod_l+0x72>
 8003f86:	2e06      	cmp	r6, #6
 8003f88:	d126      	bne.n	8003fd8 <_strtod_l+0xb8>
 8003f8a:	2300      	movs	r3, #0
 8003f8c:	3501      	adds	r5, #1
 8003f8e:	9519      	str	r5, [sp, #100]	@ 0x64
 8003f90:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003f92:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8003f94:	2b00      	cmp	r3, #0
 8003f96:	f040 8584 	bne.w	8004aa2 <_strtod_l+0xb82>
 8003f9a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003f9c:	b1bb      	cbz	r3, 8003fce <_strtod_l+0xae>
 8003f9e:	4650      	mov	r0, sl
 8003fa0:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8003fa4:	b01f      	add	sp, #124	@ 0x7c
 8003fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003faa:	2920      	cmp	r1, #32
 8003fac:	d1d0      	bne.n	8003f50 <_strtod_l+0x30>
 8003fae:	3201      	adds	r2, #1
 8003fb0:	e7c3      	b.n	8003f3a <_strtod_l+0x1a>
 8003fb2:	292d      	cmp	r1, #45	@ 0x2d
 8003fb4:	d1cc      	bne.n	8003f50 <_strtod_l+0x30>
 8003fb6:	2101      	movs	r1, #1
 8003fb8:	910b      	str	r1, [sp, #44]	@ 0x2c
 8003fba:	1c51      	adds	r1, r2, #1
 8003fbc:	9119      	str	r1, [sp, #100]	@ 0x64
 8003fbe:	7852      	ldrb	r2, [r2, #1]
 8003fc0:	2a00      	cmp	r2, #0
 8003fc2:	d1c7      	bne.n	8003f54 <_strtod_l+0x34>
 8003fc4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8003fc6:	9419      	str	r4, [sp, #100]	@ 0x64
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	f040 8568 	bne.w	8004a9e <_strtod_l+0xb7e>
 8003fce:	4650      	mov	r0, sl
 8003fd0:	4659      	mov	r1, fp
 8003fd2:	e7e7      	b.n	8003fa4 <_strtod_l+0x84>
 8003fd4:	2100      	movs	r1, #0
 8003fd6:	e7ef      	b.n	8003fb8 <_strtod_l+0x98>
 8003fd8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8003fda:	b13a      	cbz	r2, 8003fec <_strtod_l+0xcc>
 8003fdc:	2135      	movs	r1, #53	@ 0x35
 8003fde:	a81c      	add	r0, sp, #112	@ 0x70
 8003fe0:	f7ff ff36 	bl	8003e50 <__copybits>
 8003fe4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8003fe6:	9805      	ldr	r0, [sp, #20]
 8003fe8:	f7ff fb10 	bl	800360c <_Bfree>
 8003fec:	3e01      	subs	r6, #1
 8003fee:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8003ff0:	2e04      	cmp	r6, #4
 8003ff2:	d806      	bhi.n	8004002 <_strtod_l+0xe2>
 8003ff4:	e8df f006 	tbb	[pc, r6]
 8003ff8:	201d0314 	.word	0x201d0314
 8003ffc:	14          	.byte	0x14
 8003ffd:	00          	.byte	0x00
 8003ffe:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8004002:	05e1      	lsls	r1, r4, #23
 8004004:	bf48      	it	mi
 8004006:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800400a:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800400e:	0d1b      	lsrs	r3, r3, #20
 8004010:	051b      	lsls	r3, r3, #20
 8004012:	2b00      	cmp	r3, #0
 8004014:	d1bd      	bne.n	8003f92 <_strtod_l+0x72>
 8004016:	f001 f89d 	bl	8005154 <__errno>
 800401a:	2322      	movs	r3, #34	@ 0x22
 800401c:	6003      	str	r3, [r0, #0]
 800401e:	e7b8      	b.n	8003f92 <_strtod_l+0x72>
 8004020:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004024:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004028:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800402c:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004030:	e7e7      	b.n	8004002 <_strtod_l+0xe2>
 8004032:	f8df b178 	ldr.w	fp, [pc, #376]	@ 80041ac <_strtod_l+0x28c>
 8004036:	e7e4      	b.n	8004002 <_strtod_l+0xe2>
 8004038:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800403c:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004040:	e7df      	b.n	8004002 <_strtod_l+0xe2>
 8004042:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004044:	1c5a      	adds	r2, r3, #1
 8004046:	9219      	str	r2, [sp, #100]	@ 0x64
 8004048:	785b      	ldrb	r3, [r3, #1]
 800404a:	2b30      	cmp	r3, #48	@ 0x30
 800404c:	d0f9      	beq.n	8004042 <_strtod_l+0x122>
 800404e:	2b00      	cmp	r3, #0
 8004050:	d09f      	beq.n	8003f92 <_strtod_l+0x72>
 8004052:	2301      	movs	r3, #1
 8004054:	9309      	str	r3, [sp, #36]	@ 0x24
 8004056:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004058:	220a      	movs	r2, #10
 800405a:	930c      	str	r3, [sp, #48]	@ 0x30
 800405c:	2300      	movs	r3, #0
 800405e:	461f      	mov	r7, r3
 8004060:	9308      	str	r3, [sp, #32]
 8004062:	930a      	str	r3, [sp, #40]	@ 0x28
 8004064:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004066:	7805      	ldrb	r5, [r0, #0]
 8004068:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800406c:	b2d9      	uxtb	r1, r3
 800406e:	2909      	cmp	r1, #9
 8004070:	d928      	bls.n	80040c4 <_strtod_l+0x1a4>
 8004072:	2201      	movs	r2, #1
 8004074:	494e      	ldr	r1, [pc, #312]	@ (80041b0 <_strtod_l+0x290>)
 8004076:	f001 f828 	bl	80050ca <strncmp>
 800407a:	2800      	cmp	r0, #0
 800407c:	d032      	beq.n	80040e4 <_strtod_l+0x1c4>
 800407e:	2000      	movs	r0, #0
 8004080:	462a      	mov	r2, r5
 8004082:	4681      	mov	r9, r0
 8004084:	463d      	mov	r5, r7
 8004086:	4603      	mov	r3, r0
 8004088:	2a65      	cmp	r2, #101	@ 0x65
 800408a:	d001      	beq.n	8004090 <_strtod_l+0x170>
 800408c:	2a45      	cmp	r2, #69	@ 0x45
 800408e:	d114      	bne.n	80040ba <_strtod_l+0x19a>
 8004090:	b91d      	cbnz	r5, 800409a <_strtod_l+0x17a>
 8004092:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004094:	4302      	orrs	r2, r0
 8004096:	d095      	beq.n	8003fc4 <_strtod_l+0xa4>
 8004098:	2500      	movs	r5, #0
 800409a:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800409c:	1c62      	adds	r2, r4, #1
 800409e:	9219      	str	r2, [sp, #100]	@ 0x64
 80040a0:	7862      	ldrb	r2, [r4, #1]
 80040a2:	2a2b      	cmp	r2, #43	@ 0x2b
 80040a4:	d077      	beq.n	8004196 <_strtod_l+0x276>
 80040a6:	2a2d      	cmp	r2, #45	@ 0x2d
 80040a8:	d07b      	beq.n	80041a2 <_strtod_l+0x282>
 80040aa:	f04f 0c00 	mov.w	ip, #0
 80040ae:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 80040b2:	2909      	cmp	r1, #9
 80040b4:	f240 8082 	bls.w	80041bc <_strtod_l+0x29c>
 80040b8:	9419      	str	r4, [sp, #100]	@ 0x64
 80040ba:	f04f 0800 	mov.w	r8, #0
 80040be:	e0a2      	b.n	8004206 <_strtod_l+0x2e6>
 80040c0:	2300      	movs	r3, #0
 80040c2:	e7c7      	b.n	8004054 <_strtod_l+0x134>
 80040c4:	2f08      	cmp	r7, #8
 80040c6:	bfd5      	itete	le
 80040c8:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 80040ca:	9908      	ldrgt	r1, [sp, #32]
 80040cc:	fb02 3301 	mlale	r3, r2, r1, r3
 80040d0:	fb02 3301 	mlagt	r3, r2, r1, r3
 80040d4:	f100 0001 	add.w	r0, r0, #1
 80040d8:	bfd4      	ite	le
 80040da:	930a      	strle	r3, [sp, #40]	@ 0x28
 80040dc:	9308      	strgt	r3, [sp, #32]
 80040de:	3701      	adds	r7, #1
 80040e0:	9019      	str	r0, [sp, #100]	@ 0x64
 80040e2:	e7bf      	b.n	8004064 <_strtod_l+0x144>
 80040e4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80040e6:	1c5a      	adds	r2, r3, #1
 80040e8:	9219      	str	r2, [sp, #100]	@ 0x64
 80040ea:	785a      	ldrb	r2, [r3, #1]
 80040ec:	b37f      	cbz	r7, 800414e <_strtod_l+0x22e>
 80040ee:	4681      	mov	r9, r0
 80040f0:	463d      	mov	r5, r7
 80040f2:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 80040f6:	2b09      	cmp	r3, #9
 80040f8:	d912      	bls.n	8004120 <_strtod_l+0x200>
 80040fa:	2301      	movs	r3, #1
 80040fc:	e7c4      	b.n	8004088 <_strtod_l+0x168>
 80040fe:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004100:	3001      	adds	r0, #1
 8004102:	1c5a      	adds	r2, r3, #1
 8004104:	9219      	str	r2, [sp, #100]	@ 0x64
 8004106:	785a      	ldrb	r2, [r3, #1]
 8004108:	2a30      	cmp	r2, #48	@ 0x30
 800410a:	d0f8      	beq.n	80040fe <_strtod_l+0x1de>
 800410c:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8004110:	2b08      	cmp	r3, #8
 8004112:	f200 84cb 	bhi.w	8004aac <_strtod_l+0xb8c>
 8004116:	4681      	mov	r9, r0
 8004118:	2000      	movs	r0, #0
 800411a:	4605      	mov	r5, r0
 800411c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800411e:	930c      	str	r3, [sp, #48]	@ 0x30
 8004120:	3a30      	subs	r2, #48	@ 0x30
 8004122:	f100 0301 	add.w	r3, r0, #1
 8004126:	d02a      	beq.n	800417e <_strtod_l+0x25e>
 8004128:	4499      	add	r9, r3
 800412a:	210a      	movs	r1, #10
 800412c:	462b      	mov	r3, r5
 800412e:	eb00 0c05 	add.w	ip, r0, r5
 8004132:	4563      	cmp	r3, ip
 8004134:	d10d      	bne.n	8004152 <_strtod_l+0x232>
 8004136:	1c69      	adds	r1, r5, #1
 8004138:	4401      	add	r1, r0
 800413a:	4428      	add	r0, r5
 800413c:	2808      	cmp	r0, #8
 800413e:	dc16      	bgt.n	800416e <_strtod_l+0x24e>
 8004140:	230a      	movs	r3, #10
 8004142:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004144:	fb03 2300 	mla	r3, r3, r0, r2
 8004148:	930a      	str	r3, [sp, #40]	@ 0x28
 800414a:	2300      	movs	r3, #0
 800414c:	e018      	b.n	8004180 <_strtod_l+0x260>
 800414e:	4638      	mov	r0, r7
 8004150:	e7da      	b.n	8004108 <_strtod_l+0x1e8>
 8004152:	2b08      	cmp	r3, #8
 8004154:	f103 0301 	add.w	r3, r3, #1
 8004158:	dc03      	bgt.n	8004162 <_strtod_l+0x242>
 800415a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800415c:	434e      	muls	r6, r1
 800415e:	960a      	str	r6, [sp, #40]	@ 0x28
 8004160:	e7e7      	b.n	8004132 <_strtod_l+0x212>
 8004162:	2b10      	cmp	r3, #16
 8004164:	bfde      	ittt	le
 8004166:	9e08      	ldrle	r6, [sp, #32]
 8004168:	434e      	mulle	r6, r1
 800416a:	9608      	strle	r6, [sp, #32]
 800416c:	e7e1      	b.n	8004132 <_strtod_l+0x212>
 800416e:	280f      	cmp	r0, #15
 8004170:	dceb      	bgt.n	800414a <_strtod_l+0x22a>
 8004172:	230a      	movs	r3, #10
 8004174:	9808      	ldr	r0, [sp, #32]
 8004176:	fb03 2300 	mla	r3, r3, r0, r2
 800417a:	9308      	str	r3, [sp, #32]
 800417c:	e7e5      	b.n	800414a <_strtod_l+0x22a>
 800417e:	4629      	mov	r1, r5
 8004180:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004182:	460d      	mov	r5, r1
 8004184:	1c50      	adds	r0, r2, #1
 8004186:	9019      	str	r0, [sp, #100]	@ 0x64
 8004188:	7852      	ldrb	r2, [r2, #1]
 800418a:	4618      	mov	r0, r3
 800418c:	e7b1      	b.n	80040f2 <_strtod_l+0x1d2>
 800418e:	f04f 0900 	mov.w	r9, #0
 8004192:	2301      	movs	r3, #1
 8004194:	e77d      	b.n	8004092 <_strtod_l+0x172>
 8004196:	f04f 0c00 	mov.w	ip, #0
 800419a:	1ca2      	adds	r2, r4, #2
 800419c:	9219      	str	r2, [sp, #100]	@ 0x64
 800419e:	78a2      	ldrb	r2, [r4, #2]
 80041a0:	e785      	b.n	80040ae <_strtod_l+0x18e>
 80041a2:	f04f 0c01 	mov.w	ip, #1
 80041a6:	e7f8      	b.n	800419a <_strtod_l+0x27a>
 80041a8:	08005f48 	.word	0x08005f48
 80041ac:	7ff00000 	.word	0x7ff00000
 80041b0:	08005f30 	.word	0x08005f30
 80041b4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80041b6:	1c51      	adds	r1, r2, #1
 80041b8:	9119      	str	r1, [sp, #100]	@ 0x64
 80041ba:	7852      	ldrb	r2, [r2, #1]
 80041bc:	2a30      	cmp	r2, #48	@ 0x30
 80041be:	d0f9      	beq.n	80041b4 <_strtod_l+0x294>
 80041c0:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 80041c4:	2908      	cmp	r1, #8
 80041c6:	f63f af78 	bhi.w	80040ba <_strtod_l+0x19a>
 80041ca:	f04f 080a 	mov.w	r8, #10
 80041ce:	3a30      	subs	r2, #48	@ 0x30
 80041d0:	920e      	str	r2, [sp, #56]	@ 0x38
 80041d2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80041d4:	920f      	str	r2, [sp, #60]	@ 0x3c
 80041d6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80041d8:	1c56      	adds	r6, r2, #1
 80041da:	9619      	str	r6, [sp, #100]	@ 0x64
 80041dc:	7852      	ldrb	r2, [r2, #1]
 80041de:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 80041e2:	f1be 0f09 	cmp.w	lr, #9
 80041e6:	d939      	bls.n	800425c <_strtod_l+0x33c>
 80041e8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80041ea:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 80041ee:	1a76      	subs	r6, r6, r1
 80041f0:	2e08      	cmp	r6, #8
 80041f2:	dc03      	bgt.n	80041fc <_strtod_l+0x2dc>
 80041f4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80041f6:	4588      	cmp	r8, r1
 80041f8:	bfa8      	it	ge
 80041fa:	4688      	movge	r8, r1
 80041fc:	f1bc 0f00 	cmp.w	ip, #0
 8004200:	d001      	beq.n	8004206 <_strtod_l+0x2e6>
 8004202:	f1c8 0800 	rsb	r8, r8, #0
 8004206:	2d00      	cmp	r5, #0
 8004208:	d14e      	bne.n	80042a8 <_strtod_l+0x388>
 800420a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800420c:	4308      	orrs	r0, r1
 800420e:	f47f aec0 	bne.w	8003f92 <_strtod_l+0x72>
 8004212:	2b00      	cmp	r3, #0
 8004214:	f47f aed6 	bne.w	8003fc4 <_strtod_l+0xa4>
 8004218:	2a69      	cmp	r2, #105	@ 0x69
 800421a:	d028      	beq.n	800426e <_strtod_l+0x34e>
 800421c:	dc25      	bgt.n	800426a <_strtod_l+0x34a>
 800421e:	2a49      	cmp	r2, #73	@ 0x49
 8004220:	d025      	beq.n	800426e <_strtod_l+0x34e>
 8004222:	2a4e      	cmp	r2, #78	@ 0x4e
 8004224:	f47f aece 	bne.w	8003fc4 <_strtod_l+0xa4>
 8004228:	499a      	ldr	r1, [pc, #616]	@ (8004494 <_strtod_l+0x574>)
 800422a:	a819      	add	r0, sp, #100	@ 0x64
 800422c:	f001 fa68 	bl	8005700 <__match>
 8004230:	2800      	cmp	r0, #0
 8004232:	f43f aec7 	beq.w	8003fc4 <_strtod_l+0xa4>
 8004236:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004238:	781b      	ldrb	r3, [r3, #0]
 800423a:	2b28      	cmp	r3, #40	@ 0x28
 800423c:	d12e      	bne.n	800429c <_strtod_l+0x37c>
 800423e:	4996      	ldr	r1, [pc, #600]	@ (8004498 <_strtod_l+0x578>)
 8004240:	aa1c      	add	r2, sp, #112	@ 0x70
 8004242:	a819      	add	r0, sp, #100	@ 0x64
 8004244:	f001 fa70 	bl	8005728 <__hexnan>
 8004248:	2805      	cmp	r0, #5
 800424a:	d127      	bne.n	800429c <_strtod_l+0x37c>
 800424c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800424e:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8004252:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8004256:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800425a:	e69a      	b.n	8003f92 <_strtod_l+0x72>
 800425c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800425e:	fb08 2101 	mla	r1, r8, r1, r2
 8004262:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8004266:	920e      	str	r2, [sp, #56]	@ 0x38
 8004268:	e7b5      	b.n	80041d6 <_strtod_l+0x2b6>
 800426a:	2a6e      	cmp	r2, #110	@ 0x6e
 800426c:	e7da      	b.n	8004224 <_strtod_l+0x304>
 800426e:	498b      	ldr	r1, [pc, #556]	@ (800449c <_strtod_l+0x57c>)
 8004270:	a819      	add	r0, sp, #100	@ 0x64
 8004272:	f001 fa45 	bl	8005700 <__match>
 8004276:	2800      	cmp	r0, #0
 8004278:	f43f aea4 	beq.w	8003fc4 <_strtod_l+0xa4>
 800427c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800427e:	4988      	ldr	r1, [pc, #544]	@ (80044a0 <_strtod_l+0x580>)
 8004280:	3b01      	subs	r3, #1
 8004282:	a819      	add	r0, sp, #100	@ 0x64
 8004284:	9319      	str	r3, [sp, #100]	@ 0x64
 8004286:	f001 fa3b 	bl	8005700 <__match>
 800428a:	b910      	cbnz	r0, 8004292 <_strtod_l+0x372>
 800428c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800428e:	3301      	adds	r3, #1
 8004290:	9319      	str	r3, [sp, #100]	@ 0x64
 8004292:	f04f 0a00 	mov.w	sl, #0
 8004296:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 80044a4 <_strtod_l+0x584>
 800429a:	e67a      	b.n	8003f92 <_strtod_l+0x72>
 800429c:	4882      	ldr	r0, [pc, #520]	@ (80044a8 <_strtod_l+0x588>)
 800429e:	f000 ff6d 	bl	800517c <nan>
 80042a2:	4682      	mov	sl, r0
 80042a4:	468b      	mov	fp, r1
 80042a6:	e674      	b.n	8003f92 <_strtod_l+0x72>
 80042a8:	eba8 0309 	sub.w	r3, r8, r9
 80042ac:	2f00      	cmp	r7, #0
 80042ae:	bf08      	it	eq
 80042b0:	462f      	moveq	r7, r5
 80042b2:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80042b4:	2d10      	cmp	r5, #16
 80042b6:	462c      	mov	r4, r5
 80042b8:	9309      	str	r3, [sp, #36]	@ 0x24
 80042ba:	bfa8      	it	ge
 80042bc:	2410      	movge	r4, #16
 80042be:	f7fc f891 	bl	80003e4 <__aeabi_ui2d>
 80042c2:	2d09      	cmp	r5, #9
 80042c4:	4682      	mov	sl, r0
 80042c6:	468b      	mov	fp, r1
 80042c8:	dc11      	bgt.n	80042ee <_strtod_l+0x3ce>
 80042ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80042cc:	2b00      	cmp	r3, #0
 80042ce:	f43f ae60 	beq.w	8003f92 <_strtod_l+0x72>
 80042d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80042d4:	dd76      	ble.n	80043c4 <_strtod_l+0x4a4>
 80042d6:	2b16      	cmp	r3, #22
 80042d8:	dc5d      	bgt.n	8004396 <_strtod_l+0x476>
 80042da:	4974      	ldr	r1, [pc, #464]	@ (80044ac <_strtod_l+0x58c>)
 80042dc:	4652      	mov	r2, sl
 80042de:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80042e2:	465b      	mov	r3, fp
 80042e4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80042e8:	f7fc f8f6 	bl	80004d8 <__aeabi_dmul>
 80042ec:	e7d9      	b.n	80042a2 <_strtod_l+0x382>
 80042ee:	4b6f      	ldr	r3, [pc, #444]	@ (80044ac <_strtod_l+0x58c>)
 80042f0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80042f4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 80042f8:	f7fc f8ee 	bl	80004d8 <__aeabi_dmul>
 80042fc:	4682      	mov	sl, r0
 80042fe:	9808      	ldr	r0, [sp, #32]
 8004300:	468b      	mov	fp, r1
 8004302:	f7fc f86f 	bl	80003e4 <__aeabi_ui2d>
 8004306:	4602      	mov	r2, r0
 8004308:	460b      	mov	r3, r1
 800430a:	4650      	mov	r0, sl
 800430c:	4659      	mov	r1, fp
 800430e:	f7fb ff2d 	bl	800016c <__adddf3>
 8004312:	2d0f      	cmp	r5, #15
 8004314:	4682      	mov	sl, r0
 8004316:	468b      	mov	fp, r1
 8004318:	ddd7      	ble.n	80042ca <_strtod_l+0x3aa>
 800431a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800431c:	1b2c      	subs	r4, r5, r4
 800431e:	441c      	add	r4, r3
 8004320:	2c00      	cmp	r4, #0
 8004322:	f340 8096 	ble.w	8004452 <_strtod_l+0x532>
 8004326:	f014 030f 	ands.w	r3, r4, #15
 800432a:	d00a      	beq.n	8004342 <_strtod_l+0x422>
 800432c:	495f      	ldr	r1, [pc, #380]	@ (80044ac <_strtod_l+0x58c>)
 800432e:	4652      	mov	r2, sl
 8004330:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004334:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004338:	465b      	mov	r3, fp
 800433a:	f7fc f8cd 	bl	80004d8 <__aeabi_dmul>
 800433e:	4682      	mov	sl, r0
 8004340:	468b      	mov	fp, r1
 8004342:	f034 040f 	bics.w	r4, r4, #15
 8004346:	d073      	beq.n	8004430 <_strtod_l+0x510>
 8004348:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800434c:	dd48      	ble.n	80043e0 <_strtod_l+0x4c0>
 800434e:	2400      	movs	r4, #0
 8004350:	46a0      	mov	r8, r4
 8004352:	46a1      	mov	r9, r4
 8004354:	940a      	str	r4, [sp, #40]	@ 0x28
 8004356:	2322      	movs	r3, #34	@ 0x22
 8004358:	f04f 0a00 	mov.w	sl, #0
 800435c:	9a05      	ldr	r2, [sp, #20]
 800435e:	f8df b144 	ldr.w	fp, [pc, #324]	@ 80044a4 <_strtod_l+0x584>
 8004362:	6013      	str	r3, [r2, #0]
 8004364:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004366:	2b00      	cmp	r3, #0
 8004368:	f43f ae13 	beq.w	8003f92 <_strtod_l+0x72>
 800436c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800436e:	9805      	ldr	r0, [sp, #20]
 8004370:	f7ff f94c 	bl	800360c <_Bfree>
 8004374:	4649      	mov	r1, r9
 8004376:	9805      	ldr	r0, [sp, #20]
 8004378:	f7ff f948 	bl	800360c <_Bfree>
 800437c:	4641      	mov	r1, r8
 800437e:	9805      	ldr	r0, [sp, #20]
 8004380:	f7ff f944 	bl	800360c <_Bfree>
 8004384:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004386:	9805      	ldr	r0, [sp, #20]
 8004388:	f7ff f940 	bl	800360c <_Bfree>
 800438c:	4621      	mov	r1, r4
 800438e:	9805      	ldr	r0, [sp, #20]
 8004390:	f7ff f93c 	bl	800360c <_Bfree>
 8004394:	e5fd      	b.n	8003f92 <_strtod_l+0x72>
 8004396:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004398:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800439c:	4293      	cmp	r3, r2
 800439e:	dbbc      	blt.n	800431a <_strtod_l+0x3fa>
 80043a0:	4c42      	ldr	r4, [pc, #264]	@ (80044ac <_strtod_l+0x58c>)
 80043a2:	f1c5 050f 	rsb	r5, r5, #15
 80043a6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80043aa:	4652      	mov	r2, sl
 80043ac:	e9d1 0100 	ldrd	r0, r1, [r1]
 80043b0:	465b      	mov	r3, fp
 80043b2:	f7fc f891 	bl	80004d8 <__aeabi_dmul>
 80043b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80043b8:	1b5d      	subs	r5, r3, r5
 80043ba:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80043be:	e9d4 2300 	ldrd	r2, r3, [r4]
 80043c2:	e791      	b.n	80042e8 <_strtod_l+0x3c8>
 80043c4:	3316      	adds	r3, #22
 80043c6:	dba8      	blt.n	800431a <_strtod_l+0x3fa>
 80043c8:	4b38      	ldr	r3, [pc, #224]	@ (80044ac <_strtod_l+0x58c>)
 80043ca:	eba9 0808 	sub.w	r8, r9, r8
 80043ce:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 80043d2:	4650      	mov	r0, sl
 80043d4:	e9d8 2300 	ldrd	r2, r3, [r8]
 80043d8:	4659      	mov	r1, fp
 80043da:	f7fc f9a7 	bl	800072c <__aeabi_ddiv>
 80043de:	e760      	b.n	80042a2 <_strtod_l+0x382>
 80043e0:	4b33      	ldr	r3, [pc, #204]	@ (80044b0 <_strtod_l+0x590>)
 80043e2:	4650      	mov	r0, sl
 80043e4:	9308      	str	r3, [sp, #32]
 80043e6:	2300      	movs	r3, #0
 80043e8:	4659      	mov	r1, fp
 80043ea:	461e      	mov	r6, r3
 80043ec:	1124      	asrs	r4, r4, #4
 80043ee:	2c01      	cmp	r4, #1
 80043f0:	dc21      	bgt.n	8004436 <_strtod_l+0x516>
 80043f2:	b10b      	cbz	r3, 80043f8 <_strtod_l+0x4d8>
 80043f4:	4682      	mov	sl, r0
 80043f6:	468b      	mov	fp, r1
 80043f8:	492d      	ldr	r1, [pc, #180]	@ (80044b0 <_strtod_l+0x590>)
 80043fa:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 80043fe:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004402:	4652      	mov	r2, sl
 8004404:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004408:	465b      	mov	r3, fp
 800440a:	f7fc f865 	bl	80004d8 <__aeabi_dmul>
 800440e:	4b25      	ldr	r3, [pc, #148]	@ (80044a4 <_strtod_l+0x584>)
 8004410:	460a      	mov	r2, r1
 8004412:	400b      	ands	r3, r1
 8004414:	4927      	ldr	r1, [pc, #156]	@ (80044b4 <_strtod_l+0x594>)
 8004416:	4682      	mov	sl, r0
 8004418:	428b      	cmp	r3, r1
 800441a:	d898      	bhi.n	800434e <_strtod_l+0x42e>
 800441c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004420:	428b      	cmp	r3, r1
 8004422:	bf86      	itte	hi
 8004424:	f04f 3aff 	movhi.w	sl, #4294967295	@ 0xffffffff
 8004428:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 80044b8 <_strtod_l+0x598>
 800442c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8004430:	2300      	movs	r3, #0
 8004432:	9308      	str	r3, [sp, #32]
 8004434:	e07a      	b.n	800452c <_strtod_l+0x60c>
 8004436:	07e2      	lsls	r2, r4, #31
 8004438:	d505      	bpl.n	8004446 <_strtod_l+0x526>
 800443a:	9b08      	ldr	r3, [sp, #32]
 800443c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004440:	f7fc f84a 	bl	80004d8 <__aeabi_dmul>
 8004444:	2301      	movs	r3, #1
 8004446:	9a08      	ldr	r2, [sp, #32]
 8004448:	3601      	adds	r6, #1
 800444a:	3208      	adds	r2, #8
 800444c:	1064      	asrs	r4, r4, #1
 800444e:	9208      	str	r2, [sp, #32]
 8004450:	e7cd      	b.n	80043ee <_strtod_l+0x4ce>
 8004452:	d0ed      	beq.n	8004430 <_strtod_l+0x510>
 8004454:	4264      	negs	r4, r4
 8004456:	f014 020f 	ands.w	r2, r4, #15
 800445a:	d00a      	beq.n	8004472 <_strtod_l+0x552>
 800445c:	4b13      	ldr	r3, [pc, #76]	@ (80044ac <_strtod_l+0x58c>)
 800445e:	4650      	mov	r0, sl
 8004460:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004464:	4659      	mov	r1, fp
 8004466:	e9d3 2300 	ldrd	r2, r3, [r3]
 800446a:	f7fc f95f 	bl	800072c <__aeabi_ddiv>
 800446e:	4682      	mov	sl, r0
 8004470:	468b      	mov	fp, r1
 8004472:	1124      	asrs	r4, r4, #4
 8004474:	d0dc      	beq.n	8004430 <_strtod_l+0x510>
 8004476:	2c1f      	cmp	r4, #31
 8004478:	dd20      	ble.n	80044bc <_strtod_l+0x59c>
 800447a:	2400      	movs	r4, #0
 800447c:	46a0      	mov	r8, r4
 800447e:	46a1      	mov	r9, r4
 8004480:	940a      	str	r4, [sp, #40]	@ 0x28
 8004482:	2322      	movs	r3, #34	@ 0x22
 8004484:	9a05      	ldr	r2, [sp, #20]
 8004486:	f04f 0a00 	mov.w	sl, #0
 800448a:	f04f 0b00 	mov.w	fp, #0
 800448e:	6013      	str	r3, [r2, #0]
 8004490:	e768      	b.n	8004364 <_strtod_l+0x444>
 8004492:	bf00      	nop
 8004494:	08005d22 	.word	0x08005d22
 8004498:	08005f34 	.word	0x08005f34
 800449c:	08005d1a 	.word	0x08005d1a
 80044a0:	08005d51 	.word	0x08005d51
 80044a4:	7ff00000 	.word	0x7ff00000
 80044a8:	080060dd 	.word	0x080060dd
 80044ac:	08005e68 	.word	0x08005e68
 80044b0:	08005e40 	.word	0x08005e40
 80044b4:	7ca00000 	.word	0x7ca00000
 80044b8:	7fefffff 	.word	0x7fefffff
 80044bc:	f014 0310 	ands.w	r3, r4, #16
 80044c0:	bf18      	it	ne
 80044c2:	236a      	movne	r3, #106	@ 0x6a
 80044c4:	4650      	mov	r0, sl
 80044c6:	9308      	str	r3, [sp, #32]
 80044c8:	4659      	mov	r1, fp
 80044ca:	2300      	movs	r3, #0
 80044cc:	4ea9      	ldr	r6, [pc, #676]	@ (8004774 <_strtod_l+0x854>)
 80044ce:	07e2      	lsls	r2, r4, #31
 80044d0:	d504      	bpl.n	80044dc <_strtod_l+0x5bc>
 80044d2:	e9d6 2300 	ldrd	r2, r3, [r6]
 80044d6:	f7fb ffff 	bl	80004d8 <__aeabi_dmul>
 80044da:	2301      	movs	r3, #1
 80044dc:	1064      	asrs	r4, r4, #1
 80044de:	f106 0608 	add.w	r6, r6, #8
 80044e2:	d1f4      	bne.n	80044ce <_strtod_l+0x5ae>
 80044e4:	b10b      	cbz	r3, 80044ea <_strtod_l+0x5ca>
 80044e6:	4682      	mov	sl, r0
 80044e8:	468b      	mov	fp, r1
 80044ea:	9b08      	ldr	r3, [sp, #32]
 80044ec:	b1b3      	cbz	r3, 800451c <_strtod_l+0x5fc>
 80044ee:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80044f2:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	4659      	mov	r1, fp
 80044fa:	dd0f      	ble.n	800451c <_strtod_l+0x5fc>
 80044fc:	2b1f      	cmp	r3, #31
 80044fe:	dd57      	ble.n	80045b0 <_strtod_l+0x690>
 8004500:	2b34      	cmp	r3, #52	@ 0x34
 8004502:	bfd8      	it	le
 8004504:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 8004508:	f04f 0a00 	mov.w	sl, #0
 800450c:	bfcf      	iteee	gt
 800450e:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004512:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8004516:	4093      	lslle	r3, r2
 8004518:	ea03 0b01 	andle.w	fp, r3, r1
 800451c:	2200      	movs	r2, #0
 800451e:	2300      	movs	r3, #0
 8004520:	4650      	mov	r0, sl
 8004522:	4659      	mov	r1, fp
 8004524:	f7fc fa40 	bl	80009a8 <__aeabi_dcmpeq>
 8004528:	2800      	cmp	r0, #0
 800452a:	d1a6      	bne.n	800447a <_strtod_l+0x55a>
 800452c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800452e:	463a      	mov	r2, r7
 8004530:	9300      	str	r3, [sp, #0]
 8004532:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004534:	462b      	mov	r3, r5
 8004536:	9805      	ldr	r0, [sp, #20]
 8004538:	f7ff f8d0 	bl	80036dc <__s2b>
 800453c:	900a      	str	r0, [sp, #40]	@ 0x28
 800453e:	2800      	cmp	r0, #0
 8004540:	f43f af05 	beq.w	800434e <_strtod_l+0x42e>
 8004544:	2400      	movs	r4, #0
 8004546:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004548:	eba9 0308 	sub.w	r3, r9, r8
 800454c:	2a00      	cmp	r2, #0
 800454e:	bfa8      	it	ge
 8004550:	2300      	movge	r3, #0
 8004552:	46a0      	mov	r8, r4
 8004554:	9312      	str	r3, [sp, #72]	@ 0x48
 8004556:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800455a:	9316      	str	r3, [sp, #88]	@ 0x58
 800455c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800455e:	9805      	ldr	r0, [sp, #20]
 8004560:	6859      	ldr	r1, [r3, #4]
 8004562:	f7ff f813 	bl	800358c <_Balloc>
 8004566:	4681      	mov	r9, r0
 8004568:	2800      	cmp	r0, #0
 800456a:	f43f aef4 	beq.w	8004356 <_strtod_l+0x436>
 800456e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004570:	300c      	adds	r0, #12
 8004572:	691a      	ldr	r2, [r3, #16]
 8004574:	f103 010c 	add.w	r1, r3, #12
 8004578:	3202      	adds	r2, #2
 800457a:	0092      	lsls	r2, r2, #2
 800457c:	f000 fdf0 	bl	8005160 <memcpy>
 8004580:	ab1c      	add	r3, sp, #112	@ 0x70
 8004582:	9301      	str	r3, [sp, #4]
 8004584:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004586:	9300      	str	r3, [sp, #0]
 8004588:	4652      	mov	r2, sl
 800458a:	465b      	mov	r3, fp
 800458c:	9805      	ldr	r0, [sp, #20]
 800458e:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8004592:	f7ff fbd5 	bl	8003d40 <__d2b>
 8004596:	901a      	str	r0, [sp, #104]	@ 0x68
 8004598:	2800      	cmp	r0, #0
 800459a:	f43f aedc 	beq.w	8004356 <_strtod_l+0x436>
 800459e:	2101      	movs	r1, #1
 80045a0:	9805      	ldr	r0, [sp, #20]
 80045a2:	f7ff f931 	bl	8003808 <__i2b>
 80045a6:	4680      	mov	r8, r0
 80045a8:	b948      	cbnz	r0, 80045be <_strtod_l+0x69e>
 80045aa:	f04f 0800 	mov.w	r8, #0
 80045ae:	e6d2      	b.n	8004356 <_strtod_l+0x436>
 80045b0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80045b4:	fa02 f303 	lsl.w	r3, r2, r3
 80045b8:	ea03 0a0a 	and.w	sl, r3, sl
 80045bc:	e7ae      	b.n	800451c <_strtod_l+0x5fc>
 80045be:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80045c0:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80045c2:	2d00      	cmp	r5, #0
 80045c4:	bfab      	itete	ge
 80045c6:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80045c8:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80045ca:	18ef      	addge	r7, r5, r3
 80045cc:	1b5e      	sublt	r6, r3, r5
 80045ce:	9b08      	ldr	r3, [sp, #32]
 80045d0:	bfa8      	it	ge
 80045d2:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80045d4:	eba5 0503 	sub.w	r5, r5, r3
 80045d8:	4415      	add	r5, r2
 80045da:	4b67      	ldr	r3, [pc, #412]	@ (8004778 <_strtod_l+0x858>)
 80045dc:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 80045e0:	bfb8      	it	lt
 80045e2:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80045e4:	429d      	cmp	r5, r3
 80045e6:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80045ea:	da50      	bge.n	800468e <_strtod_l+0x76e>
 80045ec:	1b5b      	subs	r3, r3, r5
 80045ee:	2b1f      	cmp	r3, #31
 80045f0:	f04f 0101 	mov.w	r1, #1
 80045f4:	eba2 0203 	sub.w	r2, r2, r3
 80045f8:	dc3d      	bgt.n	8004676 <_strtod_l+0x756>
 80045fa:	fa01 f303 	lsl.w	r3, r1, r3
 80045fe:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004600:	2300      	movs	r3, #0
 8004602:	9310      	str	r3, [sp, #64]	@ 0x40
 8004604:	18bd      	adds	r5, r7, r2
 8004606:	9b08      	ldr	r3, [sp, #32]
 8004608:	42af      	cmp	r7, r5
 800460a:	4416      	add	r6, r2
 800460c:	441e      	add	r6, r3
 800460e:	463b      	mov	r3, r7
 8004610:	bfa8      	it	ge
 8004612:	462b      	movge	r3, r5
 8004614:	42b3      	cmp	r3, r6
 8004616:	bfa8      	it	ge
 8004618:	4633      	movge	r3, r6
 800461a:	2b00      	cmp	r3, #0
 800461c:	bfc2      	ittt	gt
 800461e:	1aed      	subgt	r5, r5, r3
 8004620:	1af6      	subgt	r6, r6, r3
 8004622:	1aff      	subgt	r7, r7, r3
 8004624:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004626:	2b00      	cmp	r3, #0
 8004628:	dd16      	ble.n	8004658 <_strtod_l+0x738>
 800462a:	4641      	mov	r1, r8
 800462c:	461a      	mov	r2, r3
 800462e:	9805      	ldr	r0, [sp, #20]
 8004630:	f7ff f9a8 	bl	8003984 <__pow5mult>
 8004634:	4680      	mov	r8, r0
 8004636:	2800      	cmp	r0, #0
 8004638:	d0b7      	beq.n	80045aa <_strtod_l+0x68a>
 800463a:	4601      	mov	r1, r0
 800463c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800463e:	9805      	ldr	r0, [sp, #20]
 8004640:	f7ff f8f8 	bl	8003834 <__multiply>
 8004644:	900e      	str	r0, [sp, #56]	@ 0x38
 8004646:	2800      	cmp	r0, #0
 8004648:	f43f ae85 	beq.w	8004356 <_strtod_l+0x436>
 800464c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800464e:	9805      	ldr	r0, [sp, #20]
 8004650:	f7fe ffdc 	bl	800360c <_Bfree>
 8004654:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004656:	931a      	str	r3, [sp, #104]	@ 0x68
 8004658:	2d00      	cmp	r5, #0
 800465a:	dc1d      	bgt.n	8004698 <_strtod_l+0x778>
 800465c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800465e:	2b00      	cmp	r3, #0
 8004660:	dd23      	ble.n	80046aa <_strtod_l+0x78a>
 8004662:	4649      	mov	r1, r9
 8004664:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8004666:	9805      	ldr	r0, [sp, #20]
 8004668:	f7ff f98c 	bl	8003984 <__pow5mult>
 800466c:	4681      	mov	r9, r0
 800466e:	b9e0      	cbnz	r0, 80046aa <_strtod_l+0x78a>
 8004670:	f04f 0900 	mov.w	r9, #0
 8004674:	e66f      	b.n	8004356 <_strtod_l+0x436>
 8004676:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800467a:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800467e:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8004682:	35e2      	adds	r5, #226	@ 0xe2
 8004684:	fa01 f305 	lsl.w	r3, r1, r5
 8004688:	9310      	str	r3, [sp, #64]	@ 0x40
 800468a:	9113      	str	r1, [sp, #76]	@ 0x4c
 800468c:	e7ba      	b.n	8004604 <_strtod_l+0x6e4>
 800468e:	2300      	movs	r3, #0
 8004690:	9310      	str	r3, [sp, #64]	@ 0x40
 8004692:	2301      	movs	r3, #1
 8004694:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004696:	e7b5      	b.n	8004604 <_strtod_l+0x6e4>
 8004698:	462a      	mov	r2, r5
 800469a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800469c:	9805      	ldr	r0, [sp, #20]
 800469e:	f7ff f9cb 	bl	8003a38 <__lshift>
 80046a2:	901a      	str	r0, [sp, #104]	@ 0x68
 80046a4:	2800      	cmp	r0, #0
 80046a6:	d1d9      	bne.n	800465c <_strtod_l+0x73c>
 80046a8:	e655      	b.n	8004356 <_strtod_l+0x436>
 80046aa:	2e00      	cmp	r6, #0
 80046ac:	dd07      	ble.n	80046be <_strtod_l+0x79e>
 80046ae:	4649      	mov	r1, r9
 80046b0:	4632      	mov	r2, r6
 80046b2:	9805      	ldr	r0, [sp, #20]
 80046b4:	f7ff f9c0 	bl	8003a38 <__lshift>
 80046b8:	4681      	mov	r9, r0
 80046ba:	2800      	cmp	r0, #0
 80046bc:	d0d8      	beq.n	8004670 <_strtod_l+0x750>
 80046be:	2f00      	cmp	r7, #0
 80046c0:	dd08      	ble.n	80046d4 <_strtod_l+0x7b4>
 80046c2:	4641      	mov	r1, r8
 80046c4:	463a      	mov	r2, r7
 80046c6:	9805      	ldr	r0, [sp, #20]
 80046c8:	f7ff f9b6 	bl	8003a38 <__lshift>
 80046cc:	4680      	mov	r8, r0
 80046ce:	2800      	cmp	r0, #0
 80046d0:	f43f ae41 	beq.w	8004356 <_strtod_l+0x436>
 80046d4:	464a      	mov	r2, r9
 80046d6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80046d8:	9805      	ldr	r0, [sp, #20]
 80046da:	f7ff fa35 	bl	8003b48 <__mdiff>
 80046de:	4604      	mov	r4, r0
 80046e0:	2800      	cmp	r0, #0
 80046e2:	f43f ae38 	beq.w	8004356 <_strtod_l+0x436>
 80046e6:	68c3      	ldr	r3, [r0, #12]
 80046e8:	4641      	mov	r1, r8
 80046ea:	930f      	str	r3, [sp, #60]	@ 0x3c
 80046ec:	2300      	movs	r3, #0
 80046ee:	60c3      	str	r3, [r0, #12]
 80046f0:	f7ff fa0e 	bl	8003b10 <__mcmp>
 80046f4:	2800      	cmp	r0, #0
 80046f6:	da45      	bge.n	8004784 <_strtod_l+0x864>
 80046f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80046fa:	ea53 030a 	orrs.w	r3, r3, sl
 80046fe:	d16b      	bne.n	80047d8 <_strtod_l+0x8b8>
 8004700:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004704:	2b00      	cmp	r3, #0
 8004706:	d167      	bne.n	80047d8 <_strtod_l+0x8b8>
 8004708:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800470c:	0d1b      	lsrs	r3, r3, #20
 800470e:	051b      	lsls	r3, r3, #20
 8004710:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004714:	d960      	bls.n	80047d8 <_strtod_l+0x8b8>
 8004716:	6963      	ldr	r3, [r4, #20]
 8004718:	b913      	cbnz	r3, 8004720 <_strtod_l+0x800>
 800471a:	6923      	ldr	r3, [r4, #16]
 800471c:	2b01      	cmp	r3, #1
 800471e:	dd5b      	ble.n	80047d8 <_strtod_l+0x8b8>
 8004720:	4621      	mov	r1, r4
 8004722:	2201      	movs	r2, #1
 8004724:	9805      	ldr	r0, [sp, #20]
 8004726:	f7ff f987 	bl	8003a38 <__lshift>
 800472a:	4641      	mov	r1, r8
 800472c:	4604      	mov	r4, r0
 800472e:	f7ff f9ef 	bl	8003b10 <__mcmp>
 8004732:	2800      	cmp	r0, #0
 8004734:	dd50      	ble.n	80047d8 <_strtod_l+0x8b8>
 8004736:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800473a:	9a08      	ldr	r2, [sp, #32]
 800473c:	0d1b      	lsrs	r3, r3, #20
 800473e:	051b      	lsls	r3, r3, #20
 8004740:	2a00      	cmp	r2, #0
 8004742:	d06a      	beq.n	800481a <_strtod_l+0x8fa>
 8004744:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004748:	d867      	bhi.n	800481a <_strtod_l+0x8fa>
 800474a:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800474e:	f67f ae98 	bls.w	8004482 <_strtod_l+0x562>
 8004752:	4650      	mov	r0, sl
 8004754:	4659      	mov	r1, fp
 8004756:	4b09      	ldr	r3, [pc, #36]	@ (800477c <_strtod_l+0x85c>)
 8004758:	2200      	movs	r2, #0
 800475a:	f7fb febd 	bl	80004d8 <__aeabi_dmul>
 800475e:	4b08      	ldr	r3, [pc, #32]	@ (8004780 <_strtod_l+0x860>)
 8004760:	4682      	mov	sl, r0
 8004762:	400b      	ands	r3, r1
 8004764:	468b      	mov	fp, r1
 8004766:	2b00      	cmp	r3, #0
 8004768:	f47f ae00 	bne.w	800436c <_strtod_l+0x44c>
 800476c:	2322      	movs	r3, #34	@ 0x22
 800476e:	9a05      	ldr	r2, [sp, #20]
 8004770:	6013      	str	r3, [r2, #0]
 8004772:	e5fb      	b.n	800436c <_strtod_l+0x44c>
 8004774:	08005f60 	.word	0x08005f60
 8004778:	fffffc02 	.word	0xfffffc02
 800477c:	39500000 	.word	0x39500000
 8004780:	7ff00000 	.word	0x7ff00000
 8004784:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8004788:	d165      	bne.n	8004856 <_strtod_l+0x936>
 800478a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800478c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004790:	b35a      	cbz	r2, 80047ea <_strtod_l+0x8ca>
 8004792:	4a99      	ldr	r2, [pc, #612]	@ (80049f8 <_strtod_l+0xad8>)
 8004794:	4293      	cmp	r3, r2
 8004796:	d12b      	bne.n	80047f0 <_strtod_l+0x8d0>
 8004798:	9b08      	ldr	r3, [sp, #32]
 800479a:	4651      	mov	r1, sl
 800479c:	b303      	cbz	r3, 80047e0 <_strtod_l+0x8c0>
 800479e:	465a      	mov	r2, fp
 80047a0:	4b96      	ldr	r3, [pc, #600]	@ (80049fc <_strtod_l+0xadc>)
 80047a2:	4013      	ands	r3, r2
 80047a4:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 80047a8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80047ac:	d81b      	bhi.n	80047e6 <_strtod_l+0x8c6>
 80047ae:	0d1b      	lsrs	r3, r3, #20
 80047b0:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80047b4:	fa02 f303 	lsl.w	r3, r2, r3
 80047b8:	4299      	cmp	r1, r3
 80047ba:	d119      	bne.n	80047f0 <_strtod_l+0x8d0>
 80047bc:	4b90      	ldr	r3, [pc, #576]	@ (8004a00 <_strtod_l+0xae0>)
 80047be:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80047c0:	429a      	cmp	r2, r3
 80047c2:	d102      	bne.n	80047ca <_strtod_l+0x8aa>
 80047c4:	3101      	adds	r1, #1
 80047c6:	f43f adc6 	beq.w	8004356 <_strtod_l+0x436>
 80047ca:	f04f 0a00 	mov.w	sl, #0
 80047ce:	4b8b      	ldr	r3, [pc, #556]	@ (80049fc <_strtod_l+0xadc>)
 80047d0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80047d2:	401a      	ands	r2, r3
 80047d4:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80047d8:	9b08      	ldr	r3, [sp, #32]
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d1b9      	bne.n	8004752 <_strtod_l+0x832>
 80047de:	e5c5      	b.n	800436c <_strtod_l+0x44c>
 80047e0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80047e4:	e7e8      	b.n	80047b8 <_strtod_l+0x898>
 80047e6:	4613      	mov	r3, r2
 80047e8:	e7e6      	b.n	80047b8 <_strtod_l+0x898>
 80047ea:	ea53 030a 	orrs.w	r3, r3, sl
 80047ee:	d0a2      	beq.n	8004736 <_strtod_l+0x816>
 80047f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80047f2:	b1db      	cbz	r3, 800482c <_strtod_l+0x90c>
 80047f4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80047f6:	4213      	tst	r3, r2
 80047f8:	d0ee      	beq.n	80047d8 <_strtod_l+0x8b8>
 80047fa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80047fc:	4650      	mov	r0, sl
 80047fe:	4659      	mov	r1, fp
 8004800:	9a08      	ldr	r2, [sp, #32]
 8004802:	b1bb      	cbz	r3, 8004834 <_strtod_l+0x914>
 8004804:	f7ff fb68 	bl	8003ed8 <sulp>
 8004808:	4602      	mov	r2, r0
 800480a:	460b      	mov	r3, r1
 800480c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004810:	f7fb fcac 	bl	800016c <__adddf3>
 8004814:	4682      	mov	sl, r0
 8004816:	468b      	mov	fp, r1
 8004818:	e7de      	b.n	80047d8 <_strtod_l+0x8b8>
 800481a:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800481e:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004822:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004826:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800482a:	e7d5      	b.n	80047d8 <_strtod_l+0x8b8>
 800482c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800482e:	ea13 0f0a 	tst.w	r3, sl
 8004832:	e7e1      	b.n	80047f8 <_strtod_l+0x8d8>
 8004834:	f7ff fb50 	bl	8003ed8 <sulp>
 8004838:	4602      	mov	r2, r0
 800483a:	460b      	mov	r3, r1
 800483c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004840:	f7fb fc92 	bl	8000168 <__aeabi_dsub>
 8004844:	2200      	movs	r2, #0
 8004846:	2300      	movs	r3, #0
 8004848:	4682      	mov	sl, r0
 800484a:	468b      	mov	fp, r1
 800484c:	f7fc f8ac 	bl	80009a8 <__aeabi_dcmpeq>
 8004850:	2800      	cmp	r0, #0
 8004852:	d0c1      	beq.n	80047d8 <_strtod_l+0x8b8>
 8004854:	e615      	b.n	8004482 <_strtod_l+0x562>
 8004856:	4641      	mov	r1, r8
 8004858:	4620      	mov	r0, r4
 800485a:	f7ff fac9 	bl	8003df0 <__ratio>
 800485e:	2200      	movs	r2, #0
 8004860:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8004864:	4606      	mov	r6, r0
 8004866:	460f      	mov	r7, r1
 8004868:	f7fc f8b2 	bl	80009d0 <__aeabi_dcmple>
 800486c:	2800      	cmp	r0, #0
 800486e:	d06d      	beq.n	800494c <_strtod_l+0xa2c>
 8004870:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004872:	2b00      	cmp	r3, #0
 8004874:	d178      	bne.n	8004968 <_strtod_l+0xa48>
 8004876:	f1ba 0f00 	cmp.w	sl, #0
 800487a:	d156      	bne.n	800492a <_strtod_l+0xa0a>
 800487c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800487e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004882:	2b00      	cmp	r3, #0
 8004884:	d158      	bne.n	8004938 <_strtod_l+0xa18>
 8004886:	2200      	movs	r2, #0
 8004888:	4630      	mov	r0, r6
 800488a:	4639      	mov	r1, r7
 800488c:	4b5d      	ldr	r3, [pc, #372]	@ (8004a04 <_strtod_l+0xae4>)
 800488e:	f7fc f895 	bl	80009bc <__aeabi_dcmplt>
 8004892:	2800      	cmp	r0, #0
 8004894:	d157      	bne.n	8004946 <_strtod_l+0xa26>
 8004896:	4630      	mov	r0, r6
 8004898:	4639      	mov	r1, r7
 800489a:	2200      	movs	r2, #0
 800489c:	4b5a      	ldr	r3, [pc, #360]	@ (8004a08 <_strtod_l+0xae8>)
 800489e:	f7fb fe1b 	bl	80004d8 <__aeabi_dmul>
 80048a2:	4606      	mov	r6, r0
 80048a4:	460f      	mov	r7, r1
 80048a6:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 80048aa:	9606      	str	r6, [sp, #24]
 80048ac:	9307      	str	r3, [sp, #28]
 80048ae:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80048b2:	4d52      	ldr	r5, [pc, #328]	@ (80049fc <_strtod_l+0xadc>)
 80048b4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80048b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80048ba:	401d      	ands	r5, r3
 80048bc:	4b53      	ldr	r3, [pc, #332]	@ (8004a0c <_strtod_l+0xaec>)
 80048be:	429d      	cmp	r5, r3
 80048c0:	f040 80aa 	bne.w	8004a18 <_strtod_l+0xaf8>
 80048c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80048c6:	4650      	mov	r0, sl
 80048c8:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80048cc:	4659      	mov	r1, fp
 80048ce:	f7ff f9cf 	bl	8003c70 <__ulp>
 80048d2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80048d6:	f7fb fdff 	bl	80004d8 <__aeabi_dmul>
 80048da:	4652      	mov	r2, sl
 80048dc:	465b      	mov	r3, fp
 80048de:	f7fb fc45 	bl	800016c <__adddf3>
 80048e2:	460b      	mov	r3, r1
 80048e4:	4945      	ldr	r1, [pc, #276]	@ (80049fc <_strtod_l+0xadc>)
 80048e6:	4a4a      	ldr	r2, [pc, #296]	@ (8004a10 <_strtod_l+0xaf0>)
 80048e8:	4019      	ands	r1, r3
 80048ea:	4291      	cmp	r1, r2
 80048ec:	4682      	mov	sl, r0
 80048ee:	d942      	bls.n	8004976 <_strtod_l+0xa56>
 80048f0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80048f2:	4b43      	ldr	r3, [pc, #268]	@ (8004a00 <_strtod_l+0xae0>)
 80048f4:	429a      	cmp	r2, r3
 80048f6:	d103      	bne.n	8004900 <_strtod_l+0x9e0>
 80048f8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80048fa:	3301      	adds	r3, #1
 80048fc:	f43f ad2b 	beq.w	8004356 <_strtod_l+0x436>
 8004900:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004904:	f8df b0f8 	ldr.w	fp, [pc, #248]	@ 8004a00 <_strtod_l+0xae0>
 8004908:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800490a:	9805      	ldr	r0, [sp, #20]
 800490c:	f7fe fe7e 	bl	800360c <_Bfree>
 8004910:	4649      	mov	r1, r9
 8004912:	9805      	ldr	r0, [sp, #20]
 8004914:	f7fe fe7a 	bl	800360c <_Bfree>
 8004918:	4641      	mov	r1, r8
 800491a:	9805      	ldr	r0, [sp, #20]
 800491c:	f7fe fe76 	bl	800360c <_Bfree>
 8004920:	4621      	mov	r1, r4
 8004922:	9805      	ldr	r0, [sp, #20]
 8004924:	f7fe fe72 	bl	800360c <_Bfree>
 8004928:	e618      	b.n	800455c <_strtod_l+0x63c>
 800492a:	f1ba 0f01 	cmp.w	sl, #1
 800492e:	d103      	bne.n	8004938 <_strtod_l+0xa18>
 8004930:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004932:	2b00      	cmp	r3, #0
 8004934:	f43f ada5 	beq.w	8004482 <_strtod_l+0x562>
 8004938:	2200      	movs	r2, #0
 800493a:	4b36      	ldr	r3, [pc, #216]	@ (8004a14 <_strtod_l+0xaf4>)
 800493c:	2600      	movs	r6, #0
 800493e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004942:	4f30      	ldr	r7, [pc, #192]	@ (8004a04 <_strtod_l+0xae4>)
 8004944:	e7b3      	b.n	80048ae <_strtod_l+0x98e>
 8004946:	2600      	movs	r6, #0
 8004948:	4f2f      	ldr	r7, [pc, #188]	@ (8004a08 <_strtod_l+0xae8>)
 800494a:	e7ac      	b.n	80048a6 <_strtod_l+0x986>
 800494c:	4630      	mov	r0, r6
 800494e:	4639      	mov	r1, r7
 8004950:	4b2d      	ldr	r3, [pc, #180]	@ (8004a08 <_strtod_l+0xae8>)
 8004952:	2200      	movs	r2, #0
 8004954:	f7fb fdc0 	bl	80004d8 <__aeabi_dmul>
 8004958:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800495a:	4606      	mov	r6, r0
 800495c:	460f      	mov	r7, r1
 800495e:	2b00      	cmp	r3, #0
 8004960:	d0a1      	beq.n	80048a6 <_strtod_l+0x986>
 8004962:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8004966:	e7a2      	b.n	80048ae <_strtod_l+0x98e>
 8004968:	2200      	movs	r2, #0
 800496a:	4b26      	ldr	r3, [pc, #152]	@ (8004a04 <_strtod_l+0xae4>)
 800496c:	4616      	mov	r6, r2
 800496e:	461f      	mov	r7, r3
 8004970:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004974:	e79b      	b.n	80048ae <_strtod_l+0x98e>
 8004976:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800497a:	9b08      	ldr	r3, [sp, #32]
 800497c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8004980:	2b00      	cmp	r3, #0
 8004982:	d1c1      	bne.n	8004908 <_strtod_l+0x9e8>
 8004984:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004988:	0d1b      	lsrs	r3, r3, #20
 800498a:	051b      	lsls	r3, r3, #20
 800498c:	429d      	cmp	r5, r3
 800498e:	d1bb      	bne.n	8004908 <_strtod_l+0x9e8>
 8004990:	4630      	mov	r0, r6
 8004992:	4639      	mov	r1, r7
 8004994:	f7fc f8e8 	bl	8000b68 <__aeabi_d2lz>
 8004998:	f7fb fd70 	bl	800047c <__aeabi_l2d>
 800499c:	4602      	mov	r2, r0
 800499e:	460b      	mov	r3, r1
 80049a0:	4630      	mov	r0, r6
 80049a2:	4639      	mov	r1, r7
 80049a4:	f7fb fbe0 	bl	8000168 <__aeabi_dsub>
 80049a8:	460b      	mov	r3, r1
 80049aa:	4602      	mov	r2, r0
 80049ac:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80049b0:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80049b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80049b6:	ea46 060a 	orr.w	r6, r6, sl
 80049ba:	431e      	orrs	r6, r3
 80049bc:	d069      	beq.n	8004a92 <_strtod_l+0xb72>
 80049be:	a30a      	add	r3, pc, #40	@ (adr r3, 80049e8 <_strtod_l+0xac8>)
 80049c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80049c4:	f7fb fffa 	bl	80009bc <__aeabi_dcmplt>
 80049c8:	2800      	cmp	r0, #0
 80049ca:	f47f accf 	bne.w	800436c <_strtod_l+0x44c>
 80049ce:	a308      	add	r3, pc, #32	@ (adr r3, 80049f0 <_strtod_l+0xad0>)
 80049d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80049d4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80049d8:	f7fc f80e 	bl	80009f8 <__aeabi_dcmpgt>
 80049dc:	2800      	cmp	r0, #0
 80049de:	d093      	beq.n	8004908 <_strtod_l+0x9e8>
 80049e0:	e4c4      	b.n	800436c <_strtod_l+0x44c>
 80049e2:	bf00      	nop
 80049e4:	f3af 8000 	nop.w
 80049e8:	94a03595 	.word	0x94a03595
 80049ec:	3fdfffff 	.word	0x3fdfffff
 80049f0:	35afe535 	.word	0x35afe535
 80049f4:	3fe00000 	.word	0x3fe00000
 80049f8:	000fffff 	.word	0x000fffff
 80049fc:	7ff00000 	.word	0x7ff00000
 8004a00:	7fefffff 	.word	0x7fefffff
 8004a04:	3ff00000 	.word	0x3ff00000
 8004a08:	3fe00000 	.word	0x3fe00000
 8004a0c:	7fe00000 	.word	0x7fe00000
 8004a10:	7c9fffff 	.word	0x7c9fffff
 8004a14:	bff00000 	.word	0xbff00000
 8004a18:	9b08      	ldr	r3, [sp, #32]
 8004a1a:	b323      	cbz	r3, 8004a66 <_strtod_l+0xb46>
 8004a1c:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8004a20:	d821      	bhi.n	8004a66 <_strtod_l+0xb46>
 8004a22:	a327      	add	r3, pc, #156	@ (adr r3, 8004ac0 <_strtod_l+0xba0>)
 8004a24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004a28:	4630      	mov	r0, r6
 8004a2a:	4639      	mov	r1, r7
 8004a2c:	f7fb ffd0 	bl	80009d0 <__aeabi_dcmple>
 8004a30:	b1a0      	cbz	r0, 8004a5c <_strtod_l+0xb3c>
 8004a32:	4639      	mov	r1, r7
 8004a34:	4630      	mov	r0, r6
 8004a36:	f7fc f827 	bl	8000a88 <__aeabi_d2uiz>
 8004a3a:	2801      	cmp	r0, #1
 8004a3c:	bf38      	it	cc
 8004a3e:	2001      	movcc	r0, #1
 8004a40:	f7fb fcd0 	bl	80003e4 <__aeabi_ui2d>
 8004a44:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004a46:	4606      	mov	r6, r0
 8004a48:	460f      	mov	r7, r1
 8004a4a:	b9fb      	cbnz	r3, 8004a8c <_strtod_l+0xb6c>
 8004a4c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8004a50:	9014      	str	r0, [sp, #80]	@ 0x50
 8004a52:	9315      	str	r3, [sp, #84]	@ 0x54
 8004a54:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8004a58:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8004a5c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8004a5e:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8004a62:	1b5b      	subs	r3, r3, r5
 8004a64:	9311      	str	r3, [sp, #68]	@ 0x44
 8004a66:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004a6a:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8004a6e:	f7ff f8ff 	bl	8003c70 <__ulp>
 8004a72:	4602      	mov	r2, r0
 8004a74:	460b      	mov	r3, r1
 8004a76:	4650      	mov	r0, sl
 8004a78:	4659      	mov	r1, fp
 8004a7a:	f7fb fd2d 	bl	80004d8 <__aeabi_dmul>
 8004a7e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8004a82:	f7fb fb73 	bl	800016c <__adddf3>
 8004a86:	4682      	mov	sl, r0
 8004a88:	468b      	mov	fp, r1
 8004a8a:	e776      	b.n	800497a <_strtod_l+0xa5a>
 8004a8c:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8004a90:	e7e0      	b.n	8004a54 <_strtod_l+0xb34>
 8004a92:	a30d      	add	r3, pc, #52	@ (adr r3, 8004ac8 <_strtod_l+0xba8>)
 8004a94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004a98:	f7fb ff90 	bl	80009bc <__aeabi_dcmplt>
 8004a9c:	e79e      	b.n	80049dc <_strtod_l+0xabc>
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004aa2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004aa4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8004aa6:	6013      	str	r3, [r2, #0]
 8004aa8:	f7ff ba77 	b.w	8003f9a <_strtod_l+0x7a>
 8004aac:	2a65      	cmp	r2, #101	@ 0x65
 8004aae:	f43f ab6e 	beq.w	800418e <_strtod_l+0x26e>
 8004ab2:	2a45      	cmp	r2, #69	@ 0x45
 8004ab4:	f43f ab6b 	beq.w	800418e <_strtod_l+0x26e>
 8004ab8:	2301      	movs	r3, #1
 8004aba:	f7ff bba6 	b.w	800420a <_strtod_l+0x2ea>
 8004abe:	bf00      	nop
 8004ac0:	ffc00000 	.word	0xffc00000
 8004ac4:	41dfffff 	.word	0x41dfffff
 8004ac8:	94a03595 	.word	0x94a03595
 8004acc:	3fcfffff 	.word	0x3fcfffff

08004ad0 <_strtod_r>:
 8004ad0:	4b01      	ldr	r3, [pc, #4]	@ (8004ad8 <_strtod_r+0x8>)
 8004ad2:	f7ff ba25 	b.w	8003f20 <_strtod_l>
 8004ad6:	bf00      	nop
 8004ad8:	20000060 	.word	0x20000060

08004adc <_strtol_l.constprop.0>:
 8004adc:	2b24      	cmp	r3, #36	@ 0x24
 8004ade:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ae2:	4686      	mov	lr, r0
 8004ae4:	4690      	mov	r8, r2
 8004ae6:	d801      	bhi.n	8004aec <_strtol_l.constprop.0+0x10>
 8004ae8:	2b01      	cmp	r3, #1
 8004aea:	d106      	bne.n	8004afa <_strtol_l.constprop.0+0x1e>
 8004aec:	f000 fb32 	bl	8005154 <__errno>
 8004af0:	2316      	movs	r3, #22
 8004af2:	6003      	str	r3, [r0, #0]
 8004af4:	2000      	movs	r0, #0
 8004af6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004afa:	460d      	mov	r5, r1
 8004afc:	4833      	ldr	r0, [pc, #204]	@ (8004bcc <_strtol_l.constprop.0+0xf0>)
 8004afe:	462a      	mov	r2, r5
 8004b00:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004b04:	5d06      	ldrb	r6, [r0, r4]
 8004b06:	f016 0608 	ands.w	r6, r6, #8
 8004b0a:	d1f8      	bne.n	8004afe <_strtol_l.constprop.0+0x22>
 8004b0c:	2c2d      	cmp	r4, #45	@ 0x2d
 8004b0e:	d12d      	bne.n	8004b6c <_strtol_l.constprop.0+0x90>
 8004b10:	2601      	movs	r6, #1
 8004b12:	782c      	ldrb	r4, [r5, #0]
 8004b14:	1c95      	adds	r5, r2, #2
 8004b16:	f033 0210 	bics.w	r2, r3, #16
 8004b1a:	d109      	bne.n	8004b30 <_strtol_l.constprop.0+0x54>
 8004b1c:	2c30      	cmp	r4, #48	@ 0x30
 8004b1e:	d12a      	bne.n	8004b76 <_strtol_l.constprop.0+0x9a>
 8004b20:	782a      	ldrb	r2, [r5, #0]
 8004b22:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004b26:	2a58      	cmp	r2, #88	@ 0x58
 8004b28:	d125      	bne.n	8004b76 <_strtol_l.constprop.0+0x9a>
 8004b2a:	2310      	movs	r3, #16
 8004b2c:	786c      	ldrb	r4, [r5, #1]
 8004b2e:	3502      	adds	r5, #2
 8004b30:	2200      	movs	r2, #0
 8004b32:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8004b36:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8004b3a:	fbbc f9f3 	udiv	r9, ip, r3
 8004b3e:	4610      	mov	r0, r2
 8004b40:	fb03 ca19 	mls	sl, r3, r9, ip
 8004b44:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8004b48:	2f09      	cmp	r7, #9
 8004b4a:	d81b      	bhi.n	8004b84 <_strtol_l.constprop.0+0xa8>
 8004b4c:	463c      	mov	r4, r7
 8004b4e:	42a3      	cmp	r3, r4
 8004b50:	dd27      	ble.n	8004ba2 <_strtol_l.constprop.0+0xc6>
 8004b52:	1c57      	adds	r7, r2, #1
 8004b54:	d007      	beq.n	8004b66 <_strtol_l.constprop.0+0x8a>
 8004b56:	4581      	cmp	r9, r0
 8004b58:	d320      	bcc.n	8004b9c <_strtol_l.constprop.0+0xc0>
 8004b5a:	d101      	bne.n	8004b60 <_strtol_l.constprop.0+0x84>
 8004b5c:	45a2      	cmp	sl, r4
 8004b5e:	db1d      	blt.n	8004b9c <_strtol_l.constprop.0+0xc0>
 8004b60:	2201      	movs	r2, #1
 8004b62:	fb00 4003 	mla	r0, r0, r3, r4
 8004b66:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004b6a:	e7eb      	b.n	8004b44 <_strtol_l.constprop.0+0x68>
 8004b6c:	2c2b      	cmp	r4, #43	@ 0x2b
 8004b6e:	bf04      	itt	eq
 8004b70:	782c      	ldrbeq	r4, [r5, #0]
 8004b72:	1c95      	addeq	r5, r2, #2
 8004b74:	e7cf      	b.n	8004b16 <_strtol_l.constprop.0+0x3a>
 8004b76:	2b00      	cmp	r3, #0
 8004b78:	d1da      	bne.n	8004b30 <_strtol_l.constprop.0+0x54>
 8004b7a:	2c30      	cmp	r4, #48	@ 0x30
 8004b7c:	bf0c      	ite	eq
 8004b7e:	2308      	moveq	r3, #8
 8004b80:	230a      	movne	r3, #10
 8004b82:	e7d5      	b.n	8004b30 <_strtol_l.constprop.0+0x54>
 8004b84:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8004b88:	2f19      	cmp	r7, #25
 8004b8a:	d801      	bhi.n	8004b90 <_strtol_l.constprop.0+0xb4>
 8004b8c:	3c37      	subs	r4, #55	@ 0x37
 8004b8e:	e7de      	b.n	8004b4e <_strtol_l.constprop.0+0x72>
 8004b90:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8004b94:	2f19      	cmp	r7, #25
 8004b96:	d804      	bhi.n	8004ba2 <_strtol_l.constprop.0+0xc6>
 8004b98:	3c57      	subs	r4, #87	@ 0x57
 8004b9a:	e7d8      	b.n	8004b4e <_strtol_l.constprop.0+0x72>
 8004b9c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8004ba0:	e7e1      	b.n	8004b66 <_strtol_l.constprop.0+0x8a>
 8004ba2:	1c53      	adds	r3, r2, #1
 8004ba4:	d108      	bne.n	8004bb8 <_strtol_l.constprop.0+0xdc>
 8004ba6:	2322      	movs	r3, #34	@ 0x22
 8004ba8:	4660      	mov	r0, ip
 8004baa:	f8ce 3000 	str.w	r3, [lr]
 8004bae:	f1b8 0f00 	cmp.w	r8, #0
 8004bb2:	d0a0      	beq.n	8004af6 <_strtol_l.constprop.0+0x1a>
 8004bb4:	1e69      	subs	r1, r5, #1
 8004bb6:	e006      	b.n	8004bc6 <_strtol_l.constprop.0+0xea>
 8004bb8:	b106      	cbz	r6, 8004bbc <_strtol_l.constprop.0+0xe0>
 8004bba:	4240      	negs	r0, r0
 8004bbc:	f1b8 0f00 	cmp.w	r8, #0
 8004bc0:	d099      	beq.n	8004af6 <_strtol_l.constprop.0+0x1a>
 8004bc2:	2a00      	cmp	r2, #0
 8004bc4:	d1f6      	bne.n	8004bb4 <_strtol_l.constprop.0+0xd8>
 8004bc6:	f8c8 1000 	str.w	r1, [r8]
 8004bca:	e794      	b.n	8004af6 <_strtol_l.constprop.0+0x1a>
 8004bcc:	08005f89 	.word	0x08005f89

08004bd0 <_strtol_r>:
 8004bd0:	f7ff bf84 	b.w	8004adc <_strtol_l.constprop.0>

08004bd4 <__ssputs_r>:
 8004bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004bd8:	461f      	mov	r7, r3
 8004bda:	688e      	ldr	r6, [r1, #8]
 8004bdc:	4682      	mov	sl, r0
 8004bde:	42be      	cmp	r6, r7
 8004be0:	460c      	mov	r4, r1
 8004be2:	4690      	mov	r8, r2
 8004be4:	680b      	ldr	r3, [r1, #0]
 8004be6:	d82d      	bhi.n	8004c44 <__ssputs_r+0x70>
 8004be8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004bec:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8004bf0:	d026      	beq.n	8004c40 <__ssputs_r+0x6c>
 8004bf2:	6965      	ldr	r5, [r4, #20]
 8004bf4:	6909      	ldr	r1, [r1, #16]
 8004bf6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004bfa:	eba3 0901 	sub.w	r9, r3, r1
 8004bfe:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004c02:	1c7b      	adds	r3, r7, #1
 8004c04:	444b      	add	r3, r9
 8004c06:	106d      	asrs	r5, r5, #1
 8004c08:	429d      	cmp	r5, r3
 8004c0a:	bf38      	it	cc
 8004c0c:	461d      	movcc	r5, r3
 8004c0e:	0553      	lsls	r3, r2, #21
 8004c10:	d527      	bpl.n	8004c62 <__ssputs_r+0x8e>
 8004c12:	4629      	mov	r1, r5
 8004c14:	f7fe fc2e 	bl	8003474 <_malloc_r>
 8004c18:	4606      	mov	r6, r0
 8004c1a:	b360      	cbz	r0, 8004c76 <__ssputs_r+0xa2>
 8004c1c:	464a      	mov	r2, r9
 8004c1e:	6921      	ldr	r1, [r4, #16]
 8004c20:	f000 fa9e 	bl	8005160 <memcpy>
 8004c24:	89a3      	ldrh	r3, [r4, #12]
 8004c26:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004c2a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004c2e:	81a3      	strh	r3, [r4, #12]
 8004c30:	6126      	str	r6, [r4, #16]
 8004c32:	444e      	add	r6, r9
 8004c34:	6026      	str	r6, [r4, #0]
 8004c36:	463e      	mov	r6, r7
 8004c38:	6165      	str	r5, [r4, #20]
 8004c3a:	eba5 0509 	sub.w	r5, r5, r9
 8004c3e:	60a5      	str	r5, [r4, #8]
 8004c40:	42be      	cmp	r6, r7
 8004c42:	d900      	bls.n	8004c46 <__ssputs_r+0x72>
 8004c44:	463e      	mov	r6, r7
 8004c46:	4632      	mov	r2, r6
 8004c48:	4641      	mov	r1, r8
 8004c4a:	6820      	ldr	r0, [r4, #0]
 8004c4c:	f000 fa23 	bl	8005096 <memmove>
 8004c50:	2000      	movs	r0, #0
 8004c52:	68a3      	ldr	r3, [r4, #8]
 8004c54:	1b9b      	subs	r3, r3, r6
 8004c56:	60a3      	str	r3, [r4, #8]
 8004c58:	6823      	ldr	r3, [r4, #0]
 8004c5a:	4433      	add	r3, r6
 8004c5c:	6023      	str	r3, [r4, #0]
 8004c5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004c62:	462a      	mov	r2, r5
 8004c64:	f000 fe0d 	bl	8005882 <_realloc_r>
 8004c68:	4606      	mov	r6, r0
 8004c6a:	2800      	cmp	r0, #0
 8004c6c:	d1e0      	bne.n	8004c30 <__ssputs_r+0x5c>
 8004c6e:	4650      	mov	r0, sl
 8004c70:	6921      	ldr	r1, [r4, #16]
 8004c72:	f7fe fb8d 	bl	8003390 <_free_r>
 8004c76:	230c      	movs	r3, #12
 8004c78:	f8ca 3000 	str.w	r3, [sl]
 8004c7c:	89a3      	ldrh	r3, [r4, #12]
 8004c7e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004c82:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004c86:	81a3      	strh	r3, [r4, #12]
 8004c88:	e7e9      	b.n	8004c5e <__ssputs_r+0x8a>
	...

08004c8c <_svfiprintf_r>:
 8004c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c90:	4698      	mov	r8, r3
 8004c92:	898b      	ldrh	r3, [r1, #12]
 8004c94:	4607      	mov	r7, r0
 8004c96:	061b      	lsls	r3, r3, #24
 8004c98:	460d      	mov	r5, r1
 8004c9a:	4614      	mov	r4, r2
 8004c9c:	b09d      	sub	sp, #116	@ 0x74
 8004c9e:	d510      	bpl.n	8004cc2 <_svfiprintf_r+0x36>
 8004ca0:	690b      	ldr	r3, [r1, #16]
 8004ca2:	b973      	cbnz	r3, 8004cc2 <_svfiprintf_r+0x36>
 8004ca4:	2140      	movs	r1, #64	@ 0x40
 8004ca6:	f7fe fbe5 	bl	8003474 <_malloc_r>
 8004caa:	6028      	str	r0, [r5, #0]
 8004cac:	6128      	str	r0, [r5, #16]
 8004cae:	b930      	cbnz	r0, 8004cbe <_svfiprintf_r+0x32>
 8004cb0:	230c      	movs	r3, #12
 8004cb2:	603b      	str	r3, [r7, #0]
 8004cb4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004cb8:	b01d      	add	sp, #116	@ 0x74
 8004cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004cbe:	2340      	movs	r3, #64	@ 0x40
 8004cc0:	616b      	str	r3, [r5, #20]
 8004cc2:	2300      	movs	r3, #0
 8004cc4:	9309      	str	r3, [sp, #36]	@ 0x24
 8004cc6:	2320      	movs	r3, #32
 8004cc8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004ccc:	2330      	movs	r3, #48	@ 0x30
 8004cce:	f04f 0901 	mov.w	r9, #1
 8004cd2:	f8cd 800c 	str.w	r8, [sp, #12]
 8004cd6:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8004e70 <_svfiprintf_r+0x1e4>
 8004cda:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004cde:	4623      	mov	r3, r4
 8004ce0:	469a      	mov	sl, r3
 8004ce2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004ce6:	b10a      	cbz	r2, 8004cec <_svfiprintf_r+0x60>
 8004ce8:	2a25      	cmp	r2, #37	@ 0x25
 8004cea:	d1f9      	bne.n	8004ce0 <_svfiprintf_r+0x54>
 8004cec:	ebba 0b04 	subs.w	fp, sl, r4
 8004cf0:	d00b      	beq.n	8004d0a <_svfiprintf_r+0x7e>
 8004cf2:	465b      	mov	r3, fp
 8004cf4:	4622      	mov	r2, r4
 8004cf6:	4629      	mov	r1, r5
 8004cf8:	4638      	mov	r0, r7
 8004cfa:	f7ff ff6b 	bl	8004bd4 <__ssputs_r>
 8004cfe:	3001      	adds	r0, #1
 8004d00:	f000 80a7 	beq.w	8004e52 <_svfiprintf_r+0x1c6>
 8004d04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004d06:	445a      	add	r2, fp
 8004d08:	9209      	str	r2, [sp, #36]	@ 0x24
 8004d0a:	f89a 3000 	ldrb.w	r3, [sl]
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	f000 809f 	beq.w	8004e52 <_svfiprintf_r+0x1c6>
 8004d14:	2300      	movs	r3, #0
 8004d16:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8004d1a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004d1e:	f10a 0a01 	add.w	sl, sl, #1
 8004d22:	9304      	str	r3, [sp, #16]
 8004d24:	9307      	str	r3, [sp, #28]
 8004d26:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004d2a:	931a      	str	r3, [sp, #104]	@ 0x68
 8004d2c:	4654      	mov	r4, sl
 8004d2e:	2205      	movs	r2, #5
 8004d30:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004d34:	484e      	ldr	r0, [pc, #312]	@ (8004e70 <_svfiprintf_r+0x1e4>)
 8004d36:	f7fd fcc6 	bl	80026c6 <memchr>
 8004d3a:	9a04      	ldr	r2, [sp, #16]
 8004d3c:	b9d8      	cbnz	r0, 8004d76 <_svfiprintf_r+0xea>
 8004d3e:	06d0      	lsls	r0, r2, #27
 8004d40:	bf44      	itt	mi
 8004d42:	2320      	movmi	r3, #32
 8004d44:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004d48:	0711      	lsls	r1, r2, #28
 8004d4a:	bf44      	itt	mi
 8004d4c:	232b      	movmi	r3, #43	@ 0x2b
 8004d4e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004d52:	f89a 3000 	ldrb.w	r3, [sl]
 8004d56:	2b2a      	cmp	r3, #42	@ 0x2a
 8004d58:	d015      	beq.n	8004d86 <_svfiprintf_r+0xfa>
 8004d5a:	4654      	mov	r4, sl
 8004d5c:	2000      	movs	r0, #0
 8004d5e:	f04f 0c0a 	mov.w	ip, #10
 8004d62:	9a07      	ldr	r2, [sp, #28]
 8004d64:	4621      	mov	r1, r4
 8004d66:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004d6a:	3b30      	subs	r3, #48	@ 0x30
 8004d6c:	2b09      	cmp	r3, #9
 8004d6e:	d94b      	bls.n	8004e08 <_svfiprintf_r+0x17c>
 8004d70:	b1b0      	cbz	r0, 8004da0 <_svfiprintf_r+0x114>
 8004d72:	9207      	str	r2, [sp, #28]
 8004d74:	e014      	b.n	8004da0 <_svfiprintf_r+0x114>
 8004d76:	eba0 0308 	sub.w	r3, r0, r8
 8004d7a:	fa09 f303 	lsl.w	r3, r9, r3
 8004d7e:	4313      	orrs	r3, r2
 8004d80:	46a2      	mov	sl, r4
 8004d82:	9304      	str	r3, [sp, #16]
 8004d84:	e7d2      	b.n	8004d2c <_svfiprintf_r+0xa0>
 8004d86:	9b03      	ldr	r3, [sp, #12]
 8004d88:	1d19      	adds	r1, r3, #4
 8004d8a:	681b      	ldr	r3, [r3, #0]
 8004d8c:	9103      	str	r1, [sp, #12]
 8004d8e:	2b00      	cmp	r3, #0
 8004d90:	bfbb      	ittet	lt
 8004d92:	425b      	neglt	r3, r3
 8004d94:	f042 0202 	orrlt.w	r2, r2, #2
 8004d98:	9307      	strge	r3, [sp, #28]
 8004d9a:	9307      	strlt	r3, [sp, #28]
 8004d9c:	bfb8      	it	lt
 8004d9e:	9204      	strlt	r2, [sp, #16]
 8004da0:	7823      	ldrb	r3, [r4, #0]
 8004da2:	2b2e      	cmp	r3, #46	@ 0x2e
 8004da4:	d10a      	bne.n	8004dbc <_svfiprintf_r+0x130>
 8004da6:	7863      	ldrb	r3, [r4, #1]
 8004da8:	2b2a      	cmp	r3, #42	@ 0x2a
 8004daa:	d132      	bne.n	8004e12 <_svfiprintf_r+0x186>
 8004dac:	9b03      	ldr	r3, [sp, #12]
 8004dae:	3402      	adds	r4, #2
 8004db0:	1d1a      	adds	r2, r3, #4
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	9203      	str	r2, [sp, #12]
 8004db6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004dba:	9305      	str	r3, [sp, #20]
 8004dbc:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8004e74 <_svfiprintf_r+0x1e8>
 8004dc0:	2203      	movs	r2, #3
 8004dc2:	4650      	mov	r0, sl
 8004dc4:	7821      	ldrb	r1, [r4, #0]
 8004dc6:	f7fd fc7e 	bl	80026c6 <memchr>
 8004dca:	b138      	cbz	r0, 8004ddc <_svfiprintf_r+0x150>
 8004dcc:	2240      	movs	r2, #64	@ 0x40
 8004dce:	9b04      	ldr	r3, [sp, #16]
 8004dd0:	eba0 000a 	sub.w	r0, r0, sl
 8004dd4:	4082      	lsls	r2, r0
 8004dd6:	4313      	orrs	r3, r2
 8004dd8:	3401      	adds	r4, #1
 8004dda:	9304      	str	r3, [sp, #16]
 8004ddc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004de0:	2206      	movs	r2, #6
 8004de2:	4825      	ldr	r0, [pc, #148]	@ (8004e78 <_svfiprintf_r+0x1ec>)
 8004de4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004de8:	f7fd fc6d 	bl	80026c6 <memchr>
 8004dec:	2800      	cmp	r0, #0
 8004dee:	d036      	beq.n	8004e5e <_svfiprintf_r+0x1d2>
 8004df0:	4b22      	ldr	r3, [pc, #136]	@ (8004e7c <_svfiprintf_r+0x1f0>)
 8004df2:	bb1b      	cbnz	r3, 8004e3c <_svfiprintf_r+0x1b0>
 8004df4:	9b03      	ldr	r3, [sp, #12]
 8004df6:	3307      	adds	r3, #7
 8004df8:	f023 0307 	bic.w	r3, r3, #7
 8004dfc:	3308      	adds	r3, #8
 8004dfe:	9303      	str	r3, [sp, #12]
 8004e00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004e02:	4433      	add	r3, r6
 8004e04:	9309      	str	r3, [sp, #36]	@ 0x24
 8004e06:	e76a      	b.n	8004cde <_svfiprintf_r+0x52>
 8004e08:	460c      	mov	r4, r1
 8004e0a:	2001      	movs	r0, #1
 8004e0c:	fb0c 3202 	mla	r2, ip, r2, r3
 8004e10:	e7a8      	b.n	8004d64 <_svfiprintf_r+0xd8>
 8004e12:	2300      	movs	r3, #0
 8004e14:	f04f 0c0a 	mov.w	ip, #10
 8004e18:	4619      	mov	r1, r3
 8004e1a:	3401      	adds	r4, #1
 8004e1c:	9305      	str	r3, [sp, #20]
 8004e1e:	4620      	mov	r0, r4
 8004e20:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004e24:	3a30      	subs	r2, #48	@ 0x30
 8004e26:	2a09      	cmp	r2, #9
 8004e28:	d903      	bls.n	8004e32 <_svfiprintf_r+0x1a6>
 8004e2a:	2b00      	cmp	r3, #0
 8004e2c:	d0c6      	beq.n	8004dbc <_svfiprintf_r+0x130>
 8004e2e:	9105      	str	r1, [sp, #20]
 8004e30:	e7c4      	b.n	8004dbc <_svfiprintf_r+0x130>
 8004e32:	4604      	mov	r4, r0
 8004e34:	2301      	movs	r3, #1
 8004e36:	fb0c 2101 	mla	r1, ip, r1, r2
 8004e3a:	e7f0      	b.n	8004e1e <_svfiprintf_r+0x192>
 8004e3c:	ab03      	add	r3, sp, #12
 8004e3e:	9300      	str	r3, [sp, #0]
 8004e40:	462a      	mov	r2, r5
 8004e42:	4638      	mov	r0, r7
 8004e44:	4b0e      	ldr	r3, [pc, #56]	@ (8004e80 <_svfiprintf_r+0x1f4>)
 8004e46:	a904      	add	r1, sp, #16
 8004e48:	f7fc fc3c 	bl	80016c4 <_printf_float>
 8004e4c:	1c42      	adds	r2, r0, #1
 8004e4e:	4606      	mov	r6, r0
 8004e50:	d1d6      	bne.n	8004e00 <_svfiprintf_r+0x174>
 8004e52:	89ab      	ldrh	r3, [r5, #12]
 8004e54:	065b      	lsls	r3, r3, #25
 8004e56:	f53f af2d 	bmi.w	8004cb4 <_svfiprintf_r+0x28>
 8004e5a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004e5c:	e72c      	b.n	8004cb8 <_svfiprintf_r+0x2c>
 8004e5e:	ab03      	add	r3, sp, #12
 8004e60:	9300      	str	r3, [sp, #0]
 8004e62:	462a      	mov	r2, r5
 8004e64:	4638      	mov	r0, r7
 8004e66:	4b06      	ldr	r3, [pc, #24]	@ (8004e80 <_svfiprintf_r+0x1f4>)
 8004e68:	a904      	add	r1, sp, #16
 8004e6a:	f7fc fec9 	bl	8001c00 <_printf_i>
 8004e6e:	e7ed      	b.n	8004e4c <_svfiprintf_r+0x1c0>
 8004e70:	08006089 	.word	0x08006089
 8004e74:	0800608f 	.word	0x0800608f
 8004e78:	08006093 	.word	0x08006093
 8004e7c:	080016c5 	.word	0x080016c5
 8004e80:	08004bd5 	.word	0x08004bd5

08004e84 <__sflush_r>:
 8004e84:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004e88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e8a:	0716      	lsls	r6, r2, #28
 8004e8c:	4605      	mov	r5, r0
 8004e8e:	460c      	mov	r4, r1
 8004e90:	d454      	bmi.n	8004f3c <__sflush_r+0xb8>
 8004e92:	684b      	ldr	r3, [r1, #4]
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	dc02      	bgt.n	8004e9e <__sflush_r+0x1a>
 8004e98:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	dd48      	ble.n	8004f30 <__sflush_r+0xac>
 8004e9e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004ea0:	2e00      	cmp	r6, #0
 8004ea2:	d045      	beq.n	8004f30 <__sflush_r+0xac>
 8004ea4:	2300      	movs	r3, #0
 8004ea6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8004eaa:	682f      	ldr	r7, [r5, #0]
 8004eac:	6a21      	ldr	r1, [r4, #32]
 8004eae:	602b      	str	r3, [r5, #0]
 8004eb0:	d030      	beq.n	8004f14 <__sflush_r+0x90>
 8004eb2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004eb4:	89a3      	ldrh	r3, [r4, #12]
 8004eb6:	0759      	lsls	r1, r3, #29
 8004eb8:	d505      	bpl.n	8004ec6 <__sflush_r+0x42>
 8004eba:	6863      	ldr	r3, [r4, #4]
 8004ebc:	1ad2      	subs	r2, r2, r3
 8004ebe:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004ec0:	b10b      	cbz	r3, 8004ec6 <__sflush_r+0x42>
 8004ec2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004ec4:	1ad2      	subs	r2, r2, r3
 8004ec6:	2300      	movs	r3, #0
 8004ec8:	4628      	mov	r0, r5
 8004eca:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004ecc:	6a21      	ldr	r1, [r4, #32]
 8004ece:	47b0      	blx	r6
 8004ed0:	1c43      	adds	r3, r0, #1
 8004ed2:	89a3      	ldrh	r3, [r4, #12]
 8004ed4:	d106      	bne.n	8004ee4 <__sflush_r+0x60>
 8004ed6:	6829      	ldr	r1, [r5, #0]
 8004ed8:	291d      	cmp	r1, #29
 8004eda:	d82b      	bhi.n	8004f34 <__sflush_r+0xb0>
 8004edc:	4a28      	ldr	r2, [pc, #160]	@ (8004f80 <__sflush_r+0xfc>)
 8004ede:	410a      	asrs	r2, r1
 8004ee0:	07d6      	lsls	r6, r2, #31
 8004ee2:	d427      	bmi.n	8004f34 <__sflush_r+0xb0>
 8004ee4:	2200      	movs	r2, #0
 8004ee6:	6062      	str	r2, [r4, #4]
 8004ee8:	6922      	ldr	r2, [r4, #16]
 8004eea:	04d9      	lsls	r1, r3, #19
 8004eec:	6022      	str	r2, [r4, #0]
 8004eee:	d504      	bpl.n	8004efa <__sflush_r+0x76>
 8004ef0:	1c42      	adds	r2, r0, #1
 8004ef2:	d101      	bne.n	8004ef8 <__sflush_r+0x74>
 8004ef4:	682b      	ldr	r3, [r5, #0]
 8004ef6:	b903      	cbnz	r3, 8004efa <__sflush_r+0x76>
 8004ef8:	6560      	str	r0, [r4, #84]	@ 0x54
 8004efa:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004efc:	602f      	str	r7, [r5, #0]
 8004efe:	b1b9      	cbz	r1, 8004f30 <__sflush_r+0xac>
 8004f00:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004f04:	4299      	cmp	r1, r3
 8004f06:	d002      	beq.n	8004f0e <__sflush_r+0x8a>
 8004f08:	4628      	mov	r0, r5
 8004f0a:	f7fe fa41 	bl	8003390 <_free_r>
 8004f0e:	2300      	movs	r3, #0
 8004f10:	6363      	str	r3, [r4, #52]	@ 0x34
 8004f12:	e00d      	b.n	8004f30 <__sflush_r+0xac>
 8004f14:	2301      	movs	r3, #1
 8004f16:	4628      	mov	r0, r5
 8004f18:	47b0      	blx	r6
 8004f1a:	4602      	mov	r2, r0
 8004f1c:	1c50      	adds	r0, r2, #1
 8004f1e:	d1c9      	bne.n	8004eb4 <__sflush_r+0x30>
 8004f20:	682b      	ldr	r3, [r5, #0]
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d0c6      	beq.n	8004eb4 <__sflush_r+0x30>
 8004f26:	2b1d      	cmp	r3, #29
 8004f28:	d001      	beq.n	8004f2e <__sflush_r+0xaa>
 8004f2a:	2b16      	cmp	r3, #22
 8004f2c:	d11d      	bne.n	8004f6a <__sflush_r+0xe6>
 8004f2e:	602f      	str	r7, [r5, #0]
 8004f30:	2000      	movs	r0, #0
 8004f32:	e021      	b.n	8004f78 <__sflush_r+0xf4>
 8004f34:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004f38:	b21b      	sxth	r3, r3
 8004f3a:	e01a      	b.n	8004f72 <__sflush_r+0xee>
 8004f3c:	690f      	ldr	r7, [r1, #16]
 8004f3e:	2f00      	cmp	r7, #0
 8004f40:	d0f6      	beq.n	8004f30 <__sflush_r+0xac>
 8004f42:	0793      	lsls	r3, r2, #30
 8004f44:	bf18      	it	ne
 8004f46:	2300      	movne	r3, #0
 8004f48:	680e      	ldr	r6, [r1, #0]
 8004f4a:	bf08      	it	eq
 8004f4c:	694b      	ldreq	r3, [r1, #20]
 8004f4e:	1bf6      	subs	r6, r6, r7
 8004f50:	600f      	str	r7, [r1, #0]
 8004f52:	608b      	str	r3, [r1, #8]
 8004f54:	2e00      	cmp	r6, #0
 8004f56:	ddeb      	ble.n	8004f30 <__sflush_r+0xac>
 8004f58:	4633      	mov	r3, r6
 8004f5a:	463a      	mov	r2, r7
 8004f5c:	4628      	mov	r0, r5
 8004f5e:	6a21      	ldr	r1, [r4, #32]
 8004f60:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8004f64:	47e0      	blx	ip
 8004f66:	2800      	cmp	r0, #0
 8004f68:	dc07      	bgt.n	8004f7a <__sflush_r+0xf6>
 8004f6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004f6e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004f72:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004f76:	81a3      	strh	r3, [r4, #12]
 8004f78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f7a:	4407      	add	r7, r0
 8004f7c:	1a36      	subs	r6, r6, r0
 8004f7e:	e7e9      	b.n	8004f54 <__sflush_r+0xd0>
 8004f80:	dfbffffe 	.word	0xdfbffffe

08004f84 <_fflush_r>:
 8004f84:	b538      	push	{r3, r4, r5, lr}
 8004f86:	690b      	ldr	r3, [r1, #16]
 8004f88:	4605      	mov	r5, r0
 8004f8a:	460c      	mov	r4, r1
 8004f8c:	b913      	cbnz	r3, 8004f94 <_fflush_r+0x10>
 8004f8e:	2500      	movs	r5, #0
 8004f90:	4628      	mov	r0, r5
 8004f92:	bd38      	pop	{r3, r4, r5, pc}
 8004f94:	b118      	cbz	r0, 8004f9e <_fflush_r+0x1a>
 8004f96:	6a03      	ldr	r3, [r0, #32]
 8004f98:	b90b      	cbnz	r3, 8004f9e <_fflush_r+0x1a>
 8004f9a:	f7fd f9ed 	bl	8002378 <__sinit>
 8004f9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004fa2:	2b00      	cmp	r3, #0
 8004fa4:	d0f3      	beq.n	8004f8e <_fflush_r+0xa>
 8004fa6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004fa8:	07d0      	lsls	r0, r2, #31
 8004faa:	d404      	bmi.n	8004fb6 <_fflush_r+0x32>
 8004fac:	0599      	lsls	r1, r3, #22
 8004fae:	d402      	bmi.n	8004fb6 <_fflush_r+0x32>
 8004fb0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004fb2:	f7fd fb86 	bl	80026c2 <__retarget_lock_acquire_recursive>
 8004fb6:	4628      	mov	r0, r5
 8004fb8:	4621      	mov	r1, r4
 8004fba:	f7ff ff63 	bl	8004e84 <__sflush_r>
 8004fbe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004fc0:	4605      	mov	r5, r0
 8004fc2:	07da      	lsls	r2, r3, #31
 8004fc4:	d4e4      	bmi.n	8004f90 <_fflush_r+0xc>
 8004fc6:	89a3      	ldrh	r3, [r4, #12]
 8004fc8:	059b      	lsls	r3, r3, #22
 8004fca:	d4e1      	bmi.n	8004f90 <_fflush_r+0xc>
 8004fcc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004fce:	f7fd fb79 	bl	80026c4 <__retarget_lock_release_recursive>
 8004fd2:	e7dd      	b.n	8004f90 <_fflush_r+0xc>

08004fd4 <__swhatbuf_r>:
 8004fd4:	b570      	push	{r4, r5, r6, lr}
 8004fd6:	460c      	mov	r4, r1
 8004fd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004fdc:	4615      	mov	r5, r2
 8004fde:	2900      	cmp	r1, #0
 8004fe0:	461e      	mov	r6, r3
 8004fe2:	b096      	sub	sp, #88	@ 0x58
 8004fe4:	da0c      	bge.n	8005000 <__swhatbuf_r+0x2c>
 8004fe6:	89a3      	ldrh	r3, [r4, #12]
 8004fe8:	2100      	movs	r1, #0
 8004fea:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004fee:	bf14      	ite	ne
 8004ff0:	2340      	movne	r3, #64	@ 0x40
 8004ff2:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004ff6:	2000      	movs	r0, #0
 8004ff8:	6031      	str	r1, [r6, #0]
 8004ffa:	602b      	str	r3, [r5, #0]
 8004ffc:	b016      	add	sp, #88	@ 0x58
 8004ffe:	bd70      	pop	{r4, r5, r6, pc}
 8005000:	466a      	mov	r2, sp
 8005002:	f000 f875 	bl	80050f0 <_fstat_r>
 8005006:	2800      	cmp	r0, #0
 8005008:	dbed      	blt.n	8004fe6 <__swhatbuf_r+0x12>
 800500a:	9901      	ldr	r1, [sp, #4]
 800500c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8005010:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8005014:	4259      	negs	r1, r3
 8005016:	4159      	adcs	r1, r3
 8005018:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800501c:	e7eb      	b.n	8004ff6 <__swhatbuf_r+0x22>

0800501e <__smakebuf_r>:
 800501e:	898b      	ldrh	r3, [r1, #12]
 8005020:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005022:	079d      	lsls	r5, r3, #30
 8005024:	4606      	mov	r6, r0
 8005026:	460c      	mov	r4, r1
 8005028:	d507      	bpl.n	800503a <__smakebuf_r+0x1c>
 800502a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800502e:	6023      	str	r3, [r4, #0]
 8005030:	6123      	str	r3, [r4, #16]
 8005032:	2301      	movs	r3, #1
 8005034:	6163      	str	r3, [r4, #20]
 8005036:	b003      	add	sp, #12
 8005038:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800503a:	466a      	mov	r2, sp
 800503c:	ab01      	add	r3, sp, #4
 800503e:	f7ff ffc9 	bl	8004fd4 <__swhatbuf_r>
 8005042:	9f00      	ldr	r7, [sp, #0]
 8005044:	4605      	mov	r5, r0
 8005046:	4639      	mov	r1, r7
 8005048:	4630      	mov	r0, r6
 800504a:	f7fe fa13 	bl	8003474 <_malloc_r>
 800504e:	b948      	cbnz	r0, 8005064 <__smakebuf_r+0x46>
 8005050:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005054:	059a      	lsls	r2, r3, #22
 8005056:	d4ee      	bmi.n	8005036 <__smakebuf_r+0x18>
 8005058:	f023 0303 	bic.w	r3, r3, #3
 800505c:	f043 0302 	orr.w	r3, r3, #2
 8005060:	81a3      	strh	r3, [r4, #12]
 8005062:	e7e2      	b.n	800502a <__smakebuf_r+0xc>
 8005064:	89a3      	ldrh	r3, [r4, #12]
 8005066:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800506a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800506e:	81a3      	strh	r3, [r4, #12]
 8005070:	9b01      	ldr	r3, [sp, #4]
 8005072:	6020      	str	r0, [r4, #0]
 8005074:	b15b      	cbz	r3, 800508e <__smakebuf_r+0x70>
 8005076:	4630      	mov	r0, r6
 8005078:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800507c:	f000 f84a 	bl	8005114 <_isatty_r>
 8005080:	b128      	cbz	r0, 800508e <__smakebuf_r+0x70>
 8005082:	89a3      	ldrh	r3, [r4, #12]
 8005084:	f023 0303 	bic.w	r3, r3, #3
 8005088:	f043 0301 	orr.w	r3, r3, #1
 800508c:	81a3      	strh	r3, [r4, #12]
 800508e:	89a3      	ldrh	r3, [r4, #12]
 8005090:	431d      	orrs	r5, r3
 8005092:	81a5      	strh	r5, [r4, #12]
 8005094:	e7cf      	b.n	8005036 <__smakebuf_r+0x18>

08005096 <memmove>:
 8005096:	4288      	cmp	r0, r1
 8005098:	b510      	push	{r4, lr}
 800509a:	eb01 0402 	add.w	r4, r1, r2
 800509e:	d902      	bls.n	80050a6 <memmove+0x10>
 80050a0:	4284      	cmp	r4, r0
 80050a2:	4623      	mov	r3, r4
 80050a4:	d807      	bhi.n	80050b6 <memmove+0x20>
 80050a6:	1e43      	subs	r3, r0, #1
 80050a8:	42a1      	cmp	r1, r4
 80050aa:	d008      	beq.n	80050be <memmove+0x28>
 80050ac:	f811 2b01 	ldrb.w	r2, [r1], #1
 80050b0:	f803 2f01 	strb.w	r2, [r3, #1]!
 80050b4:	e7f8      	b.n	80050a8 <memmove+0x12>
 80050b6:	4601      	mov	r1, r0
 80050b8:	4402      	add	r2, r0
 80050ba:	428a      	cmp	r2, r1
 80050bc:	d100      	bne.n	80050c0 <memmove+0x2a>
 80050be:	bd10      	pop	{r4, pc}
 80050c0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80050c4:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80050c8:	e7f7      	b.n	80050ba <memmove+0x24>

080050ca <strncmp>:
 80050ca:	b510      	push	{r4, lr}
 80050cc:	b16a      	cbz	r2, 80050ea <strncmp+0x20>
 80050ce:	3901      	subs	r1, #1
 80050d0:	1884      	adds	r4, r0, r2
 80050d2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80050d6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80050da:	429a      	cmp	r2, r3
 80050dc:	d103      	bne.n	80050e6 <strncmp+0x1c>
 80050de:	42a0      	cmp	r0, r4
 80050e0:	d001      	beq.n	80050e6 <strncmp+0x1c>
 80050e2:	2a00      	cmp	r2, #0
 80050e4:	d1f5      	bne.n	80050d2 <strncmp+0x8>
 80050e6:	1ad0      	subs	r0, r2, r3
 80050e8:	bd10      	pop	{r4, pc}
 80050ea:	4610      	mov	r0, r2
 80050ec:	e7fc      	b.n	80050e8 <strncmp+0x1e>
	...

080050f0 <_fstat_r>:
 80050f0:	b538      	push	{r3, r4, r5, lr}
 80050f2:	2300      	movs	r3, #0
 80050f4:	4d06      	ldr	r5, [pc, #24]	@ (8005110 <_fstat_r+0x20>)
 80050f6:	4604      	mov	r4, r0
 80050f8:	4608      	mov	r0, r1
 80050fa:	4611      	mov	r1, r2
 80050fc:	602b      	str	r3, [r5, #0]
 80050fe:	f000 fda7 	bl	8005c50 <_fstat>
 8005102:	1c43      	adds	r3, r0, #1
 8005104:	d102      	bne.n	800510c <_fstat_r+0x1c>
 8005106:	682b      	ldr	r3, [r5, #0]
 8005108:	b103      	cbz	r3, 800510c <_fstat_r+0x1c>
 800510a:	6023      	str	r3, [r4, #0]
 800510c:	bd38      	pop	{r3, r4, r5, pc}
 800510e:	bf00      	nop
 8005110:	20000370 	.word	0x20000370

08005114 <_isatty_r>:
 8005114:	b538      	push	{r3, r4, r5, lr}
 8005116:	2300      	movs	r3, #0
 8005118:	4d05      	ldr	r5, [pc, #20]	@ (8005130 <_isatty_r+0x1c>)
 800511a:	4604      	mov	r4, r0
 800511c:	4608      	mov	r0, r1
 800511e:	602b      	str	r3, [r5, #0]
 8005120:	f000 fda6 	bl	8005c70 <_isatty>
 8005124:	1c43      	adds	r3, r0, #1
 8005126:	d102      	bne.n	800512e <_isatty_r+0x1a>
 8005128:	682b      	ldr	r3, [r5, #0]
 800512a:	b103      	cbz	r3, 800512e <_isatty_r+0x1a>
 800512c:	6023      	str	r3, [r4, #0]
 800512e:	bd38      	pop	{r3, r4, r5, pc}
 8005130:	20000370 	.word	0x20000370

08005134 <_sbrk_r>:
 8005134:	b538      	push	{r3, r4, r5, lr}
 8005136:	2300      	movs	r3, #0
 8005138:	4d05      	ldr	r5, [pc, #20]	@ (8005150 <_sbrk_r+0x1c>)
 800513a:	4604      	mov	r4, r0
 800513c:	4608      	mov	r0, r1
 800513e:	602b      	str	r3, [r5, #0]
 8005140:	f000 fdb6 	bl	8005cb0 <_sbrk>
 8005144:	1c43      	adds	r3, r0, #1
 8005146:	d102      	bne.n	800514e <_sbrk_r+0x1a>
 8005148:	682b      	ldr	r3, [r5, #0]
 800514a:	b103      	cbz	r3, 800514e <_sbrk_r+0x1a>
 800514c:	6023      	str	r3, [r4, #0]
 800514e:	bd38      	pop	{r3, r4, r5, pc}
 8005150:	20000370 	.word	0x20000370

08005154 <__errno>:
 8005154:	4b01      	ldr	r3, [pc, #4]	@ (800515c <__errno+0x8>)
 8005156:	6818      	ldr	r0, [r3, #0]
 8005158:	4770      	bx	lr
 800515a:	bf00      	nop
 800515c:	20000010 	.word	0x20000010

08005160 <memcpy>:
 8005160:	440a      	add	r2, r1
 8005162:	4291      	cmp	r1, r2
 8005164:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8005168:	d100      	bne.n	800516c <memcpy+0xc>
 800516a:	4770      	bx	lr
 800516c:	b510      	push	{r4, lr}
 800516e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005172:	4291      	cmp	r1, r2
 8005174:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005178:	d1f9      	bne.n	800516e <memcpy+0xe>
 800517a:	bd10      	pop	{r4, pc}

0800517c <nan>:
 800517c:	2000      	movs	r0, #0
 800517e:	4901      	ldr	r1, [pc, #4]	@ (8005184 <nan+0x8>)
 8005180:	4770      	bx	lr
 8005182:	bf00      	nop
 8005184:	7ff80000 	.word	0x7ff80000

08005188 <__assert_func>:
 8005188:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800518a:	4614      	mov	r4, r2
 800518c:	461a      	mov	r2, r3
 800518e:	4b09      	ldr	r3, [pc, #36]	@ (80051b4 <__assert_func+0x2c>)
 8005190:	4605      	mov	r5, r0
 8005192:	681b      	ldr	r3, [r3, #0]
 8005194:	68d8      	ldr	r0, [r3, #12]
 8005196:	b954      	cbnz	r4, 80051ae <__assert_func+0x26>
 8005198:	4b07      	ldr	r3, [pc, #28]	@ (80051b8 <__assert_func+0x30>)
 800519a:	461c      	mov	r4, r3
 800519c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80051a0:	9100      	str	r1, [sp, #0]
 80051a2:	462b      	mov	r3, r5
 80051a4:	4905      	ldr	r1, [pc, #20]	@ (80051bc <__assert_func+0x34>)
 80051a6:	f000 fba7 	bl	80058f8 <fiprintf>
 80051aa:	f000 fbb7 	bl	800591c <abort>
 80051ae:	4b04      	ldr	r3, [pc, #16]	@ (80051c0 <__assert_func+0x38>)
 80051b0:	e7f4      	b.n	800519c <__assert_func+0x14>
 80051b2:	bf00      	nop
 80051b4:	20000010 	.word	0x20000010
 80051b8:	080060dd 	.word	0x080060dd
 80051bc:	080060af 	.word	0x080060af
 80051c0:	080060a2 	.word	0x080060a2

080051c4 <_calloc_r>:
 80051c4:	b570      	push	{r4, r5, r6, lr}
 80051c6:	fba1 5402 	umull	r5, r4, r1, r2
 80051ca:	b93c      	cbnz	r4, 80051dc <_calloc_r+0x18>
 80051cc:	4629      	mov	r1, r5
 80051ce:	f7fe f951 	bl	8003474 <_malloc_r>
 80051d2:	4606      	mov	r6, r0
 80051d4:	b928      	cbnz	r0, 80051e2 <_calloc_r+0x1e>
 80051d6:	2600      	movs	r6, #0
 80051d8:	4630      	mov	r0, r6
 80051da:	bd70      	pop	{r4, r5, r6, pc}
 80051dc:	220c      	movs	r2, #12
 80051de:	6002      	str	r2, [r0, #0]
 80051e0:	e7f9      	b.n	80051d6 <_calloc_r+0x12>
 80051e2:	462a      	mov	r2, r5
 80051e4:	4621      	mov	r1, r4
 80051e6:	f7fd f9f5 	bl	80025d4 <memset>
 80051ea:	e7f5      	b.n	80051d8 <_calloc_r+0x14>

080051ec <rshift>:
 80051ec:	6903      	ldr	r3, [r0, #16]
 80051ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80051f2:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80051f6:	f100 0414 	add.w	r4, r0, #20
 80051fa:	ea4f 1261 	mov.w	r2, r1, asr #5
 80051fe:	dd46      	ble.n	800528e <rshift+0xa2>
 8005200:	f011 011f 	ands.w	r1, r1, #31
 8005204:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005208:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800520c:	d10c      	bne.n	8005228 <rshift+0x3c>
 800520e:	4629      	mov	r1, r5
 8005210:	f100 0710 	add.w	r7, r0, #16
 8005214:	42b1      	cmp	r1, r6
 8005216:	d335      	bcc.n	8005284 <rshift+0x98>
 8005218:	1a9b      	subs	r3, r3, r2
 800521a:	009b      	lsls	r3, r3, #2
 800521c:	1eea      	subs	r2, r5, #3
 800521e:	4296      	cmp	r6, r2
 8005220:	bf38      	it	cc
 8005222:	2300      	movcc	r3, #0
 8005224:	4423      	add	r3, r4
 8005226:	e015      	b.n	8005254 <rshift+0x68>
 8005228:	46a1      	mov	r9, r4
 800522a:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800522e:	f1c1 0820 	rsb	r8, r1, #32
 8005232:	40cf      	lsrs	r7, r1
 8005234:	f105 0e04 	add.w	lr, r5, #4
 8005238:	4576      	cmp	r6, lr
 800523a:	46f4      	mov	ip, lr
 800523c:	d816      	bhi.n	800526c <rshift+0x80>
 800523e:	1a9a      	subs	r2, r3, r2
 8005240:	0092      	lsls	r2, r2, #2
 8005242:	3a04      	subs	r2, #4
 8005244:	3501      	adds	r5, #1
 8005246:	42ae      	cmp	r6, r5
 8005248:	bf38      	it	cc
 800524a:	2200      	movcc	r2, #0
 800524c:	18a3      	adds	r3, r4, r2
 800524e:	50a7      	str	r7, [r4, r2]
 8005250:	b107      	cbz	r7, 8005254 <rshift+0x68>
 8005252:	3304      	adds	r3, #4
 8005254:	42a3      	cmp	r3, r4
 8005256:	eba3 0204 	sub.w	r2, r3, r4
 800525a:	bf08      	it	eq
 800525c:	2300      	moveq	r3, #0
 800525e:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005262:	6102      	str	r2, [r0, #16]
 8005264:	bf08      	it	eq
 8005266:	6143      	streq	r3, [r0, #20]
 8005268:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800526c:	f8dc c000 	ldr.w	ip, [ip]
 8005270:	fa0c fc08 	lsl.w	ip, ip, r8
 8005274:	ea4c 0707 	orr.w	r7, ip, r7
 8005278:	f849 7b04 	str.w	r7, [r9], #4
 800527c:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005280:	40cf      	lsrs	r7, r1
 8005282:	e7d9      	b.n	8005238 <rshift+0x4c>
 8005284:	f851 cb04 	ldr.w	ip, [r1], #4
 8005288:	f847 cf04 	str.w	ip, [r7, #4]!
 800528c:	e7c2      	b.n	8005214 <rshift+0x28>
 800528e:	4623      	mov	r3, r4
 8005290:	e7e0      	b.n	8005254 <rshift+0x68>

08005292 <__hexdig_fun>:
 8005292:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005296:	2b09      	cmp	r3, #9
 8005298:	d802      	bhi.n	80052a0 <__hexdig_fun+0xe>
 800529a:	3820      	subs	r0, #32
 800529c:	b2c0      	uxtb	r0, r0
 800529e:	4770      	bx	lr
 80052a0:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 80052a4:	2b05      	cmp	r3, #5
 80052a6:	d801      	bhi.n	80052ac <__hexdig_fun+0x1a>
 80052a8:	3847      	subs	r0, #71	@ 0x47
 80052aa:	e7f7      	b.n	800529c <__hexdig_fun+0xa>
 80052ac:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 80052b0:	2b05      	cmp	r3, #5
 80052b2:	d801      	bhi.n	80052b8 <__hexdig_fun+0x26>
 80052b4:	3827      	subs	r0, #39	@ 0x27
 80052b6:	e7f1      	b.n	800529c <__hexdig_fun+0xa>
 80052b8:	2000      	movs	r0, #0
 80052ba:	4770      	bx	lr

080052bc <__gethex>:
 80052bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052c0:	468a      	mov	sl, r1
 80052c2:	4690      	mov	r8, r2
 80052c4:	b085      	sub	sp, #20
 80052c6:	9302      	str	r3, [sp, #8]
 80052c8:	680b      	ldr	r3, [r1, #0]
 80052ca:	9001      	str	r0, [sp, #4]
 80052cc:	1c9c      	adds	r4, r3, #2
 80052ce:	46a1      	mov	r9, r4
 80052d0:	f814 0b01 	ldrb.w	r0, [r4], #1
 80052d4:	2830      	cmp	r0, #48	@ 0x30
 80052d6:	d0fa      	beq.n	80052ce <__gethex+0x12>
 80052d8:	eba9 0303 	sub.w	r3, r9, r3
 80052dc:	f1a3 0b02 	sub.w	fp, r3, #2
 80052e0:	f7ff ffd7 	bl	8005292 <__hexdig_fun>
 80052e4:	4605      	mov	r5, r0
 80052e6:	2800      	cmp	r0, #0
 80052e8:	d168      	bne.n	80053bc <__gethex+0x100>
 80052ea:	2201      	movs	r2, #1
 80052ec:	4648      	mov	r0, r9
 80052ee:	499f      	ldr	r1, [pc, #636]	@ (800556c <__gethex+0x2b0>)
 80052f0:	f7ff feeb 	bl	80050ca <strncmp>
 80052f4:	4607      	mov	r7, r0
 80052f6:	2800      	cmp	r0, #0
 80052f8:	d167      	bne.n	80053ca <__gethex+0x10e>
 80052fa:	f899 0001 	ldrb.w	r0, [r9, #1]
 80052fe:	4626      	mov	r6, r4
 8005300:	f7ff ffc7 	bl	8005292 <__hexdig_fun>
 8005304:	2800      	cmp	r0, #0
 8005306:	d062      	beq.n	80053ce <__gethex+0x112>
 8005308:	4623      	mov	r3, r4
 800530a:	7818      	ldrb	r0, [r3, #0]
 800530c:	4699      	mov	r9, r3
 800530e:	2830      	cmp	r0, #48	@ 0x30
 8005310:	f103 0301 	add.w	r3, r3, #1
 8005314:	d0f9      	beq.n	800530a <__gethex+0x4e>
 8005316:	f7ff ffbc 	bl	8005292 <__hexdig_fun>
 800531a:	fab0 f580 	clz	r5, r0
 800531e:	f04f 0b01 	mov.w	fp, #1
 8005322:	096d      	lsrs	r5, r5, #5
 8005324:	464a      	mov	r2, r9
 8005326:	4616      	mov	r6, r2
 8005328:	7830      	ldrb	r0, [r6, #0]
 800532a:	3201      	adds	r2, #1
 800532c:	f7ff ffb1 	bl	8005292 <__hexdig_fun>
 8005330:	2800      	cmp	r0, #0
 8005332:	d1f8      	bne.n	8005326 <__gethex+0x6a>
 8005334:	2201      	movs	r2, #1
 8005336:	4630      	mov	r0, r6
 8005338:	498c      	ldr	r1, [pc, #560]	@ (800556c <__gethex+0x2b0>)
 800533a:	f7ff fec6 	bl	80050ca <strncmp>
 800533e:	2800      	cmp	r0, #0
 8005340:	d13f      	bne.n	80053c2 <__gethex+0x106>
 8005342:	b944      	cbnz	r4, 8005356 <__gethex+0x9a>
 8005344:	1c74      	adds	r4, r6, #1
 8005346:	4622      	mov	r2, r4
 8005348:	4616      	mov	r6, r2
 800534a:	7830      	ldrb	r0, [r6, #0]
 800534c:	3201      	adds	r2, #1
 800534e:	f7ff ffa0 	bl	8005292 <__hexdig_fun>
 8005352:	2800      	cmp	r0, #0
 8005354:	d1f8      	bne.n	8005348 <__gethex+0x8c>
 8005356:	1ba4      	subs	r4, r4, r6
 8005358:	00a7      	lsls	r7, r4, #2
 800535a:	7833      	ldrb	r3, [r6, #0]
 800535c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005360:	2b50      	cmp	r3, #80	@ 0x50
 8005362:	d13e      	bne.n	80053e2 <__gethex+0x126>
 8005364:	7873      	ldrb	r3, [r6, #1]
 8005366:	2b2b      	cmp	r3, #43	@ 0x2b
 8005368:	d033      	beq.n	80053d2 <__gethex+0x116>
 800536a:	2b2d      	cmp	r3, #45	@ 0x2d
 800536c:	d034      	beq.n	80053d8 <__gethex+0x11c>
 800536e:	2400      	movs	r4, #0
 8005370:	1c71      	adds	r1, r6, #1
 8005372:	7808      	ldrb	r0, [r1, #0]
 8005374:	f7ff ff8d 	bl	8005292 <__hexdig_fun>
 8005378:	1e43      	subs	r3, r0, #1
 800537a:	b2db      	uxtb	r3, r3
 800537c:	2b18      	cmp	r3, #24
 800537e:	d830      	bhi.n	80053e2 <__gethex+0x126>
 8005380:	f1a0 0210 	sub.w	r2, r0, #16
 8005384:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005388:	f7ff ff83 	bl	8005292 <__hexdig_fun>
 800538c:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8005390:	fa5f fc8c 	uxtb.w	ip, ip
 8005394:	f1bc 0f18 	cmp.w	ip, #24
 8005398:	f04f 030a 	mov.w	r3, #10
 800539c:	d91e      	bls.n	80053dc <__gethex+0x120>
 800539e:	b104      	cbz	r4, 80053a2 <__gethex+0xe6>
 80053a0:	4252      	negs	r2, r2
 80053a2:	4417      	add	r7, r2
 80053a4:	f8ca 1000 	str.w	r1, [sl]
 80053a8:	b1ed      	cbz	r5, 80053e6 <__gethex+0x12a>
 80053aa:	f1bb 0f00 	cmp.w	fp, #0
 80053ae:	bf0c      	ite	eq
 80053b0:	2506      	moveq	r5, #6
 80053b2:	2500      	movne	r5, #0
 80053b4:	4628      	mov	r0, r5
 80053b6:	b005      	add	sp, #20
 80053b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80053bc:	2500      	movs	r5, #0
 80053be:	462c      	mov	r4, r5
 80053c0:	e7b0      	b.n	8005324 <__gethex+0x68>
 80053c2:	2c00      	cmp	r4, #0
 80053c4:	d1c7      	bne.n	8005356 <__gethex+0x9a>
 80053c6:	4627      	mov	r7, r4
 80053c8:	e7c7      	b.n	800535a <__gethex+0x9e>
 80053ca:	464e      	mov	r6, r9
 80053cc:	462f      	mov	r7, r5
 80053ce:	2501      	movs	r5, #1
 80053d0:	e7c3      	b.n	800535a <__gethex+0x9e>
 80053d2:	2400      	movs	r4, #0
 80053d4:	1cb1      	adds	r1, r6, #2
 80053d6:	e7cc      	b.n	8005372 <__gethex+0xb6>
 80053d8:	2401      	movs	r4, #1
 80053da:	e7fb      	b.n	80053d4 <__gethex+0x118>
 80053dc:	fb03 0002 	mla	r0, r3, r2, r0
 80053e0:	e7ce      	b.n	8005380 <__gethex+0xc4>
 80053e2:	4631      	mov	r1, r6
 80053e4:	e7de      	b.n	80053a4 <__gethex+0xe8>
 80053e6:	4629      	mov	r1, r5
 80053e8:	eba6 0309 	sub.w	r3, r6, r9
 80053ec:	3b01      	subs	r3, #1
 80053ee:	2b07      	cmp	r3, #7
 80053f0:	dc0a      	bgt.n	8005408 <__gethex+0x14c>
 80053f2:	9801      	ldr	r0, [sp, #4]
 80053f4:	f7fe f8ca 	bl	800358c <_Balloc>
 80053f8:	4604      	mov	r4, r0
 80053fa:	b940      	cbnz	r0, 800540e <__gethex+0x152>
 80053fc:	4602      	mov	r2, r0
 80053fe:	21e4      	movs	r1, #228	@ 0xe4
 8005400:	4b5b      	ldr	r3, [pc, #364]	@ (8005570 <__gethex+0x2b4>)
 8005402:	485c      	ldr	r0, [pc, #368]	@ (8005574 <__gethex+0x2b8>)
 8005404:	f7ff fec0 	bl	8005188 <__assert_func>
 8005408:	3101      	adds	r1, #1
 800540a:	105b      	asrs	r3, r3, #1
 800540c:	e7ef      	b.n	80053ee <__gethex+0x132>
 800540e:	2300      	movs	r3, #0
 8005410:	f100 0a14 	add.w	sl, r0, #20
 8005414:	4655      	mov	r5, sl
 8005416:	469b      	mov	fp, r3
 8005418:	45b1      	cmp	r9, r6
 800541a:	d337      	bcc.n	800548c <__gethex+0x1d0>
 800541c:	f845 bb04 	str.w	fp, [r5], #4
 8005420:	eba5 050a 	sub.w	r5, r5, sl
 8005424:	10ad      	asrs	r5, r5, #2
 8005426:	6125      	str	r5, [r4, #16]
 8005428:	4658      	mov	r0, fp
 800542a:	f7fe f9a1 	bl	8003770 <__hi0bits>
 800542e:	016d      	lsls	r5, r5, #5
 8005430:	f8d8 6000 	ldr.w	r6, [r8]
 8005434:	1a2d      	subs	r5, r5, r0
 8005436:	42b5      	cmp	r5, r6
 8005438:	dd54      	ble.n	80054e4 <__gethex+0x228>
 800543a:	1bad      	subs	r5, r5, r6
 800543c:	4629      	mov	r1, r5
 800543e:	4620      	mov	r0, r4
 8005440:	f7fe fd29 	bl	8003e96 <__any_on>
 8005444:	4681      	mov	r9, r0
 8005446:	b178      	cbz	r0, 8005468 <__gethex+0x1ac>
 8005448:	f04f 0901 	mov.w	r9, #1
 800544c:	1e6b      	subs	r3, r5, #1
 800544e:	1159      	asrs	r1, r3, #5
 8005450:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005454:	f003 021f 	and.w	r2, r3, #31
 8005458:	fa09 f202 	lsl.w	r2, r9, r2
 800545c:	420a      	tst	r2, r1
 800545e:	d003      	beq.n	8005468 <__gethex+0x1ac>
 8005460:	454b      	cmp	r3, r9
 8005462:	dc36      	bgt.n	80054d2 <__gethex+0x216>
 8005464:	f04f 0902 	mov.w	r9, #2
 8005468:	4629      	mov	r1, r5
 800546a:	4620      	mov	r0, r4
 800546c:	f7ff febe 	bl	80051ec <rshift>
 8005470:	442f      	add	r7, r5
 8005472:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005476:	42bb      	cmp	r3, r7
 8005478:	da42      	bge.n	8005500 <__gethex+0x244>
 800547a:	4621      	mov	r1, r4
 800547c:	9801      	ldr	r0, [sp, #4]
 800547e:	f7fe f8c5 	bl	800360c <_Bfree>
 8005482:	2300      	movs	r3, #0
 8005484:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005486:	25a3      	movs	r5, #163	@ 0xa3
 8005488:	6013      	str	r3, [r2, #0]
 800548a:	e793      	b.n	80053b4 <__gethex+0xf8>
 800548c:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005490:	2a2e      	cmp	r2, #46	@ 0x2e
 8005492:	d012      	beq.n	80054ba <__gethex+0x1fe>
 8005494:	2b20      	cmp	r3, #32
 8005496:	d104      	bne.n	80054a2 <__gethex+0x1e6>
 8005498:	f845 bb04 	str.w	fp, [r5], #4
 800549c:	f04f 0b00 	mov.w	fp, #0
 80054a0:	465b      	mov	r3, fp
 80054a2:	7830      	ldrb	r0, [r6, #0]
 80054a4:	9303      	str	r3, [sp, #12]
 80054a6:	f7ff fef4 	bl	8005292 <__hexdig_fun>
 80054aa:	9b03      	ldr	r3, [sp, #12]
 80054ac:	f000 000f 	and.w	r0, r0, #15
 80054b0:	4098      	lsls	r0, r3
 80054b2:	ea4b 0b00 	orr.w	fp, fp, r0
 80054b6:	3304      	adds	r3, #4
 80054b8:	e7ae      	b.n	8005418 <__gethex+0x15c>
 80054ba:	45b1      	cmp	r9, r6
 80054bc:	d8ea      	bhi.n	8005494 <__gethex+0x1d8>
 80054be:	2201      	movs	r2, #1
 80054c0:	4630      	mov	r0, r6
 80054c2:	492a      	ldr	r1, [pc, #168]	@ (800556c <__gethex+0x2b0>)
 80054c4:	9303      	str	r3, [sp, #12]
 80054c6:	f7ff fe00 	bl	80050ca <strncmp>
 80054ca:	9b03      	ldr	r3, [sp, #12]
 80054cc:	2800      	cmp	r0, #0
 80054ce:	d1e1      	bne.n	8005494 <__gethex+0x1d8>
 80054d0:	e7a2      	b.n	8005418 <__gethex+0x15c>
 80054d2:	4620      	mov	r0, r4
 80054d4:	1ea9      	subs	r1, r5, #2
 80054d6:	f7fe fcde 	bl	8003e96 <__any_on>
 80054da:	2800      	cmp	r0, #0
 80054dc:	d0c2      	beq.n	8005464 <__gethex+0x1a8>
 80054de:	f04f 0903 	mov.w	r9, #3
 80054e2:	e7c1      	b.n	8005468 <__gethex+0x1ac>
 80054e4:	da09      	bge.n	80054fa <__gethex+0x23e>
 80054e6:	1b75      	subs	r5, r6, r5
 80054e8:	4621      	mov	r1, r4
 80054ea:	462a      	mov	r2, r5
 80054ec:	9801      	ldr	r0, [sp, #4]
 80054ee:	f7fe faa3 	bl	8003a38 <__lshift>
 80054f2:	4604      	mov	r4, r0
 80054f4:	1b7f      	subs	r7, r7, r5
 80054f6:	f100 0a14 	add.w	sl, r0, #20
 80054fa:	f04f 0900 	mov.w	r9, #0
 80054fe:	e7b8      	b.n	8005472 <__gethex+0x1b6>
 8005500:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005504:	42bd      	cmp	r5, r7
 8005506:	dd6f      	ble.n	80055e8 <__gethex+0x32c>
 8005508:	1bed      	subs	r5, r5, r7
 800550a:	42ae      	cmp	r6, r5
 800550c:	dc34      	bgt.n	8005578 <__gethex+0x2bc>
 800550e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005512:	2b02      	cmp	r3, #2
 8005514:	d022      	beq.n	800555c <__gethex+0x2a0>
 8005516:	2b03      	cmp	r3, #3
 8005518:	d024      	beq.n	8005564 <__gethex+0x2a8>
 800551a:	2b01      	cmp	r3, #1
 800551c:	d115      	bne.n	800554a <__gethex+0x28e>
 800551e:	42ae      	cmp	r6, r5
 8005520:	d113      	bne.n	800554a <__gethex+0x28e>
 8005522:	2e01      	cmp	r6, #1
 8005524:	d10b      	bne.n	800553e <__gethex+0x282>
 8005526:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800552a:	9a02      	ldr	r2, [sp, #8]
 800552c:	2562      	movs	r5, #98	@ 0x62
 800552e:	6013      	str	r3, [r2, #0]
 8005530:	2301      	movs	r3, #1
 8005532:	6123      	str	r3, [r4, #16]
 8005534:	f8ca 3000 	str.w	r3, [sl]
 8005538:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800553a:	601c      	str	r4, [r3, #0]
 800553c:	e73a      	b.n	80053b4 <__gethex+0xf8>
 800553e:	4620      	mov	r0, r4
 8005540:	1e71      	subs	r1, r6, #1
 8005542:	f7fe fca8 	bl	8003e96 <__any_on>
 8005546:	2800      	cmp	r0, #0
 8005548:	d1ed      	bne.n	8005526 <__gethex+0x26a>
 800554a:	4621      	mov	r1, r4
 800554c:	9801      	ldr	r0, [sp, #4]
 800554e:	f7fe f85d 	bl	800360c <_Bfree>
 8005552:	2300      	movs	r3, #0
 8005554:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005556:	2550      	movs	r5, #80	@ 0x50
 8005558:	6013      	str	r3, [r2, #0]
 800555a:	e72b      	b.n	80053b4 <__gethex+0xf8>
 800555c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800555e:	2b00      	cmp	r3, #0
 8005560:	d1f3      	bne.n	800554a <__gethex+0x28e>
 8005562:	e7e0      	b.n	8005526 <__gethex+0x26a>
 8005564:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005566:	2b00      	cmp	r3, #0
 8005568:	d1dd      	bne.n	8005526 <__gethex+0x26a>
 800556a:	e7ee      	b.n	800554a <__gethex+0x28e>
 800556c:	08005f30 	.word	0x08005f30
 8005570:	08005dca 	.word	0x08005dca
 8005574:	080060de 	.word	0x080060de
 8005578:	1e6f      	subs	r7, r5, #1
 800557a:	f1b9 0f00 	cmp.w	r9, #0
 800557e:	d130      	bne.n	80055e2 <__gethex+0x326>
 8005580:	b127      	cbz	r7, 800558c <__gethex+0x2d0>
 8005582:	4639      	mov	r1, r7
 8005584:	4620      	mov	r0, r4
 8005586:	f7fe fc86 	bl	8003e96 <__any_on>
 800558a:	4681      	mov	r9, r0
 800558c:	2301      	movs	r3, #1
 800558e:	4629      	mov	r1, r5
 8005590:	1b76      	subs	r6, r6, r5
 8005592:	2502      	movs	r5, #2
 8005594:	117a      	asrs	r2, r7, #5
 8005596:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800559a:	f007 071f 	and.w	r7, r7, #31
 800559e:	40bb      	lsls	r3, r7
 80055a0:	4213      	tst	r3, r2
 80055a2:	4620      	mov	r0, r4
 80055a4:	bf18      	it	ne
 80055a6:	f049 0902 	orrne.w	r9, r9, #2
 80055aa:	f7ff fe1f 	bl	80051ec <rshift>
 80055ae:	f8d8 7004 	ldr.w	r7, [r8, #4]
 80055b2:	f1b9 0f00 	cmp.w	r9, #0
 80055b6:	d047      	beq.n	8005648 <__gethex+0x38c>
 80055b8:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80055bc:	2b02      	cmp	r3, #2
 80055be:	d015      	beq.n	80055ec <__gethex+0x330>
 80055c0:	2b03      	cmp	r3, #3
 80055c2:	d017      	beq.n	80055f4 <__gethex+0x338>
 80055c4:	2b01      	cmp	r3, #1
 80055c6:	d109      	bne.n	80055dc <__gethex+0x320>
 80055c8:	f019 0f02 	tst.w	r9, #2
 80055cc:	d006      	beq.n	80055dc <__gethex+0x320>
 80055ce:	f8da 3000 	ldr.w	r3, [sl]
 80055d2:	ea49 0903 	orr.w	r9, r9, r3
 80055d6:	f019 0f01 	tst.w	r9, #1
 80055da:	d10e      	bne.n	80055fa <__gethex+0x33e>
 80055dc:	f045 0510 	orr.w	r5, r5, #16
 80055e0:	e032      	b.n	8005648 <__gethex+0x38c>
 80055e2:	f04f 0901 	mov.w	r9, #1
 80055e6:	e7d1      	b.n	800558c <__gethex+0x2d0>
 80055e8:	2501      	movs	r5, #1
 80055ea:	e7e2      	b.n	80055b2 <__gethex+0x2f6>
 80055ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80055ee:	f1c3 0301 	rsb	r3, r3, #1
 80055f2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80055f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80055f6:	2b00      	cmp	r3, #0
 80055f8:	d0f0      	beq.n	80055dc <__gethex+0x320>
 80055fa:	f04f 0c00 	mov.w	ip, #0
 80055fe:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005602:	f104 0314 	add.w	r3, r4, #20
 8005606:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800560a:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800560e:	4618      	mov	r0, r3
 8005610:	f853 2b04 	ldr.w	r2, [r3], #4
 8005614:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 8005618:	d01b      	beq.n	8005652 <__gethex+0x396>
 800561a:	3201      	adds	r2, #1
 800561c:	6002      	str	r2, [r0, #0]
 800561e:	2d02      	cmp	r5, #2
 8005620:	f104 0314 	add.w	r3, r4, #20
 8005624:	d13c      	bne.n	80056a0 <__gethex+0x3e4>
 8005626:	f8d8 2000 	ldr.w	r2, [r8]
 800562a:	3a01      	subs	r2, #1
 800562c:	42b2      	cmp	r2, r6
 800562e:	d109      	bne.n	8005644 <__gethex+0x388>
 8005630:	2201      	movs	r2, #1
 8005632:	1171      	asrs	r1, r6, #5
 8005634:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005638:	f006 061f 	and.w	r6, r6, #31
 800563c:	fa02 f606 	lsl.w	r6, r2, r6
 8005640:	421e      	tst	r6, r3
 8005642:	d13a      	bne.n	80056ba <__gethex+0x3fe>
 8005644:	f045 0520 	orr.w	r5, r5, #32
 8005648:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800564a:	601c      	str	r4, [r3, #0]
 800564c:	9b02      	ldr	r3, [sp, #8]
 800564e:	601f      	str	r7, [r3, #0]
 8005650:	e6b0      	b.n	80053b4 <__gethex+0xf8>
 8005652:	4299      	cmp	r1, r3
 8005654:	f843 cc04 	str.w	ip, [r3, #-4]
 8005658:	d8d9      	bhi.n	800560e <__gethex+0x352>
 800565a:	68a3      	ldr	r3, [r4, #8]
 800565c:	459b      	cmp	fp, r3
 800565e:	db17      	blt.n	8005690 <__gethex+0x3d4>
 8005660:	6861      	ldr	r1, [r4, #4]
 8005662:	9801      	ldr	r0, [sp, #4]
 8005664:	3101      	adds	r1, #1
 8005666:	f7fd ff91 	bl	800358c <_Balloc>
 800566a:	4681      	mov	r9, r0
 800566c:	b918      	cbnz	r0, 8005676 <__gethex+0x3ba>
 800566e:	4602      	mov	r2, r0
 8005670:	2184      	movs	r1, #132	@ 0x84
 8005672:	4b19      	ldr	r3, [pc, #100]	@ (80056d8 <__gethex+0x41c>)
 8005674:	e6c5      	b.n	8005402 <__gethex+0x146>
 8005676:	6922      	ldr	r2, [r4, #16]
 8005678:	f104 010c 	add.w	r1, r4, #12
 800567c:	3202      	adds	r2, #2
 800567e:	0092      	lsls	r2, r2, #2
 8005680:	300c      	adds	r0, #12
 8005682:	f7ff fd6d 	bl	8005160 <memcpy>
 8005686:	4621      	mov	r1, r4
 8005688:	9801      	ldr	r0, [sp, #4]
 800568a:	f7fd ffbf 	bl	800360c <_Bfree>
 800568e:	464c      	mov	r4, r9
 8005690:	6923      	ldr	r3, [r4, #16]
 8005692:	1c5a      	adds	r2, r3, #1
 8005694:	6122      	str	r2, [r4, #16]
 8005696:	2201      	movs	r2, #1
 8005698:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800569c:	615a      	str	r2, [r3, #20]
 800569e:	e7be      	b.n	800561e <__gethex+0x362>
 80056a0:	6922      	ldr	r2, [r4, #16]
 80056a2:	455a      	cmp	r2, fp
 80056a4:	dd0b      	ble.n	80056be <__gethex+0x402>
 80056a6:	2101      	movs	r1, #1
 80056a8:	4620      	mov	r0, r4
 80056aa:	f7ff fd9f 	bl	80051ec <rshift>
 80056ae:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80056b2:	3701      	adds	r7, #1
 80056b4:	42bb      	cmp	r3, r7
 80056b6:	f6ff aee0 	blt.w	800547a <__gethex+0x1be>
 80056ba:	2501      	movs	r5, #1
 80056bc:	e7c2      	b.n	8005644 <__gethex+0x388>
 80056be:	f016 061f 	ands.w	r6, r6, #31
 80056c2:	d0fa      	beq.n	80056ba <__gethex+0x3fe>
 80056c4:	4453      	add	r3, sl
 80056c6:	f853 0c04 	ldr.w	r0, [r3, #-4]
 80056ca:	f7fe f851 	bl	8003770 <__hi0bits>
 80056ce:	f1c6 0620 	rsb	r6, r6, #32
 80056d2:	42b0      	cmp	r0, r6
 80056d4:	dbe7      	blt.n	80056a6 <__gethex+0x3ea>
 80056d6:	e7f0      	b.n	80056ba <__gethex+0x3fe>
 80056d8:	08005dca 	.word	0x08005dca

080056dc <L_shift>:
 80056dc:	f1c2 0208 	rsb	r2, r2, #8
 80056e0:	0092      	lsls	r2, r2, #2
 80056e2:	b570      	push	{r4, r5, r6, lr}
 80056e4:	f1c2 0620 	rsb	r6, r2, #32
 80056e8:	6843      	ldr	r3, [r0, #4]
 80056ea:	6804      	ldr	r4, [r0, #0]
 80056ec:	fa03 f506 	lsl.w	r5, r3, r6
 80056f0:	432c      	orrs	r4, r5
 80056f2:	40d3      	lsrs	r3, r2
 80056f4:	6004      	str	r4, [r0, #0]
 80056f6:	f840 3f04 	str.w	r3, [r0, #4]!
 80056fa:	4288      	cmp	r0, r1
 80056fc:	d3f4      	bcc.n	80056e8 <L_shift+0xc>
 80056fe:	bd70      	pop	{r4, r5, r6, pc}

08005700 <__match>:
 8005700:	b530      	push	{r4, r5, lr}
 8005702:	6803      	ldr	r3, [r0, #0]
 8005704:	3301      	adds	r3, #1
 8005706:	f811 4b01 	ldrb.w	r4, [r1], #1
 800570a:	b914      	cbnz	r4, 8005712 <__match+0x12>
 800570c:	6003      	str	r3, [r0, #0]
 800570e:	2001      	movs	r0, #1
 8005710:	bd30      	pop	{r4, r5, pc}
 8005712:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005716:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800571a:	2d19      	cmp	r5, #25
 800571c:	bf98      	it	ls
 800571e:	3220      	addls	r2, #32
 8005720:	42a2      	cmp	r2, r4
 8005722:	d0f0      	beq.n	8005706 <__match+0x6>
 8005724:	2000      	movs	r0, #0
 8005726:	e7f3      	b.n	8005710 <__match+0x10>

08005728 <__hexnan>:
 8005728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800572c:	2500      	movs	r5, #0
 800572e:	680b      	ldr	r3, [r1, #0]
 8005730:	4682      	mov	sl, r0
 8005732:	115e      	asrs	r6, r3, #5
 8005734:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005738:	f013 031f 	ands.w	r3, r3, #31
 800573c:	bf18      	it	ne
 800573e:	3604      	addne	r6, #4
 8005740:	1f37      	subs	r7, r6, #4
 8005742:	4690      	mov	r8, r2
 8005744:	46b9      	mov	r9, r7
 8005746:	463c      	mov	r4, r7
 8005748:	46ab      	mov	fp, r5
 800574a:	b087      	sub	sp, #28
 800574c:	6801      	ldr	r1, [r0, #0]
 800574e:	9301      	str	r3, [sp, #4]
 8005750:	f846 5c04 	str.w	r5, [r6, #-4]
 8005754:	9502      	str	r5, [sp, #8]
 8005756:	784a      	ldrb	r2, [r1, #1]
 8005758:	1c4b      	adds	r3, r1, #1
 800575a:	9303      	str	r3, [sp, #12]
 800575c:	b342      	cbz	r2, 80057b0 <__hexnan+0x88>
 800575e:	4610      	mov	r0, r2
 8005760:	9105      	str	r1, [sp, #20]
 8005762:	9204      	str	r2, [sp, #16]
 8005764:	f7ff fd95 	bl	8005292 <__hexdig_fun>
 8005768:	2800      	cmp	r0, #0
 800576a:	d151      	bne.n	8005810 <__hexnan+0xe8>
 800576c:	9a04      	ldr	r2, [sp, #16]
 800576e:	9905      	ldr	r1, [sp, #20]
 8005770:	2a20      	cmp	r2, #32
 8005772:	d818      	bhi.n	80057a6 <__hexnan+0x7e>
 8005774:	9b02      	ldr	r3, [sp, #8]
 8005776:	459b      	cmp	fp, r3
 8005778:	dd13      	ble.n	80057a2 <__hexnan+0x7a>
 800577a:	454c      	cmp	r4, r9
 800577c:	d206      	bcs.n	800578c <__hexnan+0x64>
 800577e:	2d07      	cmp	r5, #7
 8005780:	dc04      	bgt.n	800578c <__hexnan+0x64>
 8005782:	462a      	mov	r2, r5
 8005784:	4649      	mov	r1, r9
 8005786:	4620      	mov	r0, r4
 8005788:	f7ff ffa8 	bl	80056dc <L_shift>
 800578c:	4544      	cmp	r4, r8
 800578e:	d952      	bls.n	8005836 <__hexnan+0x10e>
 8005790:	2300      	movs	r3, #0
 8005792:	f1a4 0904 	sub.w	r9, r4, #4
 8005796:	f844 3c04 	str.w	r3, [r4, #-4]
 800579a:	461d      	mov	r5, r3
 800579c:	464c      	mov	r4, r9
 800579e:	f8cd b008 	str.w	fp, [sp, #8]
 80057a2:	9903      	ldr	r1, [sp, #12]
 80057a4:	e7d7      	b.n	8005756 <__hexnan+0x2e>
 80057a6:	2a29      	cmp	r2, #41	@ 0x29
 80057a8:	d157      	bne.n	800585a <__hexnan+0x132>
 80057aa:	3102      	adds	r1, #2
 80057ac:	f8ca 1000 	str.w	r1, [sl]
 80057b0:	f1bb 0f00 	cmp.w	fp, #0
 80057b4:	d051      	beq.n	800585a <__hexnan+0x132>
 80057b6:	454c      	cmp	r4, r9
 80057b8:	d206      	bcs.n	80057c8 <__hexnan+0xa0>
 80057ba:	2d07      	cmp	r5, #7
 80057bc:	dc04      	bgt.n	80057c8 <__hexnan+0xa0>
 80057be:	462a      	mov	r2, r5
 80057c0:	4649      	mov	r1, r9
 80057c2:	4620      	mov	r0, r4
 80057c4:	f7ff ff8a 	bl	80056dc <L_shift>
 80057c8:	4544      	cmp	r4, r8
 80057ca:	d936      	bls.n	800583a <__hexnan+0x112>
 80057cc:	4623      	mov	r3, r4
 80057ce:	f1a8 0204 	sub.w	r2, r8, #4
 80057d2:	f853 1b04 	ldr.w	r1, [r3], #4
 80057d6:	429f      	cmp	r7, r3
 80057d8:	f842 1f04 	str.w	r1, [r2, #4]!
 80057dc:	d2f9      	bcs.n	80057d2 <__hexnan+0xaa>
 80057de:	1b3b      	subs	r3, r7, r4
 80057e0:	f023 0303 	bic.w	r3, r3, #3
 80057e4:	3304      	adds	r3, #4
 80057e6:	3401      	adds	r4, #1
 80057e8:	3e03      	subs	r6, #3
 80057ea:	42b4      	cmp	r4, r6
 80057ec:	bf88      	it	hi
 80057ee:	2304      	movhi	r3, #4
 80057f0:	2200      	movs	r2, #0
 80057f2:	4443      	add	r3, r8
 80057f4:	f843 2b04 	str.w	r2, [r3], #4
 80057f8:	429f      	cmp	r7, r3
 80057fa:	d2fb      	bcs.n	80057f4 <__hexnan+0xcc>
 80057fc:	683b      	ldr	r3, [r7, #0]
 80057fe:	b91b      	cbnz	r3, 8005808 <__hexnan+0xe0>
 8005800:	4547      	cmp	r7, r8
 8005802:	d128      	bne.n	8005856 <__hexnan+0x12e>
 8005804:	2301      	movs	r3, #1
 8005806:	603b      	str	r3, [r7, #0]
 8005808:	2005      	movs	r0, #5
 800580a:	b007      	add	sp, #28
 800580c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005810:	3501      	adds	r5, #1
 8005812:	2d08      	cmp	r5, #8
 8005814:	f10b 0b01 	add.w	fp, fp, #1
 8005818:	dd06      	ble.n	8005828 <__hexnan+0x100>
 800581a:	4544      	cmp	r4, r8
 800581c:	d9c1      	bls.n	80057a2 <__hexnan+0x7a>
 800581e:	2300      	movs	r3, #0
 8005820:	2501      	movs	r5, #1
 8005822:	f844 3c04 	str.w	r3, [r4, #-4]
 8005826:	3c04      	subs	r4, #4
 8005828:	6822      	ldr	r2, [r4, #0]
 800582a:	f000 000f 	and.w	r0, r0, #15
 800582e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005832:	6020      	str	r0, [r4, #0]
 8005834:	e7b5      	b.n	80057a2 <__hexnan+0x7a>
 8005836:	2508      	movs	r5, #8
 8005838:	e7b3      	b.n	80057a2 <__hexnan+0x7a>
 800583a:	9b01      	ldr	r3, [sp, #4]
 800583c:	2b00      	cmp	r3, #0
 800583e:	d0dd      	beq.n	80057fc <__hexnan+0xd4>
 8005840:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005844:	f1c3 0320 	rsb	r3, r3, #32
 8005848:	40da      	lsrs	r2, r3
 800584a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800584e:	4013      	ands	r3, r2
 8005850:	f846 3c04 	str.w	r3, [r6, #-4]
 8005854:	e7d2      	b.n	80057fc <__hexnan+0xd4>
 8005856:	3f04      	subs	r7, #4
 8005858:	e7d0      	b.n	80057fc <__hexnan+0xd4>
 800585a:	2004      	movs	r0, #4
 800585c:	e7d5      	b.n	800580a <__hexnan+0xe2>

0800585e <__ascii_mbtowc>:
 800585e:	b082      	sub	sp, #8
 8005860:	b901      	cbnz	r1, 8005864 <__ascii_mbtowc+0x6>
 8005862:	a901      	add	r1, sp, #4
 8005864:	b142      	cbz	r2, 8005878 <__ascii_mbtowc+0x1a>
 8005866:	b14b      	cbz	r3, 800587c <__ascii_mbtowc+0x1e>
 8005868:	7813      	ldrb	r3, [r2, #0]
 800586a:	600b      	str	r3, [r1, #0]
 800586c:	7812      	ldrb	r2, [r2, #0]
 800586e:	1e10      	subs	r0, r2, #0
 8005870:	bf18      	it	ne
 8005872:	2001      	movne	r0, #1
 8005874:	b002      	add	sp, #8
 8005876:	4770      	bx	lr
 8005878:	4610      	mov	r0, r2
 800587a:	e7fb      	b.n	8005874 <__ascii_mbtowc+0x16>
 800587c:	f06f 0001 	mvn.w	r0, #1
 8005880:	e7f8      	b.n	8005874 <__ascii_mbtowc+0x16>

08005882 <_realloc_r>:
 8005882:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005886:	4680      	mov	r8, r0
 8005888:	4615      	mov	r5, r2
 800588a:	460c      	mov	r4, r1
 800588c:	b921      	cbnz	r1, 8005898 <_realloc_r+0x16>
 800588e:	4611      	mov	r1, r2
 8005890:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005894:	f7fd bdee 	b.w	8003474 <_malloc_r>
 8005898:	b92a      	cbnz	r2, 80058a6 <_realloc_r+0x24>
 800589a:	f7fd fd79 	bl	8003390 <_free_r>
 800589e:	2400      	movs	r4, #0
 80058a0:	4620      	mov	r0, r4
 80058a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058a6:	f000 f840 	bl	800592a <_malloc_usable_size_r>
 80058aa:	4285      	cmp	r5, r0
 80058ac:	4606      	mov	r6, r0
 80058ae:	d802      	bhi.n	80058b6 <_realloc_r+0x34>
 80058b0:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80058b4:	d8f4      	bhi.n	80058a0 <_realloc_r+0x1e>
 80058b6:	4629      	mov	r1, r5
 80058b8:	4640      	mov	r0, r8
 80058ba:	f7fd fddb 	bl	8003474 <_malloc_r>
 80058be:	4607      	mov	r7, r0
 80058c0:	2800      	cmp	r0, #0
 80058c2:	d0ec      	beq.n	800589e <_realloc_r+0x1c>
 80058c4:	42b5      	cmp	r5, r6
 80058c6:	462a      	mov	r2, r5
 80058c8:	4621      	mov	r1, r4
 80058ca:	bf28      	it	cs
 80058cc:	4632      	movcs	r2, r6
 80058ce:	f7ff fc47 	bl	8005160 <memcpy>
 80058d2:	4621      	mov	r1, r4
 80058d4:	4640      	mov	r0, r8
 80058d6:	f7fd fd5b 	bl	8003390 <_free_r>
 80058da:	463c      	mov	r4, r7
 80058dc:	e7e0      	b.n	80058a0 <_realloc_r+0x1e>

080058de <__ascii_wctomb>:
 80058de:	4603      	mov	r3, r0
 80058e0:	4608      	mov	r0, r1
 80058e2:	b141      	cbz	r1, 80058f6 <__ascii_wctomb+0x18>
 80058e4:	2aff      	cmp	r2, #255	@ 0xff
 80058e6:	d904      	bls.n	80058f2 <__ascii_wctomb+0x14>
 80058e8:	228a      	movs	r2, #138	@ 0x8a
 80058ea:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80058ee:	601a      	str	r2, [r3, #0]
 80058f0:	4770      	bx	lr
 80058f2:	2001      	movs	r0, #1
 80058f4:	700a      	strb	r2, [r1, #0]
 80058f6:	4770      	bx	lr

080058f8 <fiprintf>:
 80058f8:	b40e      	push	{r1, r2, r3}
 80058fa:	b503      	push	{r0, r1, lr}
 80058fc:	4601      	mov	r1, r0
 80058fe:	ab03      	add	r3, sp, #12
 8005900:	4805      	ldr	r0, [pc, #20]	@ (8005918 <fiprintf+0x20>)
 8005902:	f853 2b04 	ldr.w	r2, [r3], #4
 8005906:	6800      	ldr	r0, [r0, #0]
 8005908:	9301      	str	r3, [sp, #4]
 800590a:	f000 f83d 	bl	8005988 <_vfiprintf_r>
 800590e:	b002      	add	sp, #8
 8005910:	f85d eb04 	ldr.w	lr, [sp], #4
 8005914:	b003      	add	sp, #12
 8005916:	4770      	bx	lr
 8005918:	20000010 	.word	0x20000010

0800591c <abort>:
 800591c:	2006      	movs	r0, #6
 800591e:	b508      	push	{r3, lr}
 8005920:	f000 f972 	bl	8005c08 <raise>
 8005924:	2001      	movs	r0, #1
 8005926:	f000 f9d9 	bl	8005cdc <_exit>

0800592a <_malloc_usable_size_r>:
 800592a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800592e:	1f18      	subs	r0, r3, #4
 8005930:	2b00      	cmp	r3, #0
 8005932:	bfbc      	itt	lt
 8005934:	580b      	ldrlt	r3, [r1, r0]
 8005936:	18c0      	addlt	r0, r0, r3
 8005938:	4770      	bx	lr

0800593a <__sfputc_r>:
 800593a:	6893      	ldr	r3, [r2, #8]
 800593c:	b410      	push	{r4}
 800593e:	3b01      	subs	r3, #1
 8005940:	2b00      	cmp	r3, #0
 8005942:	6093      	str	r3, [r2, #8]
 8005944:	da07      	bge.n	8005956 <__sfputc_r+0x1c>
 8005946:	6994      	ldr	r4, [r2, #24]
 8005948:	42a3      	cmp	r3, r4
 800594a:	db01      	blt.n	8005950 <__sfputc_r+0x16>
 800594c:	290a      	cmp	r1, #10
 800594e:	d102      	bne.n	8005956 <__sfputc_r+0x1c>
 8005950:	bc10      	pop	{r4}
 8005952:	f7fc bdaa 	b.w	80024aa <__swbuf_r>
 8005956:	6813      	ldr	r3, [r2, #0]
 8005958:	1c58      	adds	r0, r3, #1
 800595a:	6010      	str	r0, [r2, #0]
 800595c:	7019      	strb	r1, [r3, #0]
 800595e:	4608      	mov	r0, r1
 8005960:	bc10      	pop	{r4}
 8005962:	4770      	bx	lr

08005964 <__sfputs_r>:
 8005964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005966:	4606      	mov	r6, r0
 8005968:	460f      	mov	r7, r1
 800596a:	4614      	mov	r4, r2
 800596c:	18d5      	adds	r5, r2, r3
 800596e:	42ac      	cmp	r4, r5
 8005970:	d101      	bne.n	8005976 <__sfputs_r+0x12>
 8005972:	2000      	movs	r0, #0
 8005974:	e007      	b.n	8005986 <__sfputs_r+0x22>
 8005976:	463a      	mov	r2, r7
 8005978:	4630      	mov	r0, r6
 800597a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800597e:	f7ff ffdc 	bl	800593a <__sfputc_r>
 8005982:	1c43      	adds	r3, r0, #1
 8005984:	d1f3      	bne.n	800596e <__sfputs_r+0xa>
 8005986:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005988 <_vfiprintf_r>:
 8005988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800598c:	460d      	mov	r5, r1
 800598e:	4614      	mov	r4, r2
 8005990:	4698      	mov	r8, r3
 8005992:	4606      	mov	r6, r0
 8005994:	b09d      	sub	sp, #116	@ 0x74
 8005996:	b118      	cbz	r0, 80059a0 <_vfiprintf_r+0x18>
 8005998:	6a03      	ldr	r3, [r0, #32]
 800599a:	b90b      	cbnz	r3, 80059a0 <_vfiprintf_r+0x18>
 800599c:	f7fc fcec 	bl	8002378 <__sinit>
 80059a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80059a2:	07d9      	lsls	r1, r3, #31
 80059a4:	d405      	bmi.n	80059b2 <_vfiprintf_r+0x2a>
 80059a6:	89ab      	ldrh	r3, [r5, #12]
 80059a8:	059a      	lsls	r2, r3, #22
 80059aa:	d402      	bmi.n	80059b2 <_vfiprintf_r+0x2a>
 80059ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80059ae:	f7fc fe88 	bl	80026c2 <__retarget_lock_acquire_recursive>
 80059b2:	89ab      	ldrh	r3, [r5, #12]
 80059b4:	071b      	lsls	r3, r3, #28
 80059b6:	d501      	bpl.n	80059bc <_vfiprintf_r+0x34>
 80059b8:	692b      	ldr	r3, [r5, #16]
 80059ba:	b99b      	cbnz	r3, 80059e4 <_vfiprintf_r+0x5c>
 80059bc:	4629      	mov	r1, r5
 80059be:	4630      	mov	r0, r6
 80059c0:	f7fc fdb2 	bl	8002528 <__swsetup_r>
 80059c4:	b170      	cbz	r0, 80059e4 <_vfiprintf_r+0x5c>
 80059c6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80059c8:	07dc      	lsls	r4, r3, #31
 80059ca:	d504      	bpl.n	80059d6 <_vfiprintf_r+0x4e>
 80059cc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80059d0:	b01d      	add	sp, #116	@ 0x74
 80059d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059d6:	89ab      	ldrh	r3, [r5, #12]
 80059d8:	0598      	lsls	r0, r3, #22
 80059da:	d4f7      	bmi.n	80059cc <_vfiprintf_r+0x44>
 80059dc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80059de:	f7fc fe71 	bl	80026c4 <__retarget_lock_release_recursive>
 80059e2:	e7f3      	b.n	80059cc <_vfiprintf_r+0x44>
 80059e4:	2300      	movs	r3, #0
 80059e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80059e8:	2320      	movs	r3, #32
 80059ea:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80059ee:	2330      	movs	r3, #48	@ 0x30
 80059f0:	f04f 0901 	mov.w	r9, #1
 80059f4:	f8cd 800c 	str.w	r8, [sp, #12]
 80059f8:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8005ba4 <_vfiprintf_r+0x21c>
 80059fc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005a00:	4623      	mov	r3, r4
 8005a02:	469a      	mov	sl, r3
 8005a04:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005a08:	b10a      	cbz	r2, 8005a0e <_vfiprintf_r+0x86>
 8005a0a:	2a25      	cmp	r2, #37	@ 0x25
 8005a0c:	d1f9      	bne.n	8005a02 <_vfiprintf_r+0x7a>
 8005a0e:	ebba 0b04 	subs.w	fp, sl, r4
 8005a12:	d00b      	beq.n	8005a2c <_vfiprintf_r+0xa4>
 8005a14:	465b      	mov	r3, fp
 8005a16:	4622      	mov	r2, r4
 8005a18:	4629      	mov	r1, r5
 8005a1a:	4630      	mov	r0, r6
 8005a1c:	f7ff ffa2 	bl	8005964 <__sfputs_r>
 8005a20:	3001      	adds	r0, #1
 8005a22:	f000 80a7 	beq.w	8005b74 <_vfiprintf_r+0x1ec>
 8005a26:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005a28:	445a      	add	r2, fp
 8005a2a:	9209      	str	r2, [sp, #36]	@ 0x24
 8005a2c:	f89a 3000 	ldrb.w	r3, [sl]
 8005a30:	2b00      	cmp	r3, #0
 8005a32:	f000 809f 	beq.w	8005b74 <_vfiprintf_r+0x1ec>
 8005a36:	2300      	movs	r3, #0
 8005a38:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005a3c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005a40:	f10a 0a01 	add.w	sl, sl, #1
 8005a44:	9304      	str	r3, [sp, #16]
 8005a46:	9307      	str	r3, [sp, #28]
 8005a48:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005a4c:	931a      	str	r3, [sp, #104]	@ 0x68
 8005a4e:	4654      	mov	r4, sl
 8005a50:	2205      	movs	r2, #5
 8005a52:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005a56:	4853      	ldr	r0, [pc, #332]	@ (8005ba4 <_vfiprintf_r+0x21c>)
 8005a58:	f7fc fe35 	bl	80026c6 <memchr>
 8005a5c:	9a04      	ldr	r2, [sp, #16]
 8005a5e:	b9d8      	cbnz	r0, 8005a98 <_vfiprintf_r+0x110>
 8005a60:	06d1      	lsls	r1, r2, #27
 8005a62:	bf44      	itt	mi
 8005a64:	2320      	movmi	r3, #32
 8005a66:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005a6a:	0713      	lsls	r3, r2, #28
 8005a6c:	bf44      	itt	mi
 8005a6e:	232b      	movmi	r3, #43	@ 0x2b
 8005a70:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005a74:	f89a 3000 	ldrb.w	r3, [sl]
 8005a78:	2b2a      	cmp	r3, #42	@ 0x2a
 8005a7a:	d015      	beq.n	8005aa8 <_vfiprintf_r+0x120>
 8005a7c:	4654      	mov	r4, sl
 8005a7e:	2000      	movs	r0, #0
 8005a80:	f04f 0c0a 	mov.w	ip, #10
 8005a84:	9a07      	ldr	r2, [sp, #28]
 8005a86:	4621      	mov	r1, r4
 8005a88:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005a8c:	3b30      	subs	r3, #48	@ 0x30
 8005a8e:	2b09      	cmp	r3, #9
 8005a90:	d94b      	bls.n	8005b2a <_vfiprintf_r+0x1a2>
 8005a92:	b1b0      	cbz	r0, 8005ac2 <_vfiprintf_r+0x13a>
 8005a94:	9207      	str	r2, [sp, #28]
 8005a96:	e014      	b.n	8005ac2 <_vfiprintf_r+0x13a>
 8005a98:	eba0 0308 	sub.w	r3, r0, r8
 8005a9c:	fa09 f303 	lsl.w	r3, r9, r3
 8005aa0:	4313      	orrs	r3, r2
 8005aa2:	46a2      	mov	sl, r4
 8005aa4:	9304      	str	r3, [sp, #16]
 8005aa6:	e7d2      	b.n	8005a4e <_vfiprintf_r+0xc6>
 8005aa8:	9b03      	ldr	r3, [sp, #12]
 8005aaa:	1d19      	adds	r1, r3, #4
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	9103      	str	r1, [sp, #12]
 8005ab0:	2b00      	cmp	r3, #0
 8005ab2:	bfbb      	ittet	lt
 8005ab4:	425b      	neglt	r3, r3
 8005ab6:	f042 0202 	orrlt.w	r2, r2, #2
 8005aba:	9307      	strge	r3, [sp, #28]
 8005abc:	9307      	strlt	r3, [sp, #28]
 8005abe:	bfb8      	it	lt
 8005ac0:	9204      	strlt	r2, [sp, #16]
 8005ac2:	7823      	ldrb	r3, [r4, #0]
 8005ac4:	2b2e      	cmp	r3, #46	@ 0x2e
 8005ac6:	d10a      	bne.n	8005ade <_vfiprintf_r+0x156>
 8005ac8:	7863      	ldrb	r3, [r4, #1]
 8005aca:	2b2a      	cmp	r3, #42	@ 0x2a
 8005acc:	d132      	bne.n	8005b34 <_vfiprintf_r+0x1ac>
 8005ace:	9b03      	ldr	r3, [sp, #12]
 8005ad0:	3402      	adds	r4, #2
 8005ad2:	1d1a      	adds	r2, r3, #4
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	9203      	str	r2, [sp, #12]
 8005ad8:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005adc:	9305      	str	r3, [sp, #20]
 8005ade:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8005ba8 <_vfiprintf_r+0x220>
 8005ae2:	2203      	movs	r2, #3
 8005ae4:	4650      	mov	r0, sl
 8005ae6:	7821      	ldrb	r1, [r4, #0]
 8005ae8:	f7fc fded 	bl	80026c6 <memchr>
 8005aec:	b138      	cbz	r0, 8005afe <_vfiprintf_r+0x176>
 8005aee:	2240      	movs	r2, #64	@ 0x40
 8005af0:	9b04      	ldr	r3, [sp, #16]
 8005af2:	eba0 000a 	sub.w	r0, r0, sl
 8005af6:	4082      	lsls	r2, r0
 8005af8:	4313      	orrs	r3, r2
 8005afa:	3401      	adds	r4, #1
 8005afc:	9304      	str	r3, [sp, #16]
 8005afe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005b02:	2206      	movs	r2, #6
 8005b04:	4829      	ldr	r0, [pc, #164]	@ (8005bac <_vfiprintf_r+0x224>)
 8005b06:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005b0a:	f7fc fddc 	bl	80026c6 <memchr>
 8005b0e:	2800      	cmp	r0, #0
 8005b10:	d03f      	beq.n	8005b92 <_vfiprintf_r+0x20a>
 8005b12:	4b27      	ldr	r3, [pc, #156]	@ (8005bb0 <_vfiprintf_r+0x228>)
 8005b14:	bb1b      	cbnz	r3, 8005b5e <_vfiprintf_r+0x1d6>
 8005b16:	9b03      	ldr	r3, [sp, #12]
 8005b18:	3307      	adds	r3, #7
 8005b1a:	f023 0307 	bic.w	r3, r3, #7
 8005b1e:	3308      	adds	r3, #8
 8005b20:	9303      	str	r3, [sp, #12]
 8005b22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005b24:	443b      	add	r3, r7
 8005b26:	9309      	str	r3, [sp, #36]	@ 0x24
 8005b28:	e76a      	b.n	8005a00 <_vfiprintf_r+0x78>
 8005b2a:	460c      	mov	r4, r1
 8005b2c:	2001      	movs	r0, #1
 8005b2e:	fb0c 3202 	mla	r2, ip, r2, r3
 8005b32:	e7a8      	b.n	8005a86 <_vfiprintf_r+0xfe>
 8005b34:	2300      	movs	r3, #0
 8005b36:	f04f 0c0a 	mov.w	ip, #10
 8005b3a:	4619      	mov	r1, r3
 8005b3c:	3401      	adds	r4, #1
 8005b3e:	9305      	str	r3, [sp, #20]
 8005b40:	4620      	mov	r0, r4
 8005b42:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005b46:	3a30      	subs	r2, #48	@ 0x30
 8005b48:	2a09      	cmp	r2, #9
 8005b4a:	d903      	bls.n	8005b54 <_vfiprintf_r+0x1cc>
 8005b4c:	2b00      	cmp	r3, #0
 8005b4e:	d0c6      	beq.n	8005ade <_vfiprintf_r+0x156>
 8005b50:	9105      	str	r1, [sp, #20]
 8005b52:	e7c4      	b.n	8005ade <_vfiprintf_r+0x156>
 8005b54:	4604      	mov	r4, r0
 8005b56:	2301      	movs	r3, #1
 8005b58:	fb0c 2101 	mla	r1, ip, r1, r2
 8005b5c:	e7f0      	b.n	8005b40 <_vfiprintf_r+0x1b8>
 8005b5e:	ab03      	add	r3, sp, #12
 8005b60:	9300      	str	r3, [sp, #0]
 8005b62:	462a      	mov	r2, r5
 8005b64:	4630      	mov	r0, r6
 8005b66:	4b13      	ldr	r3, [pc, #76]	@ (8005bb4 <_vfiprintf_r+0x22c>)
 8005b68:	a904      	add	r1, sp, #16
 8005b6a:	f7fb fdab 	bl	80016c4 <_printf_float>
 8005b6e:	4607      	mov	r7, r0
 8005b70:	1c78      	adds	r0, r7, #1
 8005b72:	d1d6      	bne.n	8005b22 <_vfiprintf_r+0x19a>
 8005b74:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005b76:	07d9      	lsls	r1, r3, #31
 8005b78:	d405      	bmi.n	8005b86 <_vfiprintf_r+0x1fe>
 8005b7a:	89ab      	ldrh	r3, [r5, #12]
 8005b7c:	059a      	lsls	r2, r3, #22
 8005b7e:	d402      	bmi.n	8005b86 <_vfiprintf_r+0x1fe>
 8005b80:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005b82:	f7fc fd9f 	bl	80026c4 <__retarget_lock_release_recursive>
 8005b86:	89ab      	ldrh	r3, [r5, #12]
 8005b88:	065b      	lsls	r3, r3, #25
 8005b8a:	f53f af1f 	bmi.w	80059cc <_vfiprintf_r+0x44>
 8005b8e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b90:	e71e      	b.n	80059d0 <_vfiprintf_r+0x48>
 8005b92:	ab03      	add	r3, sp, #12
 8005b94:	9300      	str	r3, [sp, #0]
 8005b96:	462a      	mov	r2, r5
 8005b98:	4630      	mov	r0, r6
 8005b9a:	4b06      	ldr	r3, [pc, #24]	@ (8005bb4 <_vfiprintf_r+0x22c>)
 8005b9c:	a904      	add	r1, sp, #16
 8005b9e:	f7fc f82f 	bl	8001c00 <_printf_i>
 8005ba2:	e7e4      	b.n	8005b6e <_vfiprintf_r+0x1e6>
 8005ba4:	08006089 	.word	0x08006089
 8005ba8:	0800608f 	.word	0x0800608f
 8005bac:	08006093 	.word	0x08006093
 8005bb0:	080016c5 	.word	0x080016c5
 8005bb4:	08005965 	.word	0x08005965

08005bb8 <_raise_r>:
 8005bb8:	291f      	cmp	r1, #31
 8005bba:	b538      	push	{r3, r4, r5, lr}
 8005bbc:	4605      	mov	r5, r0
 8005bbe:	460c      	mov	r4, r1
 8005bc0:	d904      	bls.n	8005bcc <_raise_r+0x14>
 8005bc2:	2316      	movs	r3, #22
 8005bc4:	6003      	str	r3, [r0, #0]
 8005bc6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005bca:	bd38      	pop	{r3, r4, r5, pc}
 8005bcc:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005bce:	b112      	cbz	r2, 8005bd6 <_raise_r+0x1e>
 8005bd0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005bd4:	b94b      	cbnz	r3, 8005bea <_raise_r+0x32>
 8005bd6:	4628      	mov	r0, r5
 8005bd8:	f000 f830 	bl	8005c3c <_getpid_r>
 8005bdc:	4622      	mov	r2, r4
 8005bde:	4601      	mov	r1, r0
 8005be0:	4628      	mov	r0, r5
 8005be2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005be6:	f000 b817 	b.w	8005c18 <_kill_r>
 8005bea:	2b01      	cmp	r3, #1
 8005bec:	d00a      	beq.n	8005c04 <_raise_r+0x4c>
 8005bee:	1c59      	adds	r1, r3, #1
 8005bf0:	d103      	bne.n	8005bfa <_raise_r+0x42>
 8005bf2:	2316      	movs	r3, #22
 8005bf4:	6003      	str	r3, [r0, #0]
 8005bf6:	2001      	movs	r0, #1
 8005bf8:	e7e7      	b.n	8005bca <_raise_r+0x12>
 8005bfa:	2100      	movs	r1, #0
 8005bfc:	4620      	mov	r0, r4
 8005bfe:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8005c02:	4798      	blx	r3
 8005c04:	2000      	movs	r0, #0
 8005c06:	e7e0      	b.n	8005bca <_raise_r+0x12>

08005c08 <raise>:
 8005c08:	4b02      	ldr	r3, [pc, #8]	@ (8005c14 <raise+0xc>)
 8005c0a:	4601      	mov	r1, r0
 8005c0c:	6818      	ldr	r0, [r3, #0]
 8005c0e:	f7ff bfd3 	b.w	8005bb8 <_raise_r>
 8005c12:	bf00      	nop
 8005c14:	20000010 	.word	0x20000010

08005c18 <_kill_r>:
 8005c18:	b538      	push	{r3, r4, r5, lr}
 8005c1a:	2300      	movs	r3, #0
 8005c1c:	4d06      	ldr	r5, [pc, #24]	@ (8005c38 <_kill_r+0x20>)
 8005c1e:	4604      	mov	r4, r0
 8005c20:	4608      	mov	r0, r1
 8005c22:	4611      	mov	r1, r2
 8005c24:	602b      	str	r3, [r5, #0]
 8005c26:	f000 f82b 	bl	8005c80 <_kill>
 8005c2a:	1c43      	adds	r3, r0, #1
 8005c2c:	d102      	bne.n	8005c34 <_kill_r+0x1c>
 8005c2e:	682b      	ldr	r3, [r5, #0]
 8005c30:	b103      	cbz	r3, 8005c34 <_kill_r+0x1c>
 8005c32:	6023      	str	r3, [r4, #0]
 8005c34:	bd38      	pop	{r3, r4, r5, pc}
 8005c36:	bf00      	nop
 8005c38:	20000370 	.word	0x20000370

08005c3c <_getpid_r>:
 8005c3c:	f000 b810 	b.w	8005c60 <_getpid>

08005c40 <_close>:
 8005c40:	2258      	movs	r2, #88	@ 0x58
 8005c42:	4b02      	ldr	r3, [pc, #8]	@ (8005c4c <_close+0xc>)
 8005c44:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005c48:	601a      	str	r2, [r3, #0]
 8005c4a:	4770      	bx	lr
 8005c4c:	20000370 	.word	0x20000370

08005c50 <_fstat>:
 8005c50:	2258      	movs	r2, #88	@ 0x58
 8005c52:	4b02      	ldr	r3, [pc, #8]	@ (8005c5c <_fstat+0xc>)
 8005c54:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005c58:	601a      	str	r2, [r3, #0]
 8005c5a:	4770      	bx	lr
 8005c5c:	20000370 	.word	0x20000370

08005c60 <_getpid>:
 8005c60:	2258      	movs	r2, #88	@ 0x58
 8005c62:	4b02      	ldr	r3, [pc, #8]	@ (8005c6c <_getpid+0xc>)
 8005c64:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005c68:	601a      	str	r2, [r3, #0]
 8005c6a:	4770      	bx	lr
 8005c6c:	20000370 	.word	0x20000370

08005c70 <_isatty>:
 8005c70:	2258      	movs	r2, #88	@ 0x58
 8005c72:	4b02      	ldr	r3, [pc, #8]	@ (8005c7c <_isatty+0xc>)
 8005c74:	2000      	movs	r0, #0
 8005c76:	601a      	str	r2, [r3, #0]
 8005c78:	4770      	bx	lr
 8005c7a:	bf00      	nop
 8005c7c:	20000370 	.word	0x20000370

08005c80 <_kill>:
 8005c80:	2258      	movs	r2, #88	@ 0x58
 8005c82:	4b02      	ldr	r3, [pc, #8]	@ (8005c8c <_kill+0xc>)
 8005c84:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005c88:	601a      	str	r2, [r3, #0]
 8005c8a:	4770      	bx	lr
 8005c8c:	20000370 	.word	0x20000370

08005c90 <_lseek>:
 8005c90:	2258      	movs	r2, #88	@ 0x58
 8005c92:	4b02      	ldr	r3, [pc, #8]	@ (8005c9c <_lseek+0xc>)
 8005c94:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005c98:	601a      	str	r2, [r3, #0]
 8005c9a:	4770      	bx	lr
 8005c9c:	20000370 	.word	0x20000370

08005ca0 <_read>:
 8005ca0:	2258      	movs	r2, #88	@ 0x58
 8005ca2:	4b02      	ldr	r3, [pc, #8]	@ (8005cac <_read+0xc>)
 8005ca4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005ca8:	601a      	str	r2, [r3, #0]
 8005caa:	4770      	bx	lr
 8005cac:	20000370 	.word	0x20000370

08005cb0 <_sbrk>:
 8005cb0:	4a04      	ldr	r2, [pc, #16]	@ (8005cc4 <_sbrk+0x14>)
 8005cb2:	4603      	mov	r3, r0
 8005cb4:	6811      	ldr	r1, [r2, #0]
 8005cb6:	b909      	cbnz	r1, 8005cbc <_sbrk+0xc>
 8005cb8:	4903      	ldr	r1, [pc, #12]	@ (8005cc8 <_sbrk+0x18>)
 8005cba:	6011      	str	r1, [r2, #0]
 8005cbc:	6810      	ldr	r0, [r2, #0]
 8005cbe:	4403      	add	r3, r0
 8005cc0:	6013      	str	r3, [r2, #0]
 8005cc2:	4770      	bx	lr
 8005cc4:	20000380 	.word	0x20000380
 8005cc8:	20000388 	.word	0x20000388

08005ccc <_write>:
 8005ccc:	2258      	movs	r2, #88	@ 0x58
 8005cce:	4b02      	ldr	r3, [pc, #8]	@ (8005cd8 <_write+0xc>)
 8005cd0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005cd4:	601a      	str	r2, [r3, #0]
 8005cd6:	4770      	bx	lr
 8005cd8:	20000370 	.word	0x20000370

08005cdc <_exit>:
 8005cdc:	e7fe      	b.n	8005cdc <_exit>
	...

08005ce0 <_init>:
 8005ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ce2:	bf00      	nop
 8005ce4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005ce6:	bc08      	pop	{r3}
 8005ce8:	469e      	mov	lr, r3
 8005cea:	4770      	bx	lr

08005cec <_fini>:
 8005cec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cee:	bf00      	nop
 8005cf0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005cf2:	bc08      	pop	{r3}
 8005cf4:	469e      	mov	lr, r3
 8005cf6:	4770      	bx	lr
